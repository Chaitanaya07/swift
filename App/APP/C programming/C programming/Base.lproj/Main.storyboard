<?xml version="1.0" encoding="UTF-8"?>
<document type="com.apple.InterfaceBuilder3.CocoaTouch.Storyboard.XIB" version="3.0" toolsVersion="21507" targetRuntime="iOS.CocoaTouch" propertyAccessControl="none" useAutolayout="YES" useTraitCollections="YES" useSafeAreas="YES" colorMatched="YES" initialViewController="BYZ-38-t0r">
    <device id="retina4_7" orientation="portrait" appearance="light"/>
    <dependencies>
        <plugIn identifier="com.apple.InterfaceBuilder.IBCocoaTouchPlugin" version="21505"/>
        <capability name="Safe area layout guides" minToolsVersion="9.0"/>
        <capability name="System colors in document resources" minToolsVersion="11.0"/>
        <capability name="documents saved in the Xcode 8 format" minToolsVersion="8.0"/>
    </dependencies>
    <scenes>
        <!--View Controller-->
        <scene sceneID="tne-QT-ifu">
            <objects>
                <viewController id="BYZ-38-t0r" customClass="ViewController" customModule="C_programming" customModuleProvider="target" sceneMemberID="viewController">
                    <view key="view" contentMode="scaleToFill" id="8bC-Xf-vdC">
                        <rect key="frame" x="0.0" y="0.0" width="375" height="647"/>
                        <autoresizingMask key="autoresizingMask" widthSizable="YES" heightSizable="YES"/>
                        <subviews>
                            <button opaque="NO" contentMode="scaleToFill" contentHorizontalAlignment="center" contentVerticalAlignment="center" buttonType="system" lineBreakMode="middleTruncation" translatesAutoresizingMaskIntoConstraints="NO" id="zdk-fA-ocu">
                                <rect key="frame" x="135" y="58" width="105" height="18"/>
                                <color key="backgroundColor" systemColor="systemYellowColor"/>
                                <state key="normal" title="Button"/>
                                <buttonConfiguration key="configuration" style="plain" title="THEORY">
                                    <fontDescription key="titleFontDescription" type="boldSystem" pointSize="20"/>
                                </buttonConfiguration>
                                <connections>
                                    <segue destination="OfE-mm-74o" kind="presentation" id="o5Q-KL-XSs"/>
                                </connections>
                            </button>
                            <button opaque="NO" contentMode="scaleToFill" contentHorizontalAlignment="center" contentVerticalAlignment="center" buttonType="system" lineBreakMode="middleTruncation" translatesAutoresizingMaskIntoConstraints="NO" id="bB9-L8-s3B">
                                <rect key="frame" x="118" y="119" width="138" height="18"/>
                                <color key="backgroundColor" systemColor="systemYellowColor"/>
                                <state key="normal" title="Button"/>
                                <buttonConfiguration key="configuration" style="plain" title="PROGRAMS">
                                    <fontDescription key="titleFontDescription" type="boldSystem" pointSize="20"/>
                                </buttonConfiguration>
                                <connections>
                                    <segue destination="Z4V-Sw-RP9" kind="presentation" id="5ih-eH-wND"/>
                                </connections>
                            </button>
                            <button opaque="NO" contentMode="scaleToFill" contentHorizontalAlignment="center" contentVerticalAlignment="center" buttonType="system" lineBreakMode="middleTruncation" translatesAutoresizingMaskIntoConstraints="NO" id="oTj-0t-NiE">
                                <rect key="frame" x="91" y="182" width="192" height="18"/>
                                <color key="backgroundColor" systemColor="systemYellowColor"/>
                                <color key="tintColor" systemColor="tintColor"/>
                                <state key="normal" title="Button"/>
                                <buttonConfiguration key="configuration" style="plain" title="PREVIOUS PAPER">
                                    <fontDescription key="titleFontDescription" type="boldSystem" pointSize="20"/>
                                </buttonConfiguration>
                            </button>
                            <button opaque="NO" contentMode="scaleToFill" contentHorizontalAlignment="center" contentVerticalAlignment="center" buttonType="system" lineBreakMode="middleTruncation" translatesAutoresizingMaskIntoConstraints="NO" id="ag5-a1-25G">
                                <rect key="frame" x="142" y="243" width="91" height="18"/>
                                <color key="backgroundColor" systemColor="systemYellowColor"/>
                                <state key="normal" title="Button"/>
                                <buttonConfiguration key="configuration" style="plain" title="NOTES">
                                    <fontDescription key="titleFontDescription" type="boldSystem" pointSize="20"/>
                                </buttonConfiguration>
                            </button>
                            <button opaque="NO" contentMode="scaleToFill" contentHorizontalAlignment="center" contentVerticalAlignment="center" buttonType="system" lineBreakMode="middleTruncation" translatesAutoresizingMaskIntoConstraints="NO" id="lcY-Y0-69C">
                                <rect key="frame" x="139" y="305" width="97" height="18"/>
                                <color key="backgroundColor" systemColor="systemYellowColor"/>
                                <state key="normal" title="Button"/>
                                <buttonConfiguration key="configuration" style="plain" title="QUIZES">
                                    <fontDescription key="titleFontDescription" type="boldSystem" pointSize="20"/>
                                </buttonConfiguration>
                            </button>
                            <button opaque="NO" contentMode="scaleToFill" contentHorizontalAlignment="center" contentVerticalAlignment="center" buttonType="system" lineBreakMode="middleTruncation" translatesAutoresizingMaskIntoConstraints="NO" id="K9q-dH-ecT">
                                <rect key="frame" x="115" y="374" width="144" height="18"/>
                                <color key="backgroundColor" systemColor="systemYellowColor"/>
                                <state key="normal" title="Button"/>
                                <buttonConfiguration key="configuration" style="plain" title="CHALLENGS">
                                    <fontDescription key="titleFontDescription" type="boldSystem" pointSize="20"/>
                                </buttonConfiguration>
                            </button>
                            <button opaque="NO" contentMode="scaleToFill" contentHorizontalAlignment="center" contentVerticalAlignment="center" buttonType="system" lineBreakMode="middleTruncation" translatesAutoresizingMaskIntoConstraints="NO" id="GCa-bD-GrT">
                                <rect key="frame" x="123" y="436" width="128" height="18"/>
                                <color key="backgroundColor" systemColor="systemYellowColor"/>
                                <state key="normal" title="Button"/>
                                <buttonConfiguration key="configuration" style="plain" title="PROJECTS">
                                    <fontDescription key="titleFontDescription" type="boldSystem" pointSize="20"/>
                                </buttonConfiguration>
                            </button>
                        </subviews>
                        <viewLayoutGuide key="safeArea" id="6Tk-OE-BBY"/>
                        <color key="backgroundColor" systemColor="systemBackgroundColor"/>
                        <constraints>
                            <constraint firstAttribute="bottomMargin" secondItem="zdk-fA-ocu" secondAttribute="bottom" constant="571" id="3KV-VS-pQ1"/>
                            <constraint firstAttribute="trailingMargin" secondItem="zdk-fA-ocu" secondAttribute="trailing" constant="119" id="3Mz-RT-RZT"/>
                            <constraint firstItem="zdk-fA-ocu" firstAttribute="top" secondItem="8bC-Xf-vdC" secondAttribute="topMargin" constant="58" id="6OX-oF-tpN"/>
                            <constraint firstItem="GCa-bD-GrT" firstAttribute="top" secondItem="8bC-Xf-vdC" secondAttribute="topMargin" constant="436" id="AWO-XQ-2uY"/>
                            <constraint firstAttribute="bottomMargin" secondItem="ag5-a1-25G" secondAttribute="bottom" constant="386" id="GbJ-aM-Ieh"/>
                            <constraint firstAttribute="bottomMargin" secondItem="GCa-bD-GrT" secondAttribute="bottom" constant="193" id="Ivn-Zp-hHt"/>
                            <constraint firstItem="bB9-L8-s3B" firstAttribute="leading" secondItem="8bC-Xf-vdC" secondAttribute="leadingMargin" constant="102" id="KgX-WM-lOV"/>
                            <constraint firstAttribute="trailingMargin" secondItem="lcY-Y0-69C" secondAttribute="trailing" constant="123" id="M7T-SU-WTa"/>
                            <constraint firstItem="oTj-0t-NiE" firstAttribute="leading" secondItem="8bC-Xf-vdC" secondAttribute="leadingMargin" constant="75" id="MpF-j8-U5B"/>
                            <constraint firstAttribute="trailingMargin" secondItem="bB9-L8-s3B" secondAttribute="trailing" constant="103" id="Tna-dO-Hrg"/>
                            <constraint firstItem="zdk-fA-ocu" firstAttribute="leading" secondItem="8bC-Xf-vdC" secondAttribute="leadingMargin" constant="119" id="VpH-ii-65I"/>
                            <constraint firstAttribute="bottomMargin" secondItem="lcY-Y0-69C" secondAttribute="bottom" constant="324" id="W6f-g9-HrW"/>
                            <constraint firstItem="K9q-dH-ecT" firstAttribute="leading" secondItem="8bC-Xf-vdC" secondAttribute="leadingMargin" constant="99" id="XOn-iY-NM1"/>
                            <constraint firstAttribute="bottomMargin" secondItem="bB9-L8-s3B" secondAttribute="bottom" constant="510" id="YJi-i3-w8Z"/>
                            <constraint firstAttribute="trailingMargin" secondItem="K9q-dH-ecT" secondAttribute="trailing" constant="100" id="ZSx-dX-p2o"/>
                            <constraint firstItem="K9q-dH-ecT" firstAttribute="top" secondItem="8bC-Xf-vdC" secondAttribute="topMargin" constant="374" id="fK8-sG-qDV"/>
                            <constraint firstItem="bB9-L8-s3B" firstAttribute="top" secondItem="8bC-Xf-vdC" secondAttribute="topMargin" constant="119" id="iQ4-Fk-4C9"/>
                            <constraint firstItem="oTj-0t-NiE" firstAttribute="top" secondItem="8bC-Xf-vdC" secondAttribute="topMargin" constant="182" id="kxQ-lx-UKp"/>
                            <constraint firstItem="ag5-a1-25G" firstAttribute="leading" secondItem="8bC-Xf-vdC" secondAttribute="leadingMargin" constant="126" id="kzr-ix-O2w"/>
                            <constraint firstAttribute="bottomMargin" secondItem="K9q-dH-ecT" secondAttribute="bottom" constant="255" id="lPS-JH-g22"/>
                            <constraint firstItem="ag5-a1-25G" firstAttribute="top" secondItem="8bC-Xf-vdC" secondAttribute="topMargin" constant="243" id="lez-fX-Mjy"/>
                            <constraint firstAttribute="trailingMargin" secondItem="ag5-a1-25G" secondAttribute="trailing" constant="126" id="lx6-2i-y2a"/>
                            <constraint firstAttribute="trailingMargin" secondItem="GCa-bD-GrT" secondAttribute="trailing" constant="108" id="p54-gQ-NZl"/>
                            <constraint firstItem="lcY-Y0-69C" firstAttribute="top" secondItem="8bC-Xf-vdC" secondAttribute="topMargin" constant="305" id="p94-6a-QTE"/>
                            <constraint firstAttribute="bottomMargin" secondItem="oTj-0t-NiE" secondAttribute="bottom" constant="447" id="pc5-H7-gct"/>
                            <constraint firstItem="GCa-bD-GrT" firstAttribute="leading" secondItem="8bC-Xf-vdC" secondAttribute="leadingMargin" constant="107" id="uY7-7f-ZDd"/>
                            <constraint firstItem="lcY-Y0-69C" firstAttribute="leading" secondItem="8bC-Xf-vdC" secondAttribute="leadingMargin" constant="123" id="y8n-9c-RpP"/>
                            <constraint firstAttribute="trailingMargin" secondItem="oTj-0t-NiE" secondAttribute="trailing" constant="76" id="zie-MY-M70"/>
                        </constraints>
                    </view>
                </viewController>
                <placeholder placeholderIdentifier="IBFirstResponder" id="dkx-z0-nzr" sceneMemberID="firstResponder"/>
            </objects>
            <point key="canvasLocation" x="136.80000000000001" y="4.9475262368815596"/>
        </scene>
        <!--View Controller-->
        <scene sceneID="kb0-uE-VWC">
            <objects>
                <viewController id="OfE-mm-74o" sceneMemberID="viewController">
                    <view key="view" contentMode="scaleToFill" id="Hv4-dN-LZw">
                        <rect key="frame" x="0.0" y="0.0" width="375" height="647"/>
                        <autoresizingMask key="autoresizingMask" widthSizable="YES" heightSizable="YES"/>
                        <subviews>
                            <view contentMode="scaleToFill" fixedFrame="YES" translatesAutoresizingMaskIntoConstraints="NO" id="JNQ-PY-lsL">
                                <rect key="frame" x="0.0" y="0.0" width="375" height="667"/>
                                <autoresizingMask key="autoresizingMask" flexibleMaxX="YES" flexibleMaxY="YES"/>
                                <subviews>
                                    <button opaque="NO" contentMode="scaleToFill" fixedFrame="YES" contentHorizontalAlignment="leading" contentVerticalAlignment="center" buttonType="system" lineBreakMode="middleTruncation" translatesAutoresizingMaskIntoConstraints="NO" id="NiA-U0-XVW">
                                        <rect key="frame" x="18" y="195" width="339" height="35"/>
                                        <autoresizingMask key="autoresizingMask" flexibleMaxX="YES" flexibleMaxY="YES"/>
                                        <state key="normal" title="Button"/>
                                        <buttonConfiguration key="configuration" style="plain" title="OPERATORS">
                                            <fontDescription key="titleFontDescription" type="boldSystem" pointSize="20"/>
                                        </buttonConfiguration>
                                        <connections>
                                            <segue destination="A8w-bg-DTP" kind="presentation" id="hyr-0t-bwl"/>
                                        </connections>
                                    </button>
                                    <button opaque="NO" contentMode="scaleToFill" fixedFrame="YES" contentHorizontalAlignment="leading" contentVerticalAlignment="center" buttonType="system" lineBreakMode="middleTruncation" translatesAutoresizingMaskIntoConstraints="NO" id="fBE-2Q-Zqd">
                                        <rect key="frame" x="18" y="72" width="339" height="35"/>
                                        <autoresizingMask key="autoresizingMask" flexibleMaxX="YES" flexibleMaxY="YES"/>
                                        <state key="normal" title="Button"/>
                                        <buttonConfiguration key="configuration" style="plain" title="DATA TYPES">
                                            <fontDescription key="titleFontDescription" type="boldSystem" pointSize="20"/>
                                        </buttonConfiguration>
                                        <connections>
                                            <segue destination="yJn-zD-svY" kind="presentation" id="QDP-mu-NEd"/>
                                        </connections>
                                    </button>
                                    <button opaque="NO" contentMode="scaleToFill" fixedFrame="YES" contentHorizontalAlignment="leading" contentVerticalAlignment="center" buttonType="system" lineBreakMode="middleTruncation" translatesAutoresizingMaskIntoConstraints="NO" id="unF-9f-lUy">
                                        <rect key="frame" x="18" y="115" width="339" height="35"/>
                                        <autoresizingMask key="autoresizingMask" flexibleMaxX="YES" flexibleMaxY="YES"/>
                                        <state key="normal" title="Button"/>
                                        <buttonConfiguration key="configuration" style="plain" title="VARIABLES">
                                            <fontDescription key="titleFontDescription" type="boldSystem" pointSize="20"/>
                                        </buttonConfiguration>
                                        <connections>
                                            <segue destination="yJn-zD-svY" kind="presentation" id="5rE-za-ZcZ"/>
                                        </connections>
                                    </button>
                                    <button opaque="NO" contentMode="scaleToFill" fixedFrame="YES" contentHorizontalAlignment="leading" contentVerticalAlignment="center" buttonType="system" lineBreakMode="middleTruncation" translatesAutoresizingMaskIntoConstraints="NO" id="WAf-zB-HYs">
                                        <rect key="frame" x="18" y="158" width="339" height="35"/>
                                        <autoresizingMask key="autoresizingMask" flexibleMaxX="YES" flexibleMaxY="YES"/>
                                        <state key="normal" title="Button"/>
                                        <buttonConfiguration key="configuration" style="plain" title="DATA INPUT AND OUTPUT">
                                            <fontDescription key="titleFontDescription" type="boldSystem" pointSize="20"/>
                                        </buttonConfiguration>
                                        <connections>
                                            <segue destination="Vf4-pD-aXe" kind="presentation" id="teY-Pg-t04"/>
                                        </connections>
                                    </button>
                                    <button opaque="NO" contentMode="scaleToFill" fixedFrame="YES" contentHorizontalAlignment="leading" contentVerticalAlignment="center" buttonType="system" lineBreakMode="middleTruncation" translatesAutoresizingMaskIntoConstraints="NO" id="RK8-hF-v2R">
                                        <rect key="frame" x="18" y="238" width="339" height="35"/>
                                        <autoresizingMask key="autoresizingMask" flexibleMaxX="YES" flexibleMaxY="YES"/>
                                        <state key="normal" title="Button"/>
                                        <buttonConfiguration key="configuration" style="plain" title="DECISION CONTROL">
                                            <fontDescription key="titleFontDescription" type="boldSystem" pointSize="20"/>
                                        </buttonConfiguration>
                                        <connections>
                                            <segue destination="rdk-eB-m5O" kind="presentation" id="ZLN-eE-baZ"/>
                                        </connections>
                                    </button>
                                    <button opaque="NO" contentMode="scaleToFill" fixedFrame="YES" contentHorizontalAlignment="leading" contentVerticalAlignment="center" buttonType="system" lineBreakMode="middleTruncation" translatesAutoresizingMaskIntoConstraints="NO" id="SKw-5i-6nm">
                                        <rect key="frame" x="18" y="288" width="339" height="35"/>
                                        <autoresizingMask key="autoresizingMask" flexibleMaxX="YES" flexibleMaxY="YES"/>
                                        <state key="normal" title="Button"/>
                                        <buttonConfiguration key="configuration" style="plain" title="LOOP CONTROL STRUCTURE">
                                            <fontDescription key="titleFontDescription" type="boldSystem" pointSize="20"/>
                                        </buttonConfiguration>
                                        <connections>
                                            <segue destination="mJ6-8t-56d" kind="presentation" id="Q7k-y8-0Yr"/>
                                        </connections>
                                    </button>
                                    <button opaque="NO" contentMode="scaleToFill" fixedFrame="YES" contentHorizontalAlignment="leading" contentVerticalAlignment="center" buttonType="system" lineBreakMode="middleTruncation" translatesAutoresizingMaskIntoConstraints="NO" id="kSe-7p-74C">
                                        <rect key="frame" x="18" y="331" width="339" height="35"/>
                                        <autoresizingMask key="autoresizingMask" flexibleMaxX="YES" flexibleMaxY="YES"/>
                                        <state key="normal" title="Button"/>
                                        <buttonConfiguration key="configuration" style="plain" title="ARRAY">
                                            <fontDescription key="titleFontDescription" type="boldSystem" pointSize="20"/>
                                        </buttonConfiguration>
                                        <connections>
                                            <segue destination="pDZ-eh-JoU" kind="presentation" id="Awg-W3-pYW"/>
                                        </connections>
                                    </button>
                                    <button opaque="NO" contentMode="scaleToFill" fixedFrame="YES" contentHorizontalAlignment="leading" contentVerticalAlignment="center" buttonType="system" lineBreakMode="middleTruncation" translatesAutoresizingMaskIntoConstraints="NO" id="Rz1-T1-O1J">
                                        <rect key="frame" x="18" y="366" width="339" height="35"/>
                                        <autoresizingMask key="autoresizingMask" flexibleMaxX="YES" flexibleMaxY="YES"/>
                                        <state key="normal" title="Button"/>
                                        <buttonConfiguration key="configuration" style="plain" title="FUNCTION">
                                            <fontDescription key="titleFontDescription" type="boldSystem" pointSize="20"/>
                                        </buttonConfiguration>
                                        <connections>
                                            <segue destination="iMY-QZ-WU9" kind="presentation" id="ccj-lM-UDP"/>
                                        </connections>
                                    </button>
                                    <button opaque="NO" contentMode="scaleToFill" fixedFrame="YES" contentHorizontalAlignment="leading" contentVerticalAlignment="center" buttonType="system" lineBreakMode="middleTruncation" translatesAutoresizingMaskIntoConstraints="NO" id="3WF-fU-9Tu">
                                        <rect key="frame" x="18" y="452" width="339" height="35"/>
                                        <autoresizingMask key="autoresizingMask" flexibleMaxX="YES" flexibleMaxY="YES"/>
                                        <state key="normal" title="Button"/>
                                        <buttonConfiguration key="configuration" style="plain" title="STORAGE CLASSES">
                                            <fontDescription key="titleFontDescription" type="boldSystem" pointSize="20"/>
                                        </buttonConfiguration>
                                        <connections>
                                            <segue destination="90S-Au-rxk" kind="presentation" id="sgp-5u-dCd"/>
                                        </connections>
                                    </button>
                                    <button opaque="NO" contentMode="scaleToFill" fixedFrame="YES" contentHorizontalAlignment="leading" contentVerticalAlignment="center" buttonType="system" lineBreakMode="middleTruncation" translatesAutoresizingMaskIntoConstraints="NO" id="a0Y-g1-3Fa">
                                        <rect key="frame" x="18" y="495" width="339" height="35"/>
                                        <autoresizingMask key="autoresizingMask" flexibleMaxX="YES" flexibleMaxY="YES"/>
                                        <state key="normal" title="Button"/>
                                        <buttonConfiguration key="configuration" style="plain" title="PREPROCESSOR">
                                            <fontDescription key="titleFontDescription" type="boldSystem" pointSize="20"/>
                                        </buttonConfiguration>
                                        <connections>
                                            <segue destination="lBF-uQ-D7y" kind="presentation" id="j48-b8-K80"/>
                                        </connections>
                                    </button>
                                    <button opaque="NO" contentMode="scaleToFill" fixedFrame="YES" contentHorizontalAlignment="leading" contentVerticalAlignment="center" buttonType="system" lineBreakMode="middleTruncation" translatesAutoresizingMaskIntoConstraints="NO" id="K70-jj-frX">
                                        <rect key="frame" x="18" y="538" width="339" height="35"/>
                                        <autoresizingMask key="autoresizingMask" flexibleMaxX="YES" flexibleMaxY="YES"/>
                                        <state key="normal" title="Button"/>
                                        <buttonConfiguration key="configuration" style="plain" title="POINTERS">
                                            <fontDescription key="titleFontDescription" type="boldSystem" pointSize="20"/>
                                        </buttonConfiguration>
                                        <connections>
                                            <segue destination="eD4-lA-0EF" kind="presentation" id="gMY-4z-mU8"/>
                                        </connections>
                                    </button>
                                    <button opaque="NO" contentMode="scaleToFill" fixedFrame="YES" contentHorizontalAlignment="leading" contentVerticalAlignment="center" buttonType="system" lineBreakMode="middleTruncation" translatesAutoresizingMaskIntoConstraints="NO" id="KxF-Bj-xNn">
                                        <rect key="frame" x="18" y="581" width="339" height="35"/>
                                        <autoresizingMask key="autoresizingMask" flexibleMaxX="YES" flexibleMaxY="YES"/>
                                        <state key="normal" title="Button"/>
                                        <buttonConfiguration key="configuration" style="plain" title="STRUCTURE AND ENUM">
                                            <fontDescription key="titleFontDescription" type="boldSystem" pointSize="20"/>
                                        </buttonConfiguration>
                                        <connections>
                                            <segue destination="DEt-4s-x0T" kind="presentation" id="l5A-GF-0UO"/>
                                        </connections>
                                    </button>
                                    <button opaque="NO" contentMode="scaleToFill" fixedFrame="YES" contentHorizontalAlignment="leading" contentVerticalAlignment="center" buttonType="system" lineBreakMode="middleTruncation" translatesAutoresizingMaskIntoConstraints="NO" id="URK-Nn-pwO">
                                        <rect key="frame" x="18" y="624" width="339" height="35"/>
                                        <autoresizingMask key="autoresizingMask" flexibleMaxX="YES" flexibleMaxY="YES"/>
                                        <state key="normal" title="Button"/>
                                        <buttonConfiguration key="configuration" style="plain" title="COMMAND LINE ARGUMENT">
                                            <fontDescription key="titleFontDescription" type="boldSystem" pointSize="20"/>
                                        </buttonConfiguration>
                                        <connections>
                                            <segue destination="p3d-G2-h5L" kind="presentation" id="01V-bG-2eN"/>
                                        </connections>
                                    </button>
                                    <button opaque="NO" contentMode="scaleToFill" fixedFrame="YES" contentHorizontalAlignment="leading" contentVerticalAlignment="center" buttonType="system" lineBreakMode="middleTruncation" translatesAutoresizingMaskIntoConstraints="NO" id="lci-qC-1mU">
                                        <rect key="frame" x="18" y="409" width="339" height="35"/>
                                        <autoresizingMask key="autoresizingMask" flexibleMaxX="YES" flexibleMaxY="YES"/>
                                        <state key="normal" title="Button"/>
                                        <buttonConfiguration key="configuration" style="plain" title="STRING">
                                            <fontDescription key="titleFontDescription" type="boldSystem" pointSize="20"/>
                                        </buttonConfiguration>
                                        <connections>
                                            <segue destination="CCN-XO-TqU" kind="presentation" id="SRP-4G-8xe"/>
                                        </connections>
                                    </button>
                                    <button opaque="NO" contentMode="scaleToFill" fixedFrame="YES" contentHorizontalAlignment="leading" contentVerticalAlignment="center" buttonType="system" lineBreakMode="middleTruncation" translatesAutoresizingMaskIntoConstraints="NO" id="HWn-i7-nwf">
                                        <rect key="frame" x="18" y="38" width="339" height="35"/>
                                        <autoresizingMask key="autoresizingMask" flexibleMaxX="YES" flexibleMaxY="YES"/>
                                        <state key="normal" title="Button"/>
                                        <buttonConfiguration key="configuration" style="plain" title="INTRODUCTION">
                                            <fontDescription key="titleFontDescription" type="boldSystem" pointSize="20"/>
                                        </buttonConfiguration>
                                        <connections>
                                            <segue destination="LOc-Ul-thD" kind="presentation" id="sSh-nj-JYh"/>
                                        </connections>
                                    </button>
                                </subviews>
                                <color key="backgroundColor" systemColor="systemBackgroundColor"/>
                            </view>
                            <button opaque="NO" contentMode="scaleToFill" fixedFrame="YES" contentHorizontalAlignment="center" contentVerticalAlignment="center" buttonType="system" lineBreakMode="middleTruncation" translatesAutoresizingMaskIntoConstraints="NO" id="XM7-KL-btg">
                                <rect key="frame" x="10" y="10" width="39" height="35"/>
                                <autoresizingMask key="autoresizingMask" flexibleMaxX="YES" flexibleMaxY="YES"/>
                                <state key="normal" title="Button"/>
                                <buttonConfiguration key="configuration" style="plain" title="←"/>
                                <connections>
                                    <segue destination="BYZ-38-t0r" kind="presentation" id="31e-GJ-7hl"/>
                                </connections>
                            </button>
                        </subviews>
                        <viewLayoutGuide key="safeArea" id="4Px-TR-86k"/>
                        <color key="backgroundColor" systemColor="systemBackgroundColor"/>
                    </view>
                </viewController>
                <placeholder placeholderIdentifier="IBFirstResponder" id="KD7-gm-ufJ" userLabel="First Responder" customClass="UIResponder" sceneMemberID="firstResponder"/>
            </objects>
            <point key="canvasLocation" x="817" y="5"/>
        </scene>
        <!--View Controller-->
        <scene sceneID="usQ-FS-gKh">
            <objects>
                <viewController id="LOc-Ul-thD" sceneMemberID="viewController">
                    <view key="view" contentMode="scaleToFill" id="8TH-RE-E1a">
                        <rect key="frame" x="0.0" y="0.0" width="375" height="647"/>
                        <autoresizingMask key="autoresizingMask" widthSizable="YES" heightSizable="YES"/>
                        <subviews>
                            <view contentMode="scaleToFill" fixedFrame="YES" translatesAutoresizingMaskIntoConstraints="NO" id="iPx-ZR-ENq">
                                <rect key="frame" x="0.0" y="0.0" width="375" height="667"/>
                                <autoresizingMask key="autoresizingMask" flexibleMaxX="YES" flexibleMaxY="YES"/>
                                <subviews>
                                    <button opaque="NO" contentMode="scaleToFill" fixedFrame="YES" contentHorizontalAlignment="center" contentVerticalAlignment="center" buttonType="system" lineBreakMode="middleTruncation" translatesAutoresizingMaskIntoConstraints="NO" id="VvH-Cm-TDN">
                                        <rect key="frame" x="7" y="8" width="39" height="35"/>
                                        <autoresizingMask key="autoresizingMask" flexibleMaxX="YES" flexibleMaxY="YES"/>
                                        <state key="normal" title="Button"/>
                                        <buttonConfiguration key="configuration" style="plain" title="←"/>
                                        <connections>
                                            <segue destination="OfE-mm-74o" kind="presentation" id="UBv-GP-XjY"/>
                                        </connections>
                                    </button>
                                    <scrollView clipsSubviews="YES" multipleTouchEnabled="YES" contentMode="scaleToFill" fixedFrame="YES" translatesAutoresizingMaskIntoConstraints="NO" id="vE2-3H-hXZ">
                                        <rect key="frame" x="0.0" y="51" width="375" height="616"/>
                                        <autoresizingMask key="autoresizingMask" flexibleMaxX="YES" flexibleMaxY="YES"/>
                                        <subviews>
                                            <textView clipsSubviews="YES" multipleTouchEnabled="YES" contentMode="scaleToFill" fixedFrame="YES" editable="NO" textAlignment="natural" translatesAutoresizingMaskIntoConstraints="NO" id="lQ5-Pf-TJy">
                                                <rect key="frame" x="0.0" y="0.0" width="375" height="616"/>
                                                <autoresizingMask key="autoresizingMask" flexibleMaxX="YES" flexibleMaxY="YES"/>
                                                <color key="backgroundColor" systemColor="systemBackgroundColor"/>
                                                <string key="text">C is a procedural programming language initially developed by Dennis Ritchie in the year 1972 at Bell Laboratories of AT&amp;T Labs. It was mainly developed as a system programming language to write the UNIX operating system.

The main features of the C language include:

General Purpose and Portable
Low-level Memory Access
Fast Speed
Clean Syntax
These features make the C language suitable for system programmings like an operating system or compiler development.

Why Should We Learn C?
Many later languages have borrowed syntax/features directly or indirectly from the C language. Like syntax of Java, PHP, JavaScript, and many other languages are mainly based on the C language. C++ is nearly a superset of C language (Only a few programs may compile in C, but not in C++).

So,  if a person learns C programming first, it will help him to learn any modern programming language as well. As learning C help to understand a lot of the underlying architecture of the operating system. Like pointers, working with memory locations, etc.

Beginning with C programming:
Writing the First Program in C
The following code is one of the simplest C programs that will help us the basic syntax structure of a C program.

Example:     
#include &lt;stdio.h&gt;
int main() {
  int a = 10;
  printf("%d", a);
  return 0; 
}




Output : 
10                
</string>
                                                <color key="textColor" systemColor="labelColor"/>
                                                <fontDescription key="fontDescription" type="system" weight="semibold" pointSize="17"/>
                                                <textInputTraits key="textInputTraits" autocapitalizationType="sentences"/>
                                            </textView>
                                        </subviews>
                                        <viewLayoutGuide key="contentLayoutGuide" id="G1b-kD-Csz"/>
                                        <viewLayoutGuide key="frameLayoutGuide" id="DHv-uX-6A5"/>
                                    </scrollView>
                                </subviews>
                                <color key="backgroundColor" systemColor="systemBackgroundColor"/>
                            </view>
                        </subviews>
                        <viewLayoutGuide key="safeArea" id="Bb5-mg-qFJ"/>
                        <color key="backgroundColor" systemColor="systemBackgroundColor"/>
                    </view>
                </viewController>
                <placeholder placeholderIdentifier="IBFirstResponder" id="36F-pY-jsy" userLabel="First Responder" customClass="UIResponder" sceneMemberID="firstResponder"/>
            </objects>
            <point key="canvasLocation" x="1576.8" y="0.44977511244377816"/>
        </scene>
        <!--View Controller-->
        <scene sceneID="9ys-BG-J7a">
            <objects>
                <viewController id="yJn-zD-svY" sceneMemberID="viewController">
                    <view key="view" contentMode="scaleToFill" id="4FP-Gh-sog">
                        <rect key="frame" x="0.0" y="0.0" width="375" height="647"/>
                        <autoresizingMask key="autoresizingMask" widthSizable="YES" heightSizable="YES"/>
                        <subviews>
                            <button opaque="NO" contentMode="scaleToFill" fixedFrame="YES" contentHorizontalAlignment="center" contentVerticalAlignment="center" buttonType="system" lineBreakMode="middleTruncation" translatesAutoresizingMaskIntoConstraints="NO" id="uKC-2c-yb5">
                                <rect key="frame" x="5" y="10" width="39" height="35"/>
                                <autoresizingMask key="autoresizingMask" flexibleMaxX="YES" flexibleMaxY="YES"/>
                                <state key="normal" title="Button"/>
                                <buttonConfiguration key="configuration" style="plain" title="←"/>
                                <connections>
                                    <segue destination="OfE-mm-74o" kind="presentation" id="fjW-HD-OQO"/>
                                </connections>
                            </button>
                            <scrollView clipsSubviews="YES" multipleTouchEnabled="YES" contentMode="scaleToFill" fixedFrame="YES" translatesAutoresizingMaskIntoConstraints="NO" id="GDY-Ha-uy0">
                                <rect key="frame" x="0.0" y="53" width="375" height="614"/>
                                <autoresizingMask key="autoresizingMask" flexibleMaxX="YES" flexibleMaxY="YES"/>
                                <subviews>
                                    <textView clipsSubviews="YES" multipleTouchEnabled="YES" contentMode="scaleToFill" fixedFrame="YES" textAlignment="natural" translatesAutoresizingMaskIntoConstraints="NO" id="Fst-YQ-Hre">
                                        <rect key="frame" x="0.0" y="0.0" width="384" height="614"/>
                                        <autoresizingMask key="autoresizingMask" flexibleMaxX="YES" flexibleMaxY="YES"/>
                                        <color key="backgroundColor" systemColor="systemBackgroundColor"/>
                                        <string key="text">Each variable in C has an associated data type. Each data type requires different amounts of memory and has some specific operations which can be performed over it. It specifies the type of data that the variable can store like integer, character, floating, double, etc. The data type is a collection of data with values having fixed values, meaning as well as its characteristics. 


The data types in C can be classified as follows:


Primitive Data Types :
Arithmetic types can be further classified into integer and floating data types.

Void Types :
The data type has no value or operator and it does not provide a result to its caller. But void comes under Primitive data types

User Defined DataTypes :
It is mainly used to assign names to integral constants, which make a program easy to read and maintain

Derived types :
The data types that are derived from the primitive or built-in datatypes are referred to as Derived Data Types.

Most used basic Types : 

1. Int 
2. Char
3. Float
4. Double
5. Short Int
6. Unsigned int 
7. Long int 
8. Long Long int
9. Unsigned long int 
10. Unsigned long long int
11. Signed Char
12. Unsigned Char
13. Long double 




</string>
                                        <color key="textColor" systemColor="labelColor"/>
                                        <fontDescription key="fontDescription" type="system" pointSize="14"/>
                                        <textInputTraits key="textInputTraits" autocapitalizationType="sentences"/>
                                    </textView>
                                </subviews>
                                <viewLayoutGuide key="contentLayoutGuide" id="u69-cE-QJW"/>
                                <viewLayoutGuide key="frameLayoutGuide" id="Wid-tZ-ebB"/>
                            </scrollView>
                        </subviews>
                        <viewLayoutGuide key="safeArea" id="qnP-tf-bp2"/>
                        <color key="backgroundColor" systemColor="systemBackgroundColor"/>
                    </view>
                </viewController>
                <placeholder placeholderIdentifier="IBFirstResponder" id="3JO-I1-Tkq" userLabel="First Responder" customClass="UIResponder" sceneMemberID="firstResponder"/>
            </objects>
            <point key="canvasLocation" x="2209" y="0.0"/>
        </scene>
        <!--View Controller-->
        <scene sceneID="2jt-f7-U0o">
            <objects>
                <viewController id="Vf4-pD-aXe" sceneMemberID="viewController">
                    <view key="view" contentMode="scaleToFill" id="Gae-fw-lKs">
                        <rect key="frame" x="0.0" y="0.0" width="375" height="647"/>
                        <autoresizingMask key="autoresizingMask" widthSizable="YES" heightSizable="YES"/>
                        <subviews>
                            <button opaque="NO" contentMode="scaleToFill" fixedFrame="YES" contentHorizontalAlignment="center" contentVerticalAlignment="center" buttonType="system" lineBreakMode="middleTruncation" translatesAutoresizingMaskIntoConstraints="NO" id="CA8-Ob-1Qp">
                                <rect key="frame" x="16" y="9" width="39" height="35"/>
                                <autoresizingMask key="autoresizingMask" flexibleMaxX="YES" flexibleMaxY="YES"/>
                                <state key="normal" title="Button"/>
                                <buttonConfiguration key="configuration" style="plain" title="←"/>
                            </button>
                            <scrollView clipsSubviews="YES" multipleTouchEnabled="YES" contentMode="scaleToFill" fixedFrame="YES" translatesAutoresizingMaskIntoConstraints="NO" id="wvx-PD-A0R">
                                <rect key="frame" x="0.0" y="52" width="375" height="615"/>
                                <autoresizingMask key="autoresizingMask" flexibleMaxX="YES" flexibleMaxY="YES"/>
                                <subviews>
                                    <textView clipsSubviews="YES" multipleTouchEnabled="YES" contentMode="scaleToFill" fixedFrame="YES" textAlignment="natural" translatesAutoresizingMaskIntoConstraints="NO" id="7Jj-4c-yM6">
                                        <rect key="frame" x="0.0" y="0.0" width="375" height="615"/>
                                        <autoresizingMask key="autoresizingMask" flexibleMaxX="YES" flexibleMaxY="YES"/>
                                        <color key="backgroundColor" systemColor="systemBackgroundColor"/>
                                        <string key="text">When we say Input, it means to feed some data into a program. An input can be given in the form of a file or from the command line. C programming provides a set of built-in functions to read the given input and feed it to the program as per requirement.
When we say Output, it means to display some data on screen, printer, or in any file. C programming provides a set of built-in functions to output the data on the computer screen as well as to save it in text or binary files.

The Standard Files
C programming treats all the devices as files. So devices such as the display are addressed in the same way as files and the following three files are automatically opened when a program executes to provide access to the keyboard and screen.

File Name  
Standard input


File Pointer :
stdin


File Name  
Standard output


File Pointer :
stdout


The getchar() and putchar() Functions
The int getchar(void) function reads the next available character from the screen and returns it as an integer. This function reads only single character at a time. You can use this method in the loop in case you want to read more than one character from the screen.
The int putchar(int c) function puts the passed character on the screen and returns the same character. This function puts only single character at a time. You can use this method in the loop in case you want to display more than one character on the screen. Check the following example −
#include &lt;stdio.h&gt;
int main( ) {

   int c;

   printf( "Enter a value :");
   c = getchar( );

   printf( "\nYou entered: ");
   putchar( c );

   return 0;
}
When the above code is compiled and executed, it waits for you to input some text. When you enter a text and press enter, then the program proceeds and reads only a single character and displays it as follows −
$./a.out
Enter a value : this is test
You entered: t
The gets() and puts() Functions
The char *gets(char *s) function reads a line from stdin into the buffer pointed to by s until either a terminating newline or EOF (End of File).
The int puts(const char *s) function writes the string 's' and 'a' trailing newline to stdout.
NOTE: Though it has been deprecated to use gets() function, Instead of using gets, you want to use fgets().
#include &lt;stdio.h&gt;
int main( ) {

   char str[100];

   printf( "Enter a value :");
   gets( str );

   printf( "\nYou entered: ");
   puts( str );

   return 0;
}
When the above code is compiled and executed, it waits for you to input some text. When you enter a text and press enter, then the program proceeds and reads the complete line till end, and displays it as follows −
$./a.out
Enter a value : this is test
You entered: this is test
The scanf() and printf() Functions
The int scanf(const char *format, ...) function reads the input from the standard input stream stdin and scans that input according to the format provided.
The int printf(const char *format, ...) function writes the output to the standard output stream stdout and produces the output according to the format provided.
The format can be a simple constant string, but you can specify %s, %d, %c, %f, etc., to print or read strings, integer, character or float respectively. There are many other formatting options available which can be used based on requirements. Let us now proceed with a simple example to understand the concepts better −
#include &lt;stdio.h&gt;
int main( ) {

   char str[100];
   int i;

   printf( "Enter a value :");
   scanf("%s %d", str, &amp;i);

   printf( "\nYou entered: %s %d ", str, i);

   return 0;
}
When the above code is compiled and executed, it waits for you to input some text. When you enter a text and press enter, then program proceeds and reads the input and displays it as follows −
$./a.out
Enter a value : seven 7
You entered: seven 7
Here, it should be noted that scanf() expects input in the same format as you provided %s and %d, which means you have to provide valid inputs like "string integer". If you provide "string string" or "integer integer", then it will be assumed as wrong input. Secondly, while reading a string, scanf() stops reading as soon as it encounters a space, so "this is test" are three strings for scanf().
</string>
                                        <color key="textColor" systemColor="labelColor"/>
                                        <fontDescription key="fontDescription" type="system" pointSize="14"/>
                                        <textInputTraits key="textInputTraits" autocapitalizationType="sentences"/>
                                    </textView>
                                </subviews>
                                <viewLayoutGuide key="contentLayoutGuide" id="sSb-28-kdl"/>
                                <viewLayoutGuide key="frameLayoutGuide" id="tTW-qA-kgd"/>
                            </scrollView>
                        </subviews>
                        <viewLayoutGuide key="safeArea" id="bNp-7B-OW1"/>
                        <color key="backgroundColor" systemColor="systemBackgroundColor"/>
                    </view>
                </viewController>
                <placeholder placeholderIdentifier="IBFirstResponder" id="Q1S-ad-LJB" userLabel="First Responder" customClass="UIResponder" sceneMemberID="firstResponder"/>
            </objects>
            <point key="canvasLocation" x="2857" y="0.0"/>
        </scene>
        <!--View Controller-->
        <scene sceneID="Tkt-Bh-JlO">
            <objects>
                <viewController id="A8w-bg-DTP" sceneMemberID="viewController">
                    <view key="view" contentMode="scaleToFill" id="xME-2P-oHA">
                        <rect key="frame" x="0.0" y="0.0" width="375" height="647"/>
                        <autoresizingMask key="autoresizingMask" widthSizable="YES" heightSizable="YES"/>
                        <subviews>
                            <button opaque="NO" contentMode="scaleToFill" fixedFrame="YES" contentHorizontalAlignment="center" contentVerticalAlignment="center" buttonType="system" lineBreakMode="middleTruncation" translatesAutoresizingMaskIntoConstraints="NO" id="UUB-y4-YI4">
                                <rect key="frame" x="16" y="9" width="39" height="35"/>
                                <autoresizingMask key="autoresizingMask" flexibleMaxX="YES" flexibleMaxY="YES"/>
                                <state key="normal" title="Button"/>
                                <buttonConfiguration key="configuration" style="plain" title="←"/>
                                <connections>
                                    <segue destination="OfE-mm-74o" kind="presentation" id="iWZ-t0-q2W"/>
                                </connections>
                            </button>
                            <scrollView clipsSubviews="YES" multipleTouchEnabled="YES" contentMode="scaleToFill" fixedFrame="YES" translatesAutoresizingMaskIntoConstraints="NO" id="kHS-tB-tUf">
                                <rect key="frame" x="0.0" y="52" width="375" height="615"/>
                                <autoresizingMask key="autoresizingMask" flexibleMaxX="YES" flexibleMaxY="YES"/>
                                <subviews>
                                    <textView clipsSubviews="YES" multipleTouchEnabled="YES" contentMode="scaleToFill" fixedFrame="YES" textAlignment="natural" translatesAutoresizingMaskIntoConstraints="NO" id="qa7-Qc-qbe">
                                        <rect key="frame" x="0.0" y="0.0" width="375" height="615"/>
                                        <autoresizingMask key="autoresizingMask" flexibleMaxX="YES" flexibleMaxY="YES"/>
                                        <color key="backgroundColor" systemColor="systemBackgroundColor"/>
                                        <string key="text">Operators are the foundation of any programming language. We can define operators as symbols that help us to perform specific mathematical and logical computations on operands. In other words, we can say that an operator operates the operands. For example, ‘+’ is an operator used for addition, as shown below:  
c = a + b;
Here, ‘+’ is the operator known as the addition operator and ‘a’ and ‘b’ are operands. The addition operator tells the compiler to add both of the operands ‘a’ and ‘b’. 

The functionality of the C programming language is incomplete without the use of operators.
C has many built-in operators and can be classified into 6 types:
1. Arithmetic Operators
2. Relational Operators
3. Logical Operators
4. Bitwise Operators
5. Assignment Operators
6. Other Operators


1. Arithmetic Operators: 
These operators are used to perform arithmetic/mathematical operations on operands. Examples: (+, -, *, /, %,++,–). Arithmetic operators are of two types: 
a) Unary Operators: 
Operators that operate or work with a single operand are unary operators. For example: Increment(++) and Decrement(–) Operators
int val = 5;
++val;  // 6
b) Binary Operators:
Operators that operate or work with two operands are binary operators. For example: Addition(+), Subtraction(-), multiplication(*), Division(/) operators
int a = 7;
int b = 2;
cout&lt;&lt;a+b; // 9
2. Relational Operators:
These are used for the comparison of the values of two operands. For example, checking if one operand is equal to the other operand or not, whether an operand is greater than the other operand or not, etc. Some of the relational operators are (==, &gt;= , &lt;= )(See this article for more reference).
int a = 3;
int b = 5;
a &lt; b;
// operator to check if a is smaller than b
3. Logical Operators:
Logical Operators are used to combine two or more conditions/constraints or to complement the evaluation of the original condition in consideration. The result of the operation of a logical operator is a Boolean value either true or false. 
For example, the logical AND represented as the ‘&amp;&amp;’ operator in C returns true when both the conditions under consideration are satisfied. Otherwise, it returns false. Therefore, a &amp;&amp; b returns true when both a and b are true (i.e. non-zero)(See this article for more reference).
(4 != 5) &amp;&amp; (4 &lt; 5);     // true
4. Bitwise Operators: 
The Bitwise operators are used to perform bit-level operations on the operands. The operators are first converted to bit-level and then the calculation is performed on the operands. Mathematical operations such as addition, subtraction, multiplication, etc. can be performed at the bit level for faster processing. For example, the bitwise AND operator represented as ‘&amp;’ in C takes two numbers as operands and does AND on every bit of two numbers. The result of AND is 1 only if both bits are 1(True). 
int a = 5, b = 9;   // a = 5(00000101), b = 9(00001001)
cout &lt;&lt; (a ^ b);   //  00001100
cout &lt;&lt;(~a);       // 11111010
5. Assignment Operators: 
Assignment operators are used to assign value to a variable. The left side operand of the assignment operator is a variable and the right side operand of the assignment operator is a value. The value on the right side must be of the same data type as the variable on the left side otherwise the compiler will raise an error. 
Different types of assignment operators are shown below: 

a) “=”
This is the simplest assignment operator. This operator is used to assign the value on the right to the variable on the left.  Example:
a = 10;
b = 20;
ch = 'y';
b) “+=”
This operator is the combination of the ‘+’ and ‘=’ operators. This operator first adds the current value of the variable on left to the value on the right and then assigns the result to the variable on the left.  Example:
(a += b) can be written as (a = a + b)
If initially value stored in a is 5. Then (a += 6) = 11.
c) “-=” 
This operator is a combination of ‘-‘ and ‘=’ operators. This operator first subtracts the value on the right from the current value of the variable on left and then assigns the result to the variable on the left.  Example:
(a -= b) can be written as (a = a - b)
If initially value stored in a is 8. Then (a -= 6) = 2.
d) “*=” 
This operator is a combination of the ‘*’ and ‘=’ operators. This operator first multiplies the current value of the variable on left to the value on the right and then assigns the result to the variable on the left.  Example:
(a *= b) can be written as (a = a * b)
If initially, the value stored in a is 5. Then (a *= 6) = 30.
e) “/=”
This operator is a combination of the ‘/’ and ‘=’ operators. This operator first divides the current value of the variable on left by the value on the right and then assigns the result to the variable on the left.  Example:
(a /= b) can be written as (a = a / b)
If initially, the value stored in a is 6. Then (a /= 2) = 3.
6. Other Operators: 
Apart from the above operators, there are some other operators available in C used to perform some specific tasks. Some of them are discussed here: 
a. sizeof operator
* sizeof is much used in the C programming language.
* It is a compile-time unary operator which can be used to compute the size of its operand.
* The result of sizeof is of the unsigned integral type which is usually denoted by size_t.
* Basically, the sizeof the operator is used to compute the size of the variable. (See this article for reference)
b. Comma Operator
* The comma operator (represented by the token) is a binary operator that evaluates its first operand and discards the result, it then evaluates the second operand and returns this value (and type).
* The comma operator has the lowest precedence of any C operator.
* Comma acts as both operator and separator. (See this article for reference)
c. Conditional Operator
* The conditional operator is of the form Expression1? Expression2: Expression3
* Here, Expression1 is the condition to be evaluated. If the condition(Expression1) is True then we will execute and return the result of Expression2 otherwise if the condition(Expression1) is false then we will execute and return the result of Expression3.
* We may replace the use of if..else statements with conditional operators. (See this article for reference)
d. dot (.) and arrow (-&gt;) Operators
* Member operators are used to reference individual members of classes, structures, and unions.
* The dot operator is applied to the actual object. (See this article for reference)
* The arrow operator is used with a pointer to an object. (See this article for reference)
e.  Cast Operator
* Casting operators convert one data type to another. For example, int(2.2000) would return 2.
* A cast is a special operator that forces one data type to be converted into another. 
* The most general cast supported by most of the C compilers is as follows −   [ (type) expression ]. (See this article for reference)
f.  &amp;,* Operator
* Pointer operator &amp; returns the address of a variable. For example &amp;a; will give the actual address of the variable.
* Pointer operator * is a pointer to a variable. For example *var; will pointer to a variable var. (See this article for reference
</string>
                                        <color key="textColor" systemColor="labelColor"/>
                                        <fontDescription key="fontDescription" type="system" pointSize="14"/>
                                        <textInputTraits key="textInputTraits" autocapitalizationType="sentences"/>
                                    </textView>
                                </subviews>
                                <viewLayoutGuide key="contentLayoutGuide" id="yF1-DR-IRE"/>
                                <viewLayoutGuide key="frameLayoutGuide" id="K6g-LI-0A3"/>
                            </scrollView>
                        </subviews>
                        <viewLayoutGuide key="safeArea" id="FGE-jA-xb6"/>
                        <color key="backgroundColor" systemColor="systemBackgroundColor"/>
                    </view>
                </viewController>
                <placeholder placeholderIdentifier="IBFirstResponder" id="9m8-hS-iAe" userLabel="First Responder" customClass="UIResponder" sceneMemberID="firstResponder"/>
            </objects>
            <point key="canvasLocation" x="3511" y="0.0"/>
        </scene>
        <!--View Controller-->
        <scene sceneID="AOc-gJ-fhv">
            <objects>
                <viewController id="rdk-eB-m5O" sceneMemberID="viewController">
                    <view key="view" contentMode="scaleToFill" id="ndy-Eu-inf">
                        <rect key="frame" x="0.0" y="0.0" width="375" height="647"/>
                        <autoresizingMask key="autoresizingMask" widthSizable="YES" heightSizable="YES"/>
                        <subviews>
                            <button opaque="NO" contentMode="scaleToFill" fixedFrame="YES" contentHorizontalAlignment="center" contentVerticalAlignment="center" buttonType="system" lineBreakMode="middleTruncation" translatesAutoresizingMaskIntoConstraints="NO" id="PB7-KR-Hu9">
                                <rect key="frame" x="16" y="9" width="39" height="35"/>
                                <autoresizingMask key="autoresizingMask" flexibleMaxX="YES" flexibleMaxY="YES"/>
                                <state key="normal" title="Button"/>
                                <buttonConfiguration key="configuration" style="plain" title="←"/>
                                <connections>
                                    <segue destination="OfE-mm-74o" kind="presentation" id="lPA-YG-9iB"/>
                                </connections>
                            </button>
                            <scrollView clipsSubviews="YES" multipleTouchEnabled="YES" contentMode="scaleToFill" fixedFrame="YES" translatesAutoresizingMaskIntoConstraints="NO" id="026-Y6-xO8">
                                <rect key="frame" x="0.0" y="52" width="375" height="615"/>
                                <autoresizingMask key="autoresizingMask" flexibleMaxX="YES" flexibleMaxY="YES"/>
                                <subviews>
                                    <textView clipsSubviews="YES" multipleTouchEnabled="YES" contentMode="scaleToFill" fixedFrame="YES" editable="NO" textAlignment="natural" translatesAutoresizingMaskIntoConstraints="NO" id="wnB-Hm-52Q">
                                        <rect key="frame" x="0.0" y="0.0" width="375" height="615"/>
                                        <autoresizingMask key="autoresizingMask" flexibleMaxX="YES" flexibleMaxY="YES"/>
                                        <color key="backgroundColor" systemColor="systemBackgroundColor"/>
                                        <string key="text">There come situations in real life when we need to make some decisions and based on these decisions, we decide what should we do next. Similar situations arise in programming also where we need to make some decisions and based on these decisions we will execute the next block of code. 
For example, in C if x occurs then execute y else execute z. There can also be multiple conditions like in C if x occurs then execute p, else if condition y occurs execute q, else execute r. This condition of C else-if is one of the many ways of importing multiple conditions. 

Decision-making statements in programming languages decide the direction of the flow of program execution. Decision-making statements available in C or C++ are: 

1. if statement
2. if-else statements
3. nested if statements
4. if-else-if ladder
5. switch statements
    * Jump Statements: 
    * break
    * continue
    * goto
    * return

1. if statement in C/C++
if statement is the most simple decision-making statement. It is used to decide whether a certain statement or block of statements will be executed or not i.e if a certain condition is true then a block of statement is executed otherwise not. 
Syntax: 

if(condition) 
{
   // Statements to execute if
   // condition is true
}


2. if-else in C/C++
The if statement alone tells us that if a condition is true it will execute a block of statements and if the condition is false it won’t. But what if we want to do something else if the condition is false. Here comes the C else statement. We can use the else statement with the if statement to execute a block of code when the condition is false. 
Syntax: 
if (condition)
{
    // Executes this block if
    // condition is true
}
else
{
    // Executes this block if
    // condition is false
}

3. nested-if in C/C++
A nested if in C is an if statement that is the target of another if statement. Nested if statements mean an if statement inside another if statement. Yes, both C and C++ allow us to nested if statements within if statements, i.e, we can place an if statement inside another if statement. 
Syntax: 
if (condition1) 
{
   // Executes when condition1 is true
   if (condition2) 
   {
      // Executes when condition2 is true
   }
}

4. if-else-if ladder in C/C++
Here, a user can decide among multiple options. The C if statements are executed from the top down. As soon as one of the conditions controlling the if is true, the statement associated with that if is executed, and the rest of the C else-if ladder is bypassed. If none of the conditions is true, then the final else statement will be executed. 
Syntax: 
if (condition)
    statement;
else if (condition)
    statement;
.
.

else
    statement;

5. Jump Statements in C/C++
These statements are used in C or C++ for the unconditional flow of control throughout the functions in a program. They support four types of jump statements:

A) break
This loop control statement is used to terminate the loop. As soon as the break statement is encountered from within a loop, the loop iterations stop there, and control returns from the loop immediately to the first statement after the loop. 
Syntax: 
break;
Basically, break statements are used in situations when we are not sure about the actual number of iterations for the loop or we want to terminate the loop based on some condition.  

B) continue 
This loop control statement is just like the break statement. The continue statement is opposite to that of the break statement, instead of terminating the loop, it forces to execute the next iteration of the loop.  As the name suggests the continue statement forces the loop to continue or execute the next iteration. When the continue statement is executed in the loop, the code inside the loop following the continue statement will be skipped and the next iteration of the loop will begin.  Syntax: 
continue;

C) goto 
The goto statement in C/C++ also referred to as the unconditional jump statement can be used to jump from one point to another within a function.  Syntax: 
Syntax1      |   Syntax2
----------------------------
goto label;  |    label:  
.            |    .
.            |    .
.            |    .
label:       |    goto label;
In the above syntax, the first line tells the compiler to go to or jump to the statement marked as a label. Here, a label is a user-defined identifier that indicates the target statement. The statement immediately followed after ‘label:’ is the destination statement. The ‘label:’ can also appear before the ‘goto label;’ statement in the above syntax. 


D) return
The return in C or C++ returns the flow of the execution to the function from where it is called. This statement does not mandatorily need any conditional statements. As soon as the statement is executed, the flow of the program stops immediately and returns the control from where it was called. The return statement may or may not return anything for a void function, but for a non-void function, a return value must be returned. 
Syntax: 
return[expression];


</string>
                                        <color key="textColor" systemColor="labelColor"/>
                                        <fontDescription key="fontDescription" type="system" pointSize="14"/>
                                        <textInputTraits key="textInputTraits" autocapitalizationType="sentences"/>
                                    </textView>
                                </subviews>
                                <viewLayoutGuide key="contentLayoutGuide" id="cpk-VR-3OX"/>
                                <viewLayoutGuide key="frameLayoutGuide" id="i8f-ka-LQR"/>
                            </scrollView>
                        </subviews>
                        <viewLayoutGuide key="safeArea" id="E8l-Hc-po5"/>
                        <color key="backgroundColor" systemColor="systemBackgroundColor"/>
                    </view>
                </viewController>
                <placeholder placeholderIdentifier="IBFirstResponder" id="egJ-mS-8c8" userLabel="First Responder" customClass="UIResponder" sceneMemberID="firstResponder"/>
            </objects>
            <point key="canvasLocation" x="4172" y="0.0"/>
        </scene>
        <!--View Controller-->
        <scene sceneID="VBT-f9-UeD">
            <objects>
                <viewController id="mJ6-8t-56d" sceneMemberID="viewController">
                    <view key="view" contentMode="scaleToFill" id="o15-aB-6GW">
                        <rect key="frame" x="0.0" y="0.0" width="375" height="647"/>
                        <autoresizingMask key="autoresizingMask" widthSizable="YES" heightSizable="YES"/>
                        <subviews>
                            <button opaque="NO" contentMode="scaleToFill" fixedFrame="YES" contentHorizontalAlignment="center" contentVerticalAlignment="center" buttonType="system" lineBreakMode="middleTruncation" translatesAutoresizingMaskIntoConstraints="NO" id="YHS-P2-VeJ">
                                <rect key="frame" x="16" y="9" width="39" height="35"/>
                                <autoresizingMask key="autoresizingMask" flexibleMaxX="YES" flexibleMaxY="YES"/>
                                <state key="normal" title="Button"/>
                                <buttonConfiguration key="configuration" style="plain" title="←"/>
                                <connections>
                                    <segue destination="OfE-mm-74o" kind="presentation" id="ZOd-Xd-DI2"/>
                                </connections>
                            </button>
                            <scrollView clipsSubviews="YES" multipleTouchEnabled="YES" contentMode="scaleToFill" fixedFrame="YES" translatesAutoresizingMaskIntoConstraints="NO" id="0La-6Z-lw8">
                                <rect key="frame" x="0.0" y="52" width="375" height="615"/>
                                <autoresizingMask key="autoresizingMask" flexibleMaxX="YES" flexibleMaxY="YES"/>
                                <subviews>
                                    <textView clipsSubviews="YES" multipleTouchEnabled="YES" contentMode="scaleToFill" fixedFrame="YES" editable="NO" textAlignment="natural" translatesAutoresizingMaskIntoConstraints="NO" id="ucN-Y4-ysy">
                                        <rect key="frame" x="0.0" y="0.0" width="375" height="615"/>
                                        <autoresizingMask key="autoresizingMask" flexibleMaxX="YES" flexibleMaxY="YES"/>
                                        <color key="backgroundColor" systemColor="systemBackgroundColor"/>
                                        <string key="text">Sometimes we want some part of our code to be executed more than once. We can either repeat the code in our program or use loops instead. It is obvious that if for example we need to execute some part of code for a hundred times it is not practical to repeat the code. Alternatively we can use ourrepeating code inside a loop.
There are three methods for, while and do-while which we can repeat a part of a program.
1. while loop
while loop is constructed of a condition or expression and a single command or a block of commands that must run in a loop.
//for single statement  
while(expression) 
    statement;

//for multiple statement   
while(expression) 
{ 
    block of statement 
} 
The statements within the while loopwould keep on getting executed till the condition being tested remains true. When the condition becomes false, the control passes to the first statement that follows the body of the while loop.
The general form of while is as shown below:
initialise loop counter;  
while (test loopcounter using a condition) 
{ 
    do this; 
    and this; 
    increment loopcounter;
} 

2. for loop
for loop is something similar to while loop but it is more complex. for loop is constructed from acontrol statement that determines how many times the loop will run and a command section. Command section is either a single command or a block of commands.
//for single statement  
for(control statement) 
    statement;  

//for multiple statement
for(control statement) 
{ 
    block of statement 
} 
Control statement itself has three parts:
for ( initialization; test condition; run every time command )
* 		Initialization part is performed only once at for loop start. We can initialize a loop variable here.
* 		Test condition is the most important part of the loop. Loop will continue to run if this condition is valid (true). If the condition becomes invalid (false) then the loop will terminate.
* 		Run every time command section will be performed in every loop cycle. We use this part to reach the final condition for terminating the loop. For example we can increase or decrease loop variable’s value in a way that after specified number of cycles the loop condition becomes invalid and for loop can terminate.

3. do-while loop
The while and for loops test the termination condition at the top. By contrast, the third loop in C, the do-while, tests at the bottom after making each pass through the loop body; the body is always executed at least once. The syntax of the do is
do
{
    statements;
}while (expression);
The statement is executed, then expression is evaluated. If it is true, statement is evaluated again, and so on. When the expression becomes false, the loop terminates. Experience shows that do-while is much less used than while and for. A do-whileloop is used to ensure that the statements within the loop are executed at least once.

4. Break and Continue statement
We used break statement in switch...case structures in previouslly. We can also use "break" statement inside loops to terminate a loop and exit it (with a specific condition).
In above example loop execution continues until either num&gt;=20 or entered score is negative.
while (num&lt;20) 
{ 
    printf("Enter score : "); 
    scanf("%d",&amp;scores[num]); 
    if(scores[num]&lt;0) 
        break; 
} 
Continue statement can be used in loops. Like breakcommand continue changes flow of a program. It does not terminate the loop however. It just skips the rest of current iteration of the loop and returns to starting point of the loop.

5. Goto and labels
C provides the infinitely-abusable goto statement, and labels to branch to. Formally, the goto statement is never necessary, and in practice it is almost always easy to write code without it. We have not used goto in this book.
Nevertheless, there are a few situations where gotos may find a place. The most common is to abandon processing in some deeply nested structure, such as breaking out of two or more loops at once. The break statement cannot be used directly since it only exits from the innermost loop. Thus:
for ( ... )
{           
    for ( ... ) 
    {               
        ...               
        if (disaster)
        {                   
            goto error;
        }           
    }
}       
...   
error:       
/* clean up the mess */
This organization is handy if the error-handling code is non-trivial, and if errors can occur in several places.
A label has the same form as a variable name, and is followed by a colon. It can be attached to any statement in the same function as the goto. The scope of a label is the entire function.
</string>
                                        <color key="textColor" systemColor="labelColor"/>
                                        <fontDescription key="fontDescription" type="system" pointSize="14"/>
                                        <textInputTraits key="textInputTraits" autocapitalizationType="sentences"/>
                                    </textView>
                                </subviews>
                                <viewLayoutGuide key="contentLayoutGuide" id="OMs-sp-3nW"/>
                                <viewLayoutGuide key="frameLayoutGuide" id="xVb-qx-jOk"/>
                            </scrollView>
                        </subviews>
                        <viewLayoutGuide key="safeArea" id="0t7-bt-szA"/>
                        <color key="backgroundColor" systemColor="systemBackgroundColor"/>
                    </view>
                </viewController>
                <placeholder placeholderIdentifier="IBFirstResponder" id="2V9-zO-1De" userLabel="First Responder" customClass="UIResponder" sceneMemberID="firstResponder"/>
            </objects>
            <point key="canvasLocation" x="4841" y="0.0"/>
        </scene>
        <!--View Controller-->
        <scene sceneID="Vcb-nv-myT">
            <objects>
                <viewController id="pDZ-eh-JoU" sceneMemberID="viewController">
                    <view key="view" contentMode="scaleToFill" id="7vs-tT-zlG">
                        <rect key="frame" x="0.0" y="0.0" width="375" height="647"/>
                        <autoresizingMask key="autoresizingMask" widthSizable="YES" heightSizable="YES"/>
                        <subviews>
                            <button opaque="NO" contentMode="scaleToFill" fixedFrame="YES" contentHorizontalAlignment="center" contentVerticalAlignment="center" buttonType="system" lineBreakMode="middleTruncation" translatesAutoresizingMaskIntoConstraints="NO" id="fxo-sg-ES5">
                                <rect key="frame" x="16" y="9" width="39" height="35"/>
                                <autoresizingMask key="autoresizingMask" flexibleMaxX="YES" flexibleMaxY="YES"/>
                                <state key="normal" title="Button"/>
                                <buttonConfiguration key="configuration" style="plain" title="←"/>
                                <connections>
                                    <segue destination="OfE-mm-74o" kind="presentation" id="MRH-YX-uuO"/>
                                </connections>
                            </button>
                            <scrollView clipsSubviews="YES" multipleTouchEnabled="YES" contentMode="scaleToFill" fixedFrame="YES" translatesAutoresizingMaskIntoConstraints="NO" id="ZWC-U2-Yjq">
                                <rect key="frame" x="0.0" y="52" width="375" height="615"/>
                                <autoresizingMask key="autoresizingMask" flexibleMaxX="YES" flexibleMaxY="YES"/>
                                <subviews>
                                    <textView clipsSubviews="YES" multipleTouchEnabled="YES" contentMode="scaleToFill" fixedFrame="YES" editable="NO" textAlignment="natural" translatesAutoresizingMaskIntoConstraints="NO" id="gEf-dU-wNk">
                                        <rect key="frame" x="0.0" y="0.0" width="375" height="615"/>
                                        <autoresizingMask key="autoresizingMask" flexibleMaxX="YES" flexibleMaxY="YES"/>
                                        <color key="backgroundColor" systemColor="systemBackgroundColor"/>
                                        <string key="text">C Arrays
Array
	•	It is a group of variables of similar data types referred to by a single element.
	•	Its elements are stored in a contiguous memory location.
	•	The size of the array should be mentioned while declaring it.
	•	Array elements are always counted from zero (0) onward.
	•	Array elements can be accessed using the position of the element in the array.
	•	The array can have one or more dimensions. 
	•	An array in C/C++ or be it in any programming language is a collection of similar data items stored at contiguous memory locations and elements can be accessed randomly using indices of an array.  They can be used to store the collection of primitive data types such as int, float, double, char, etc of any particular type. To add to it, an array in C/C++ can store derived data types such as structures, pointers etc. Given below is the picture representation of an array.
Why do we need arrays? 
We can use normal variables (v1, v2, v3, ..) when we have a small number of objects, but if we want to store a large number of instances, it becomes difficult to manage them with normal variables. The idea of an array is to represent many instances in one variable.

Array declaration in C/C++: 
#include &lt;stdio.h&gt;  
int main(void)
{    
    // Array declaration by specifying size
    int arr1[10];
    // With recent C/C++ versions, we can also
    // declare an array of user specified size
    int n = 10;
    int arr2[n];  
    return (0);
}

Array declaration by initializing elements:
// Array declaration by initializing elements
#include &lt;stdio.h&gt;  
int main(void)
{
    int arr[] = { 10, 20, 30, 40};
    // Compiler creates an array of size 4.
    // above is same as  "int arr[4] = {10, 20, 30, 40}"
    return (0);
}</string>
                                        <color key="textColor" systemColor="labelColor"/>
                                        <fontDescription key="fontDescription" type="system" pointSize="14"/>
                                        <textInputTraits key="textInputTraits" autocapitalizationType="sentences"/>
                                    </textView>
                                </subviews>
                                <viewLayoutGuide key="contentLayoutGuide" id="59T-1G-1VU"/>
                                <viewLayoutGuide key="frameLayoutGuide" id="2Tz-Sl-NZ2"/>
                            </scrollView>
                        </subviews>
                        <viewLayoutGuide key="safeArea" id="aQK-qP-nqM"/>
                        <color key="backgroundColor" systemColor="systemBackgroundColor"/>
                    </view>
                </viewController>
                <placeholder placeholderIdentifier="IBFirstResponder" id="N0q-lw-XQA" userLabel="First Responder" customClass="UIResponder" sceneMemberID="firstResponder"/>
            </objects>
            <point key="canvasLocation" x="5495" y="0.0"/>
        </scene>
        <!--View Controller-->
        <scene sceneID="R7E-Dt-u2o">
            <objects>
                <viewController id="iMY-QZ-WU9" sceneMemberID="viewController">
                    <view key="view" contentMode="scaleToFill" id="mRF-zD-MHn">
                        <rect key="frame" x="0.0" y="0.0" width="375" height="647"/>
                        <autoresizingMask key="autoresizingMask" widthSizable="YES" heightSizable="YES"/>
                        <subviews>
                            <button opaque="NO" contentMode="scaleToFill" fixedFrame="YES" contentHorizontalAlignment="center" contentVerticalAlignment="center" buttonType="system" lineBreakMode="middleTruncation" translatesAutoresizingMaskIntoConstraints="NO" id="r4A-gx-5mS">
                                <rect key="frame" x="16" y="9" width="39" height="35"/>
                                <autoresizingMask key="autoresizingMask" flexibleMaxX="YES" flexibleMaxY="YES"/>
                                <state key="normal" title="Button"/>
                                <buttonConfiguration key="configuration" style="plain" title="←"/>
                                <connections>
                                    <segue destination="OfE-mm-74o" kind="presentation" id="g6Q-4x-mes"/>
                                </connections>
                            </button>
                            <scrollView clipsSubviews="YES" multipleTouchEnabled="YES" contentMode="scaleToFill" fixedFrame="YES" translatesAutoresizingMaskIntoConstraints="NO" id="3fP-va-1Ip">
                                <rect key="frame" x="0.0" y="52" width="375" height="615"/>
                                <autoresizingMask key="autoresizingMask" flexibleMaxX="YES" flexibleMaxY="YES"/>
                                <subviews>
                                    <textView clipsSubviews="YES" multipleTouchEnabled="YES" contentMode="scaleToFill" fixedFrame="YES" editable="NO" textAlignment="natural" translatesAutoresizingMaskIntoConstraints="NO" id="U7b-bg-1au">
                                        <rect key="frame" x="0.0" y="0.0" width="375" height="615"/>
                                        <autoresizingMask key="autoresizingMask" flexibleMaxX="YES" flexibleMaxY="YES"/>
                                        <color key="backgroundColor" systemColor="systemBackgroundColor"/>
                                        <string key="text">
C – Functions:
Functions are sets of statements that take inputs, perform some operations, and produce results. The operation of a function occurs only when it is called.  Rather than writing the same code for different inputs repeatedly, we can call the function instead of writing the same code over and over again. Functions accept parameters, which are data. A function performs a certain action, and it is important for reusing code. Within a function, there are a number of programming statements enclosed by {}.

Example:
int sum(int a, int b);

Function Declarations:
Function declarations tell the compiler how many parameters a function takes, what kinds of parameters it returns, and what types of data it takes. Function declarations do not need to include parameter names, but definitions must. 
Syntax:
return_type name_of_the_function (parameters);
Function declaration for the sum of two numbers is shown below
int sum(int var1, int var2);
The parameter name is not mandatory while declaring functions. We can also declare the above function without using the name of the data variables.
int sum(int, int);
Function Definition:
A function definition consists function header and a function body.
return_type function_name (parameters) 
{
    //body of the function
}
	•	Return_type: The function always starts with a return type of the function. But if there is no return value then the void keyword is used as the return type of the function.
	•	Function_Name: Name of the function which should be unique.
	•	Parameters: Values that are passed during the function call.
Function Call:
To Call a function parameters are passed along the function name. In the below example, the first sum function is called and 10,30 are passed to the sum function. After the function call sum of a and b is returned and control is also returned back to the main function of the program.
// C program to show function
// call and definition
#include &lt;stdio.h&gt; 
// Function that takes two parameters
// a and b as inputs and returns
// their sum
int sum(int a, int b)
{
  return a + b;
}
 
// Driver code
int main()
{
  // Calling sum function and
  // storing its value in add variable
  int add = sum(10, 30);
   
  printf("Sum is: %d", add);
  return 0;
}
Output:
Sum is: 40

Types of Functions:
1. User Defined Function:
Functions that are created by the programmer are known as User-Defined functions or “tailor-made functions”. User-defined functions can be improved and modified according to the need of the programmer. Whenever we write a function that is case-specific and is not defined in any header file, we need to declare and define our own functions according to the syntax.
Example:
// C program to show
// user-defined functions
#include &lt;stdio.h&gt;
 
int sum(int a, int b)
{
  return a + b;
}
 
// Driver code
int main()
{
  int a = 30, b = 40;
  
  // function call
  int res = sum(a, b);
 
  printf("Sum is: %d", res);
  return 0;
}
Output
Sum is: 70
2. Library Function:
A library function is also referred to as a “built-in function”. There is a compiler package that already exists that contains these functions, each of which has a specific meaning and is included in the package. Built-in functions have the advantage of being directly usable without being defined, whereas user-defined functions must be declared and defined before being used. 
For Example:
pow(), sqrt(), strcmp(), strcpy() etc.
Example:
// C program to implement
// the above approach
#include &lt;math.h&gt;
#include &lt;stdio.h&gt;
 
// Driver code
int main()
{
  double Number;
  Number = 49;
 
  // Computing the square root with
  // the help of predefined C
  // library function
  double squareRoot = sqrt(Number);
   
  printf("The Square root of %.2lf = %.2lf",
          Number, squareRoot);
  return 0;
}
Output:
The Square root of 49.00 = 7.00

Passing Parameters to Functions:
The value of the function which is passed when the function is being invoked is known as the Actual parameters. In the below program 10 and 30 are known as actual parameters.
Formal Parameters are the variable and the data type as mentioned in the function declaration. In the below program, a and b are known as formal parameters.

1. Pass by Value: Parameter passing in this method copies values from actual parameters into function formal parameters. As a result, any changes made inside the functions do not reflect in the caller’s parameters. 
Below is the C program to show pass-by-value:
// C program to show use
// of call by value
#include &lt;stdio.h&gt;
void swap(int var1, int var2)
{
  int temp = var1;
  var1 = var2;
  var2 = temp;
}
 
// Driver code
int main()
{
  int var1 = 3, var2 = 2;
  printf("Before swap Value of var1 and var2 is: %d, %d\n",
          var1, var2);
  swap(var1, var2);
  printf("After swap Value of var1 and var2 is: %d, %d",
          var1, var2);
  return 0;
}
Output:
Before swap Value of var1 and var2 is: 3, 2
After swap Value of var1 and var2 is: 3, 2
2. Pass by Reference: The caller’s actual parameters and the function’s actual parameters refer to the same locations, so any changes made inside the function are reflected in the caller’s actual parameters. 
Below is the C program to show pass-by-reference:

// C program to show use of
// call by Reference
#include &lt;stdio.h&gt;
 void swap(int *var1, int *var2)
{
  int temp = *var1;
  *var1 = *var2;
  *var2 = temp;
}
// Driver code
int main()
{
  int var1 = 3, var2 = 2;
  printf("Before swap Value of var1 and var2 is: %d, %d\n",
          var1, var2);
  swap(&amp;var1, &amp;var2);
  printf("After swap Value of var1 and var2 is: %d, %d",
          var1, var2);
  return 0;
}
Output:
Before swap Value of var1 and var2 is: 3, 2
After swap Value of var1 and var2 is: 2, 3
Function Arguments and Return values:
In C programming language, functions can be called either with or without arguments and might return values. They may or might not return values to the calling functions. To know more about function Arguments and Return values refer to the article – Function Arguments &amp; Return Values in C.
	•	Function with no arguments and no return value
	•	Function with no arguments and with return value
	•	Function with argument and with no return value
	•	Function with arguments and with return value</string>
                                        <color key="textColor" systemColor="labelColor"/>
                                        <fontDescription key="fontDescription" type="system" pointSize="14"/>
                                        <textInputTraits key="textInputTraits" autocapitalizationType="sentences"/>
                                    </textView>
                                </subviews>
                                <viewLayoutGuide key="contentLayoutGuide" id="2jK-V3-EPF"/>
                                <viewLayoutGuide key="frameLayoutGuide" id="2ky-JX-cB9"/>
                            </scrollView>
                        </subviews>
                        <viewLayoutGuide key="safeArea" id="rjy-fh-Vwk"/>
                        <color key="backgroundColor" systemColor="systemBackgroundColor"/>
                    </view>
                </viewController>
                <placeholder placeholderIdentifier="IBFirstResponder" id="Kwu-0c-12y" userLabel="First Responder" customClass="UIResponder" sceneMemberID="firstResponder"/>
            </objects>
            <point key="canvasLocation" x="6113" y="0.0"/>
        </scene>
        <!--View Controller-->
        <scene sceneID="Hqy-r9-nHb">
            <objects>
                <viewController id="CCN-XO-TqU" sceneMemberID="viewController">
                    <view key="view" contentMode="scaleToFill" id="6m4-yg-IkM">
                        <rect key="frame" x="0.0" y="0.0" width="375" height="647"/>
                        <autoresizingMask key="autoresizingMask" widthSizable="YES" heightSizable="YES"/>
                        <subviews>
                            <button opaque="NO" contentMode="scaleToFill" fixedFrame="YES" contentHorizontalAlignment="center" contentVerticalAlignment="center" buttonType="system" lineBreakMode="middleTruncation" translatesAutoresizingMaskIntoConstraints="NO" id="8fe-Iw-oUI">
                                <rect key="frame" x="16" y="9" width="39" height="35"/>
                                <autoresizingMask key="autoresizingMask" flexibleMaxX="YES" flexibleMaxY="YES"/>
                                <state key="normal" title="Button"/>
                                <buttonConfiguration key="configuration" style="plain" title="←"/>
                                <connections>
                                    <segue destination="OfE-mm-74o" kind="presentation" id="do3-vD-vWA"/>
                                </connections>
                            </button>
                            <scrollView clipsSubviews="YES" multipleTouchEnabled="YES" contentMode="scaleToFill" fixedFrame="YES" translatesAutoresizingMaskIntoConstraints="NO" id="0Q7-uo-n9D">
                                <rect key="frame" x="0.0" y="52" width="375" height="615"/>
                                <autoresizingMask key="autoresizingMask" flexibleMaxX="YES" flexibleMaxY="YES"/>
                                <subviews>
                                    <textView clipsSubviews="YES" multipleTouchEnabled="YES" contentMode="scaleToFill" fixedFrame="YES" editable="NO" textAlignment="natural" translatesAutoresizingMaskIntoConstraints="NO" id="jnk-hN-W0L">
                                        <rect key="frame" x="0.0" y="0.0" width="375" height="615"/>
                                        <autoresizingMask key="autoresizingMask" flexibleMaxX="YES" flexibleMaxY="YES"/>
                                        <color key="backgroundColor" systemColor="systemBackgroundColor"/>
                                        <string key="text">Strings in C:
String in C programming is a sequence of characters terminated with a null character ‘\0’. Strings are defined as an array of characters. The difference between a character array and a string is the string is terminated with a unique character ‘\0’.

Declaration of Strings:
Declaring a string is as simple as declaring a one-dimensional array. Below is the basic syntax for declaring a string.
char str_name[size];

In the above syntax str_name is any name given to the string variable and size is used to define the length of the string, i.e the number of characters strings will store. 
Note: There is an extra terminating character which is the Null character (‘\0’) used to indicate the termination of a string that differs strings from normal character arrays. When a Sequence of characters enclosed in the double quotation marks is encountered by the compiler, a null character ‘\0’ is appended at the end of the string by default.

Initializing a String:
A string can be initialized in different ways. We will explain this with the help of an example. Below are the examples to declare a string with the name str and initialize it with “CProgramming”.

4 Ways to Initialize a String in C
1. Assigning a string literal without size: String literals can be assigned without size. Here, the name of the string str acts as a pointer because it is an array.
char str[] = "CProgramming";

2. Assigning a string literal with a predefined size: String literals can be assigned with a predefined size. But we should always account for one extra space which will be assigned to the null character. If we want to store a string of size n then we should always declare a string with a size equal to or greater than n+1.
char str[50] = "CProgramming";

3. Assigning character by character with size: We can also assign a string character by character. But we should remember to set the end character as ‘\0’ which is a null character.
char str[14] = { ‘C’,’P’,’r’,’o’,’g’,’r’,’a’,’m’,’m’,’I’,’n’,’g’,\0’};

4. Assigning character by character without size: We can assign character by character without size with the NULL character at the end. The size of the string is determined by the compiler automatically.
char str[] = { ‘C’,’P’,’r’,’o’,’g’,’r’,’a’,’m’,’m’,’I’,’n’,’g’,\0’};



Most Used Functions in C  Strings:

strlen(string_name)
Returns the length of string name.

strcpy(s1, s2)
Copies the contents of string s2 to string s1.

strcmp(str1, str2)
Compares the first string with the second string. If strings are the same it returns 0.

strcat(s1, s2)
Concat s1 string with s2 string and the result is stored in the first string.

strlwr()
Converts string to lowercase.

strupr()
Converts string to uppercase.

strstr(s1, s2)
Find the first occurrence of s2 in s1.</string>
                                        <color key="textColor" systemColor="labelColor"/>
                                        <fontDescription key="fontDescription" type="system" pointSize="14"/>
                                        <textInputTraits key="textInputTraits" autocapitalizationType="sentences"/>
                                    </textView>
                                </subviews>
                                <viewLayoutGuide key="contentLayoutGuide" id="Jjy-aY-tf1"/>
                                <viewLayoutGuide key="frameLayoutGuide" id="SO3-tA-FbA"/>
                            </scrollView>
                        </subviews>
                        <viewLayoutGuide key="safeArea" id="0HY-id-5ml"/>
                        <color key="backgroundColor" systemColor="systemBackgroundColor"/>
                    </view>
                </viewController>
                <placeholder placeholderIdentifier="IBFirstResponder" id="qex-1F-4pX" userLabel="First Responder" customClass="UIResponder" sceneMemberID="firstResponder"/>
            </objects>
            <point key="canvasLocation" x="6737" y="0.0"/>
        </scene>
        <!--View Controller-->
        <scene sceneID="mIs-WU-Cak">
            <objects>
                <viewController id="90S-Au-rxk" sceneMemberID="viewController">
                    <view key="view" contentMode="scaleToFill" id="5QJ-A0-dqH">
                        <rect key="frame" x="0.0" y="0.0" width="375" height="647"/>
                        <autoresizingMask key="autoresizingMask" widthSizable="YES" heightSizable="YES"/>
                        <subviews>
                            <button opaque="NO" contentMode="scaleToFill" fixedFrame="YES" contentHorizontalAlignment="center" contentVerticalAlignment="center" buttonType="system" lineBreakMode="middleTruncation" translatesAutoresizingMaskIntoConstraints="NO" id="Cb6-QN-ft3">
                                <rect key="frame" x="16" y="9" width="39" height="35"/>
                                <autoresizingMask key="autoresizingMask" flexibleMaxX="YES" flexibleMaxY="YES"/>
                                <state key="normal" title="Button"/>
                                <buttonConfiguration key="configuration" style="plain" title="←"/>
                                <connections>
                                    <segue destination="OfE-mm-74o" kind="presentation" id="IPY-RU-jN9"/>
                                </connections>
                            </button>
                            <scrollView clipsSubviews="YES" multipleTouchEnabled="YES" contentMode="scaleToFill" fixedFrame="YES" translatesAutoresizingMaskIntoConstraints="NO" id="sj6-B9-bfu">
                                <rect key="frame" x="0.0" y="52" width="375" height="615"/>
                                <autoresizingMask key="autoresizingMask" flexibleMaxX="YES" flexibleMaxY="YES"/>
                                <subviews>
                                    <textView clipsSubviews="YES" multipleTouchEnabled="YES" contentMode="scaleToFill" fixedFrame="YES" editable="NO" textAlignment="natural" translatesAutoresizingMaskIntoConstraints="NO" id="Ioc-ZL-5nM">
                                        <rect key="frame" x="0.0" y="0.0" width="375" height="615"/>
                                        <autoresizingMask key="autoresizingMask" flexibleMaxX="YES" flexibleMaxY="YES"/>
                                        <color key="backgroundColor" systemColor="systemBackgroundColor"/>
                                        <string key="text">Storage Classes in C
Storage Classes are used to describe the features of a variable/function. These features basically include the scope, visibility and life-time which help us to trace the existence of a particular variable during the runtime of a program.

C language uses 4 storage classes, namely:
* auto: This is the default storage class for all the variables declared inside a function or a block. Hence, the keyword auto is rarely used while writing programs in C language. Auto variables can be only accessed within the block/function they have been declared and not outside them (which defines their scope). Of course, these can be accessed within nested blocks within the parent block/function in which the auto variable was declared. However, they can be accessed outside their scope as well using the concept of pointers given here by pointing to the very exact memory location where the variables reside. They are assigned a garbage value by default whenever they are declared.   
* extern: Extern storage class simply tells us that the variable is defined elsewhere and not within the same block where it is used. Basically, the value is assigned to it in a different block and this can be overwritten/changed in a different block as well. So an extern variable is nothing but a global variable initialized with a legal value where it is declared in order to be used elsewhere. It can be accessed within any function/block. Also, a normal global variable can be made extern as well by placing the ‘extern’ keyword before its declaration/definition in any function/block. This basically signifies that we are not initializing a new variable but instead we are using/accessing the global variable only. The main purpose of using extern variables is that they can be accessed between two different files which are part of a large program. For more information on how extern variables work, have a look at this link.   
* static: This storage class is used to declare static variables which are popularly used while writing programs in C language. Static variables have the property of preserving their value even after they are out of their scope! Hence, static variables preserve the value of their last use in their scope. So we can say that they are initialized only once and exist till the termination of the program. Thus, no new memory is allocated because they are not re-declared. Their scope is local to the function to which they were defined. Global static variables can be accessed anywhere in the program. By default, they are assigned the value 0 by the compiler.   
* register: This storage class declares register variables that have the same functionality as that of the auto variables. The only difference is that the compiler tries to store these variables in the register of the microprocessor if a free registration is available. This makes the use of register variables to be much faster than that of the variables stored in the memory during the runtime of the program. If a free registration is not available, these are then stored in the memory only. Usually few variables which are to be accessed very frequently in a program are declared with the register keyword which improves the running time of the program. An important and interesting point to be noted here is that we cannot obtain the address of a register variable using pointers.   
To specify the storage class for a variable, the following syntax is to be followed:
Syntax: 

storage_class var_data_type var_name;

Functions follow the same syntax as given above for variables.


</string>
                                        <color key="textColor" systemColor="labelColor"/>
                                        <fontDescription key="fontDescription" type="system" pointSize="14"/>
                                        <textInputTraits key="textInputTraits" autocapitalizationType="sentences"/>
                                    </textView>
                                </subviews>
                                <viewLayoutGuide key="contentLayoutGuide" id="Rsd-K0-NwU"/>
                                <viewLayoutGuide key="frameLayoutGuide" id="Bty-HU-P2G"/>
                            </scrollView>
                        </subviews>
                        <viewLayoutGuide key="safeArea" id="TMx-y2-W4j"/>
                        <color key="backgroundColor" systemColor="systemBackgroundColor"/>
                    </view>
                </viewController>
                <placeholder placeholderIdentifier="IBFirstResponder" id="odZ-w6-gpi" userLabel="First Responder" customClass="UIResponder" sceneMemberID="firstResponder"/>
            </objects>
            <point key="canvasLocation" x="7374" y="0.0"/>
        </scene>
        <!--View Controller-->
        <scene sceneID="aGS-Sp-hbh">
            <objects>
                <viewController id="eD4-lA-0EF" sceneMemberID="viewController">
                    <view key="view" contentMode="scaleToFill" id="c7A-eU-heI">
                        <rect key="frame" x="0.0" y="0.0" width="375" height="647"/>
                        <autoresizingMask key="autoresizingMask" widthSizable="YES" heightSizable="YES"/>
                        <subviews>
                            <button opaque="NO" contentMode="scaleToFill" fixedFrame="YES" contentHorizontalAlignment="center" contentVerticalAlignment="center" buttonType="system" lineBreakMode="middleTruncation" translatesAutoresizingMaskIntoConstraints="NO" id="ycH-u9-Z0b">
                                <rect key="frame" x="16" y="9" width="39" height="35"/>
                                <autoresizingMask key="autoresizingMask" flexibleMaxX="YES" flexibleMaxY="YES"/>
                                <state key="normal" title="Button"/>
                                <buttonConfiguration key="configuration" style="plain" title="←"/>
                                <connections>
                                    <segue destination="OfE-mm-74o" kind="presentation" id="K0a-Lc-Y1j"/>
                                </connections>
                            </button>
                            <scrollView clipsSubviews="YES" multipleTouchEnabled="YES" contentMode="scaleToFill" fixedFrame="YES" translatesAutoresizingMaskIntoConstraints="NO" id="mSW-aV-IXt">
                                <rect key="frame" x="0.0" y="52" width="375" height="615"/>
                                <autoresizingMask key="autoresizingMask" flexibleMaxX="YES" flexibleMaxY="YES"/>
                                <subviews>
                                    <textView clipsSubviews="YES" multipleTouchEnabled="YES" contentMode="scaleToFill" fixedFrame="YES" editable="NO" textAlignment="natural" translatesAutoresizingMaskIntoConstraints="NO" id="yD4-Eq-0CS">
                                        <rect key="frame" x="0.0" y="0.0" width="375" height="615"/>
                                        <autoresizingMask key="autoresizingMask" flexibleMaxX="YES" flexibleMaxY="YES"/>
                                        <color key="backgroundColor" systemColor="systemBackgroundColor"/>
                                        <string key="text">C Pointers
Pointers in C are used to store the address of variables or a memory location. This variable can be of any data type i.e, int, char, function, array, or any other pointer. The size of the pointer depends on the architecture.
Syntax:
datatype *var_name;
Let pointer “ptr” holds the address of an integer variable or holds the address of memory whose value(s) can be accessed as integer values through “ptr”. So to define “ptr” we have to write the below syntax:
int *ptr;

Uses of pointer
* To pass arguments by reference
* For accessing array elements
* To return multiple values
* Dynamic memory allocation
* To Implement data structures
* To do System-Level Programming where memory addresses are useful
* To help locating exact value at exact location.
* To avoid compiler confusion for same variable name.
* To use in Control Tables.
How to Use Pointers?
To use pointers in C, we must understand below two operators. 
1. To access the address of a variable to a pointer, we use the unary operator &amp; (ampersand) that returns the address of that variable.

2. One more operator is unary * (Asterisk) which is used for two things: 
2.A. To declare a pointer variable: When a pointer variable is declared in C/C++, there must be a * before its name. 
2.B. To access the value stored in the address we use the unary operator (*) that returns the value of the variable located at the address specified by its operand. This is also called Dereferencing.

Pointer Expressions and Pointer Arithmetic
 A limited set of arithmetic operations can be performed on pointers. The Pointer Arithmetic is slightly different from the ones that we generally use for mathematical calculations. The operations are: 
* Increment/Decrement of a Pointer
* Addition of integer to a pointer
* Subtraction of integer to a pointer
* Subtracting two pointers of the same type
* Comparison of pointers of the same type.
* Assignment of pointers to the same type of pointers.


Pointer arithmetic is meaningless unless performed on an array. 
Note: Pointers contain addresses. Adding two addresses makes no sense, because there is no idea what it would point to. Subtracting two addresses lets you compute the offset between these two addresses.

Array Name as Pointers 
An array name acts like a pointer constant. The value of this pointer constant is the address of the first element. For example, if we have an array named val then val and &amp;val[0] can be used interchangeably. 

Void Pointers
A Void Pointer in C can be defined as an address of any variable. It has no standard data type. A void pointer is created by using the keyword void.

NULL Pointers
Null pointers can be created by assigning a zero value during pointer declaration. This method is useful when no address is assigned to the pointer.

Wild Pointers 
Wild Pointers are pointers that have not been initialized with something yet. These types of C-pointers can cause problems in our programs and can eventually cause them to crash. While working with Wild Pointers Programmer must be very careful.

Other types of pointers in C are as follows:
* Far pointer – A far pointer is typically 32 bit that can access memory outside current segment.
* Dangling pointer – A pointer pointing to a memory location that has been deleted (or freed) is called dangling pointer.
* Huge pointer – A huge pointer is 32 bit long containing segment address and offset address.
* Complex pointer – Pointers with multiple levels of indirection.
* Near pointer – Near pointer is used to store 16 bit addresses means within current segment on a 16 bit machine.
* Normalized pointer – It is a 32 bit pointer, which has as much of its value in the segment register as possible.
* Generic pointer – In C void* acts as a generic pointer.
* File Pointer – The pointer to a FILE data type is called as a stream pointer or a file pointer.

</string>
                                        <color key="textColor" systemColor="labelColor"/>
                                        <fontDescription key="fontDescription" type="system" pointSize="14"/>
                                        <textInputTraits key="textInputTraits" autocapitalizationType="sentences"/>
                                    </textView>
                                </subviews>
                                <viewLayoutGuide key="contentLayoutGuide" id="JK5-aB-j1h"/>
                                <viewLayoutGuide key="frameLayoutGuide" id="NpM-vI-wxv"/>
                            </scrollView>
                        </subviews>
                        <viewLayoutGuide key="safeArea" id="6Gf-uh-Hn8"/>
                        <color key="backgroundColor" systemColor="systemBackgroundColor"/>
                    </view>
                </viewController>
                <placeholder placeholderIdentifier="IBFirstResponder" id="rqt-c9-O1s" userLabel="First Responder" customClass="UIResponder" sceneMemberID="firstResponder"/>
            </objects>
            <point key="canvasLocation" x="8636" y="0.0"/>
        </scene>
        <!--View Controller-->
        <scene sceneID="yQt-UT-nvp">
            <objects>
                <viewController id="lBF-uQ-D7y" sceneMemberID="viewController">
                    <view key="view" contentMode="scaleToFill" id="L9e-QA-qON">
                        <rect key="frame" x="0.0" y="0.0" width="375" height="647"/>
                        <autoresizingMask key="autoresizingMask" widthSizable="YES" heightSizable="YES"/>
                        <subviews>
                            <button opaque="NO" contentMode="scaleToFill" fixedFrame="YES" contentHorizontalAlignment="center" contentVerticalAlignment="center" buttonType="system" lineBreakMode="middleTruncation" translatesAutoresizingMaskIntoConstraints="NO" id="Jk5-2Y-dQ6">
                                <rect key="frame" x="16" y="9" width="39" height="35"/>
                                <autoresizingMask key="autoresizingMask" flexibleMaxX="YES" flexibleMaxY="YES"/>
                                <state key="normal" title="Button"/>
                                <buttonConfiguration key="configuration" style="plain" title="←"/>
                                <connections>
                                    <segue destination="OfE-mm-74o" kind="presentation" id="2Bj-ie-a4k"/>
                                </connections>
                            </button>
                            <scrollView clipsSubviews="YES" multipleTouchEnabled="YES" contentMode="scaleToFill" fixedFrame="YES" translatesAutoresizingMaskIntoConstraints="NO" id="gQD-l0-Nsb">
                                <rect key="frame" x="0.0" y="52" width="375" height="615"/>
                                <autoresizingMask key="autoresizingMask" flexibleMaxX="YES" flexibleMaxY="YES"/>
                                <subviews>
                                    <textView clipsSubviews="YES" multipleTouchEnabled="YES" contentMode="scaleToFill" fixedFrame="YES" editable="NO" textAlignment="natural" translatesAutoresizingMaskIntoConstraints="NO" id="Iy4-qm-BG9">
                                        <rect key="frame" x="0.0" y="0.0" width="375" height="615"/>
                                        <autoresizingMask key="autoresizingMask" flexibleMaxX="YES" flexibleMaxY="YES"/>
                                        <color key="backgroundColor" systemColor="systemBackgroundColor"/>
                                        <string key="text">C Preprocessors:
As the name suggests, Preprocessors are programs that process our source code before compilation. There are a number of steps involved between writing a program and executing a program in C / C++. Let us have a look at these steps before we actually start learning about Preprocessors.

You can see the intermediate steps in the above diagram. The source code written by programmers is first stored in a file, let the name be “program.c“. This file is then processed by preprocessors and an expanded source code file is generated named “program.i”. This expanded file is compiled by the compiler and an object code file is generated named “program.obj”. Finally, the linker links this object code file to the object code of the library functions to generate the executable file “program.exe”. 
Preprocessor programs provide preprocessor directives that tell the compiler to preprocess the source code before compiling. All of these preprocessor directives begin with a ‘#’ (hash) symbol. The ‘#’ symbol indicates that whatever statement starts with a ‘#’ will go to the preprocessor program to get executed. Examples of some preprocessor directives are: #include, #define, #ifndef etc. Remember that the # symbol only provides a path to the preprocessor, and a command such as include is processed by the preprocessor program. For example, #include will include extra code in your program. We can place these preprocessor directives anywhere in our program. 
There are 4 Main Types of Preprocessor Directives:  
* Macros
* File Inclusion
* Conditional Compilation
* Other directives
Let us now learn about each of these directives in detail. 
1. Macros
Macros are pieces of code in a program that is given some name. Whenever this name is encountered by the compiler, the compiler replaces the name with the actual piece of code. The ‘#define’ directive is used to define a macro. 

2. File Inclusion
This type of preprocessor directive tells the compiler to include a file in the source code program. There are two types of files that can be included by the user in the program: 
Header files or Standard files: These files contain definitions of pre-defined functions like printf(), scanf(), etc. These files must be included to work with these functions. Different functions are declared in different header files. For example, standard I/O functions are in the ‘iostream’ file whereas functions that perform string operations are in the ‘string’ file. 
Syntax:
#include&lt; file_name &gt;
where file_name is the name of the file to be included. The ‘&lt;‘ and ‘&gt;’ brackets tell the compiler to look for the file in the standard directory. 
User-defined files: When a program becomes very large, it is a good practice to divide it into smaller files and include them whenever needed. These types of files are user-defined files. These files can be included as:
#include"filename"

3. Conditional Compilation
Conditional Compilation directives are a type of directive that helps to compile a specific portion of the program or to skip the compilation of some specific part of the program based on some conditions. This can be done with the help of the two preprocessing commands ‘ifdef‘ and ‘endif‘. 
Syntax:
#ifdef macro_name
    statement1;
    statement2;
    statement3;
    .
    .
    .
    statementN;
#endif
If the macro with the name ‘macro_name‘ is defined, then the block of statements will execute normally, but if it is not defined, the compiler will simply skip this block of statements. 

4. Other Directives 
Apart from the above directives, there are two more directives that are not commonly used. These are: 
#undef Directive: The #undef directive is used to undefine an existing macro. This directive works as:
#undef LIMIT
Using this statement will undefine the existing macro LIMIT. After this statement, every “#ifdef LIMIT” statement will evaluate as false. 
#pragma Directive: This directive is a special purpose directive and is used to turn on or off some features. This type of directives are compiler-specific, i.e., they vary from compiler to compiler. Some of the #pragma directives are discussed below: 
* #pragma startup and #pragma exit: These directives help us to specify the functions that are needed to run before program startup (before the control passes to main()) and just before program exit (just before the control returns from main()). 

#pragma warn Directive: This directive is used to hide the warning message which is displayed during compilation. We can hide the warnings as shown below: 
* #pragma warn -rvl: This directive hides those warnings which are raised when a function that is supposed to return a value does not return a value.
* #pragma warn -par: This directive hides those warnings which are raised when a function does not use the parameters passed to it.
* #pragma warn -rch: This directive hides those warnings which are raised when a code is unreachable. For example, any code written after the return statement in a function is unreachable.
</string>
                                        <color key="textColor" systemColor="labelColor"/>
                                        <fontDescription key="fontDescription" type="system" pointSize="14"/>
                                        <textInputTraits key="textInputTraits" autocapitalizationType="sentences"/>
                                    </textView>
                                </subviews>
                                <viewLayoutGuide key="contentLayoutGuide" id="XxR-ct-o7c"/>
                                <viewLayoutGuide key="frameLayoutGuide" id="ASc-b4-mfV"/>
                            </scrollView>
                        </subviews>
                        <viewLayoutGuide key="safeArea" id="65H-OM-Zwc"/>
                        <color key="backgroundColor" systemColor="systemBackgroundColor"/>
                    </view>
                </viewController>
                <placeholder placeholderIdentifier="IBFirstResponder" id="E5R-Gb-eDo" userLabel="First Responder" customClass="UIResponder" sceneMemberID="firstResponder"/>
            </objects>
            <point key="canvasLocation" x="8006" y="0.0"/>
        </scene>
        <!--View Controller-->
        <scene sceneID="Nz9-6h-9BP">
            <objects>
                <viewController id="DEt-4s-x0T" sceneMemberID="viewController">
                    <view key="view" contentMode="scaleToFill" id="yBi-VW-UKC">
                        <rect key="frame" x="0.0" y="0.0" width="375" height="647"/>
                        <autoresizingMask key="autoresizingMask" widthSizable="YES" heightSizable="YES"/>
                        <subviews>
                            <button opaque="NO" contentMode="scaleToFill" fixedFrame="YES" contentHorizontalAlignment="center" contentVerticalAlignment="center" buttonType="system" lineBreakMode="middleTruncation" translatesAutoresizingMaskIntoConstraints="NO" id="0kM-t0-f8v">
                                <rect key="frame" x="16" y="9" width="39" height="35"/>
                                <autoresizingMask key="autoresizingMask" flexibleMaxX="YES" flexibleMaxY="YES"/>
                                <state key="normal" title="Button"/>
                                <buttonConfiguration key="configuration" style="plain" title="←"/>
                                <connections>
                                    <segue destination="OfE-mm-74o" kind="presentation" id="nH6-rV-KYR"/>
                                </connections>
                            </button>
                            <scrollView clipsSubviews="YES" multipleTouchEnabled="YES" contentMode="scaleToFill" fixedFrame="YES" translatesAutoresizingMaskIntoConstraints="NO" id="Rqx-pl-gVQ">
                                <rect key="frame" x="0.0" y="52" width="375" height="615"/>
                                <autoresizingMask key="autoresizingMask" flexibleMaxX="YES" flexibleMaxY="YES"/>
                                <subviews>
                                    <textView clipsSubviews="YES" multipleTouchEnabled="YES" contentMode="scaleToFill" fixedFrame="YES" editable="NO" textAlignment="natural" translatesAutoresizingMaskIntoConstraints="NO" id="6hT-y3-d1O">
                                        <rect key="frame" x="0.0" y="0.0" width="375" height="615"/>
                                        <autoresizingMask key="autoresizingMask" flexibleMaxX="YES" flexibleMaxY="YES"/>
                                        <color key="backgroundColor" systemColor="systemBackgroundColor"/>
                                        <string key="text">Structures in C is a user-defined data type available in C that allows to combining of data items of different kinds. Structures are used to represent a record. 

Defining a structure: To define a structure, you must use the struct statement. The struct statement defines a new data type, with more than or equal to one member. The format of the struct statement is as follows:

   struct [structure name]
   {
       member definition;
       member definition;
       ...
       member definition;
   };
   
   (OR)

   struct [structure name]
   {
       member definition;
       member definition;
       ...
       member definition;
   }structure variable declaration;


Union in C is a special data type available in C that allows storing different data types in the same memory location. You can define a union with many members, but only one member can contain a value at any given time. Unions provide an efficient way of using the same memory location for multiple purposes. 

Defining a Union: To define a union, you must use the union statement in the same way as you did while defining a structure. The union statement defines a new data type with more than one member for your program. The format of the union statement is as follows: 
union [union name]
    {
       member definition;
       member definition;
       ...
       member definition;
    };
   
    (OR) 

    union [union name]
    {
       member definition;
       member definition;
       ...
       member definition;
    }union variable declaration;

Similarities between Structure and Union
1. Both are user-defined data types used to store data of different types as a single unit.
2. Their members can be objects of any type, including other structures and unions or arrays. A member can also consist of a bit field.
3. Both structures and unions support only assignment = and sizeof operators. The two structures or unions in the assignment must have the same members and member types.
4. A structure or a union can be passed by value to functions and returned by value by functions. The argument must have the same type as the function parameter. A structure or union is passed by value just like a scalar variable as a corresponding parameter.
5. ‘.’ operator or selection operator, which has one of the highest precedences, is used for accessing member variables inside both the user-defined datatypes.
Differences between Structure and Union are as shown below in tabular format as shown below as follows: 





</string>
                                        <color key="textColor" systemColor="labelColor"/>
                                        <fontDescription key="fontDescription" type="system" pointSize="14"/>
                                        <textInputTraits key="textInputTraits" autocapitalizationType="sentences"/>
                                    </textView>
                                </subviews>
                                <viewLayoutGuide key="contentLayoutGuide" id="Zkx-h7-6Ra"/>
                                <viewLayoutGuide key="frameLayoutGuide" id="oP6-wD-IFn"/>
                            </scrollView>
                        </subviews>
                        <viewLayoutGuide key="safeArea" id="deb-ql-sZM"/>
                        <color key="backgroundColor" systemColor="systemBackgroundColor"/>
                    </view>
                </viewController>
                <placeholder placeholderIdentifier="IBFirstResponder" id="Ke6-Cd-K4E" userLabel="First Responder" customClass="UIResponder" sceneMemberID="firstResponder"/>
            </objects>
            <point key="canvasLocation" x="9263" y="0.0"/>
        </scene>
        <!--View Controller-->
        <scene sceneID="Pe9-9O-mUI">
            <objects>
                <viewController id="p3d-G2-h5L" sceneMemberID="viewController">
                    <view key="view" contentMode="scaleToFill" id="M5a-fp-sik">
                        <rect key="frame" x="0.0" y="0.0" width="375" height="647"/>
                        <autoresizingMask key="autoresizingMask" widthSizable="YES" heightSizable="YES"/>
                        <subviews>
                            <button opaque="NO" contentMode="scaleToFill" fixedFrame="YES" contentHorizontalAlignment="center" contentVerticalAlignment="center" buttonType="system" lineBreakMode="middleTruncation" translatesAutoresizingMaskIntoConstraints="NO" id="UJJ-UM-gD5">
                                <rect key="frame" x="16" y="9" width="39" height="35"/>
                                <autoresizingMask key="autoresizingMask" flexibleMaxX="YES" flexibleMaxY="YES"/>
                                <state key="normal" title="Button"/>
                                <buttonConfiguration key="configuration" style="plain" title="←"/>
                                <connections>
                                    <segue destination="OfE-mm-74o" kind="presentation" id="NFL-36-mxP"/>
                                </connections>
                            </button>
                            <scrollView clipsSubviews="YES" multipleTouchEnabled="YES" contentMode="scaleToFill" fixedFrame="YES" translatesAutoresizingMaskIntoConstraints="NO" id="UCI-TI-nu8">
                                <rect key="frame" x="0.0" y="52" width="375" height="615"/>
                                <autoresizingMask key="autoresizingMask" flexibleMaxX="YES" flexibleMaxY="YES"/>
                                <subviews>
                                    <textView clipsSubviews="YES" multipleTouchEnabled="YES" contentMode="scaleToFill" fixedFrame="YES" editable="NO" textAlignment="natural" translatesAutoresizingMaskIntoConstraints="NO" id="yNg-3F-MA8">
                                        <rect key="frame" x="0.0" y="0.0" width="375" height="615"/>
                                        <autoresizingMask key="autoresizingMask" flexibleMaxX="YES" flexibleMaxY="YES"/>
                                        <color key="backgroundColor" systemColor="systemBackgroundColor"/>
                                        <string key="text">Command line arguments in C:

The most important function of C/C++ is main() function. It is mostly defined with a return type of int and without parameters :
int main() { /* ... */ } 
We can also give command-line arguments in C and C++. Command-line arguments are given after the name of the program in command-line shell of Operating Systems. To pass command line arguments, we typically define main() with two arguments : first argument is the number of command line arguments and second is list of command-line arguments.
int main(int argc, char *argv[]) { /* ... */ }
or
int main(int argc, char **argv) { /* ... */ }
* argc (ARGument Count) is int and stores number of command-line arguments passed by the user including the name of the program. So if we pass a value to a program, value of argc would be 2 (one for argument and one for program name)
* The value of argc should be non negative.
* argv(ARGument Vector) is array of character pointers listing all the arguments.
* If argc is greater than zero,the array elements from argv[0] to argv[argc-1] will contain pointers to strings.
* Argv[0] is the name of the program , After that till argv[argc-1] every element is command -line arguments.

Properties of Command Line Arguments:
1. They are passed to main() function.
2. They are parameters/arguments supplied to the program when it is invoked.
3. They are used to control program from outside instead of hard coding those values inside the code.
4. argv[argc] is a NULL pointer.
5. argv[0] holds the name of the program.
6. argv[1] points to the first command line argument and argv[n] points last argument.



</string>
                                        <color key="textColor" systemColor="labelColor"/>
                                        <fontDescription key="fontDescription" type="system" pointSize="14"/>
                                        <textInputTraits key="textInputTraits" autocapitalizationType="sentences"/>
                                    </textView>
                                </subviews>
                                <viewLayoutGuide key="contentLayoutGuide" id="rAM-TS-w3s"/>
                                <viewLayoutGuide key="frameLayoutGuide" id="NNK-N3-4W5"/>
                            </scrollView>
                        </subviews>
                        <viewLayoutGuide key="safeArea" id="Oii-u0-0Rb"/>
                        <color key="backgroundColor" systemColor="systemBackgroundColor"/>
                    </view>
                </viewController>
                <placeholder placeholderIdentifier="IBFirstResponder" id="ciC-MG-1YU" userLabel="First Responder" customClass="UIResponder" sceneMemberID="firstResponder"/>
            </objects>
            <point key="canvasLocation" x="9906" y="0.0"/>
        </scene>
        <!--View Controller-->
        <scene sceneID="6td-yn-LLh">
            <objects>
                <viewController id="Z4V-Sw-RP9" sceneMemberID="viewController">
                    <view key="view" contentMode="scaleToFill" id="aqZ-8g-GDa">
                        <rect key="frame" x="0.0" y="0.0" width="375" height="647"/>
                        <autoresizingMask key="autoresizingMask" widthSizable="YES" heightSizable="YES"/>
                        <subviews>
                            <view contentMode="scaleToFill" translatesAutoresizingMaskIntoConstraints="NO" id="1bY-ed-6cj">
                                <rect key="frame" x="0.0" y="0.0" width="375" height="647"/>
                                <subviews>
                                    <button opaque="NO" contentMode="scaleToFill" fixedFrame="YES" contentHorizontalAlignment="leading" contentVerticalAlignment="center" buttonType="system" lineBreakMode="middleTruncation" translatesAutoresizingMaskIntoConstraints="NO" id="mQG-uY-nSk">
                                        <rect key="frame" x="0.0" y="221" width="339" height="35"/>
                                        <autoresizingMask key="autoresizingMask" flexibleMaxX="YES" flexibleMaxY="YES"/>
                                        <state key="normal" title="Button"/>
                                        <buttonConfiguration key="configuration" style="plain" title="BRANCHING AND LOOPING ">
                                            <fontDescription key="titleFontDescription" type="boldSystem" pointSize="20"/>
                                        </buttonConfiguration>
                                    </button>
                                    <button opaque="NO" contentMode="scaleToFill" fixedFrame="YES" contentHorizontalAlignment="leading" contentVerticalAlignment="center" buttonType="system" lineBreakMode="middleTruncation" translatesAutoresizingMaskIntoConstraints="NO" id="cmv-bD-TVd">
                                        <rect key="frame" x="0.0" y="280" width="339" height="35"/>
                                        <autoresizingMask key="autoresizingMask" flexibleMaxX="YES" flexibleMaxY="YES"/>
                                        <state key="normal" title="Button"/>
                                        <buttonConfiguration key="configuration" style="plain" title="FUNCTION">
                                            <fontDescription key="titleFontDescription" type="boldSystem" pointSize="20"/>
                                        </buttonConfiguration>
                                    </button>
                                    <button opaque="NO" contentMode="scaleToFill" fixedFrame="YES" contentHorizontalAlignment="leading" contentVerticalAlignment="center" buttonType="system" lineBreakMode="middleTruncation" translatesAutoresizingMaskIntoConstraints="NO" id="3cS-YA-1wc">
                                        <rect key="frame" x="0.0" y="341" width="339" height="35"/>
                                        <autoresizingMask key="autoresizingMask" flexibleMaxX="YES" flexibleMaxY="YES"/>
                                        <state key="normal" title="Button"/>
                                        <buttonConfiguration key="configuration" style="plain" title="ARRAY">
                                            <fontDescription key="titleFontDescription" type="boldSystem" pointSize="20"/>
                                        </buttonConfiguration>
                                    </button>
                                    <button opaque="NO" contentMode="scaleToFill" fixedFrame="YES" contentHorizontalAlignment="leading" contentVerticalAlignment="center" buttonType="system" lineBreakMode="middleTruncation" translatesAutoresizingMaskIntoConstraints="NO" id="nXR-Wo-vYe">
                                        <rect key="frame" x="0.0" y="402" width="339" height="35"/>
                                        <autoresizingMask key="autoresizingMask" flexibleMaxX="YES" flexibleMaxY="YES"/>
                                        <state key="normal" title="Button"/>
                                        <buttonConfiguration key="configuration" style="plain" title="POINTER">
                                            <fontDescription key="titleFontDescription" type="boldSystem" pointSize="20"/>
                                        </buttonConfiguration>
                                    </button>
                                    <button opaque="NO" contentMode="scaleToFill" fixedFrame="YES" contentHorizontalAlignment="leading" contentVerticalAlignment="center" buttonType="system" lineBreakMode="middleTruncation" translatesAutoresizingMaskIntoConstraints="NO" id="Hi2-mp-ANY">
                                        <rect key="frame" x="0.0" y="465" width="339" height="35"/>
                                        <autoresizingMask key="autoresizingMask" flexibleMaxX="YES" flexibleMaxY="YES"/>
                                        <state key="normal" title="Button"/>
                                        <buttonConfiguration key="configuration" style="plain" title="STRUCTURE">
                                            <fontDescription key="titleFontDescription" type="boldSystem" pointSize="20"/>
                                        </buttonConfiguration>
                                    </button>
                                    <button opaque="NO" contentMode="scaleToFill" fixedFrame="YES" contentHorizontalAlignment="leading" contentVerticalAlignment="center" buttonType="system" lineBreakMode="middleTruncation" translatesAutoresizingMaskIntoConstraints="NO" id="XbN-Vf-dCw">
                                        <rect key="frame" x="0.0" y="178" width="339" height="35"/>
                                        <autoresizingMask key="autoresizingMask" flexibleMaxX="YES" flexibleMaxY="YES"/>
                                        <state key="normal" title="Button"/>
                                        <buttonConfiguration key="configuration" style="plain" title="IO FUCNTION OPERATION">
                                            <fontDescription key="titleFontDescription" type="boldSystem" pointSize="20"/>
                                        </buttonConfiguration>
                                        <connections>
                                            <segue destination="hBP-cv-dKb" kind="presentation" id="VKQ-R9-CSd"/>
                                        </connections>
                                    </button>
                                    <button opaque="NO" contentMode="scaleToFill" fixedFrame="YES" contentHorizontalAlignment="leading" contentVerticalAlignment="center" buttonType="system" lineBreakMode="middleTruncation" translatesAutoresizingMaskIntoConstraints="NO" id="DrF-hZ-34R">
                                        <rect key="frame" x="0.0" y="135" width="339" height="35"/>
                                        <autoresizingMask key="autoresizingMask" flexibleMaxX="YES" flexibleMaxY="YES"/>
                                        <state key="normal" title="Button"/>
                                        <buttonConfiguration key="configuration" style="plain" title="INTRODUCTION TO C">
                                            <fontDescription key="titleFontDescription" type="boldSystem" pointSize="20"/>
                                        </buttonConfiguration>
                                        <connections>
                                            <segue destination="Ptk-1c-tSM" kind="presentation" id="rnd-4V-QpR"/>
                                        </connections>
                                    </button>
                                </subviews>
                                <color key="backgroundColor" systemColor="systemBackgroundColor"/>
                            </view>
                            <button opaque="NO" contentMode="scaleToFill" fixedFrame="YES" contentHorizontalAlignment="center" contentVerticalAlignment="center" buttonType="system" lineBreakMode="middleTruncation" translatesAutoresizingMaskIntoConstraints="NO" id="d2j-HG-cns">
                                <rect key="frame" x="10" y="10" width="39" height="35"/>
                                <autoresizingMask key="autoresizingMask" flexibleMaxX="YES" flexibleMaxY="YES"/>
                                <state key="normal" title="Button"/>
                                <buttonConfiguration key="configuration" style="plain" title="←"/>
                                <connections>
                                    <segue destination="BYZ-38-t0r" kind="presentation" id="oIn-iD-6sI"/>
                                </connections>
                            </button>
                        </subviews>
                        <viewLayoutGuide key="safeArea" id="L0c-UZ-QWf"/>
                        <color key="backgroundColor" systemColor="systemBackgroundColor"/>
                        <constraints>
                            <constraint firstItem="1bY-ed-6cj" firstAttribute="leading" secondItem="L0c-UZ-QWf" secondAttribute="leading" id="2Gd-aA-8Hg"/>
                            <constraint firstItem="1bY-ed-6cj" firstAttribute="bottom" secondItem="L0c-UZ-QWf" secondAttribute="bottom" id="cFR-fC-QPZ"/>
                            <constraint firstItem="1bY-ed-6cj" firstAttribute="top" secondItem="L0c-UZ-QWf" secondAttribute="top" id="fsx-pz-JrT"/>
                            <constraint firstItem="1bY-ed-6cj" firstAttribute="trailing" secondItem="L0c-UZ-QWf" secondAttribute="trailing" id="slI-ZL-8kE"/>
                        </constraints>
                    </view>
                </viewController>
                <placeholder placeholderIdentifier="IBFirstResponder" id="toy-JG-0GO" userLabel="First Responder" customClass="UIResponder" sceneMemberID="firstResponder"/>
            </objects>
            <point key="canvasLocation" x="719" y="707"/>
        </scene>
        <!--View Controller-->
        <scene sceneID="T2x-57-C0R">
            <objects>
                <viewController id="Ptk-1c-tSM" sceneMemberID="viewController">
                    <view key="view" contentMode="scaleToFill" id="lN1-uP-Z17">
                        <rect key="frame" x="0.0" y="0.0" width="375" height="647"/>
                        <autoresizingMask key="autoresizingMask" widthSizable="YES" heightSizable="YES"/>
                        <subviews>
                            <view contentMode="scaleToFill" translatesAutoresizingMaskIntoConstraints="NO" id="xo7-Nv-tdg">
                                <rect key="frame" x="0.0" y="0.0" width="375" height="647"/>
                                <subviews>
                                    <button opaque="NO" contentMode="scaleToFill" fixedFrame="YES" contentHorizontalAlignment="leading" contentVerticalAlignment="center" buttonType="system" lineBreakMode="middleTruncation" translatesAutoresizingMaskIntoConstraints="NO" id="GkI-ds-AUv">
                                        <rect key="frame" x="8" y="176" width="339" height="35"/>
                                        <autoresizingMask key="autoresizingMask" flexibleMaxX="YES" flexibleMaxY="YES"/>
                                        <state key="normal" title="Button"/>
                                        <buttonConfiguration key="configuration" style="plain" title="SCANNING A STRING WITH SACES USING scanf FUNCTION">
                                            <fontDescription key="titleFontDescription" type="boldSystem" pointSize="20"/>
                                        </buttonConfiguration>
                                        <connections>
                                            <segue destination="R6a-Fs-cAH" kind="presentation" id="Ruk-eT-BSn"/>
                                        </connections>
                                    </button>
                                    <button opaque="NO" contentMode="scaleToFill" fixedFrame="YES" contentHorizontalAlignment="leading" contentVerticalAlignment="center" buttonType="system" lineBreakMode="middleTruncation" translatesAutoresizingMaskIntoConstraints="NO" id="ylu-6O-WG1">
                                        <rect key="frame" x="0.0" y="249" width="339" height="35"/>
                                        <autoresizingMask key="autoresizingMask" flexibleMaxX="YES" flexibleMaxY="YES"/>
                                        <state key="normal" title="Button"/>
                                        <buttonConfiguration key="configuration" style="plain" title="SCANNING A STRING WITH SPACES USING gets FUCNTION">
                                            <fontDescription key="titleFontDescription" type="boldSystem" pointSize="20"/>
                                        </buttonConfiguration>
                                        <connections>
                                            <segue destination="Ujl-5b-Mbp" kind="presentation" id="DdZ-t8-dJQ"/>
                                        </connections>
                                    </button>
                                    <button opaque="NO" contentMode="scaleToFill" fixedFrame="YES" contentHorizontalAlignment="leading" contentVerticalAlignment="center" buttonType="system" lineBreakMode="middleTruncation" translatesAutoresizingMaskIntoConstraints="NO" id="FLL-Nn-4X1">
                                        <rect key="frame" x="0.0" y="306" width="339" height="35"/>
                                        <autoresizingMask key="autoresizingMask" flexibleMaxX="YES" flexibleMaxY="YES"/>
                                        <state key="normal" title="Button"/>
                                        <buttonConfiguration key="configuration" style="plain" title="AUTO STORAGE CLASS">
                                            <fontDescription key="titleFontDescription" type="boldSystem" pointSize="20"/>
                                        </buttonConfiguration>
                                        <connections>
                                            <segue destination="Mv5-O8-kY3" kind="presentation" id="9S9-iW-xKR"/>
                                        </connections>
                                    </button>
                                    <button opaque="NO" contentMode="scaleToFill" fixedFrame="YES" contentHorizontalAlignment="leading" contentVerticalAlignment="center" buttonType="system" lineBreakMode="middleTruncation" translatesAutoresizingMaskIntoConstraints="NO" id="SE6-hm-vM0">
                                        <rect key="frame" x="0.0" y="359" width="339" height="35"/>
                                        <autoresizingMask key="autoresizingMask" flexibleMaxX="YES" flexibleMaxY="YES"/>
                                        <state key="normal" title="Button"/>
                                        <buttonConfiguration key="configuration" style="plain" title="STATIC STORAGE CLASS">
                                            <fontDescription key="titleFontDescription" type="boldSystem" pointSize="20"/>
                                        </buttonConfiguration>
                                        <connections>
                                            <segue destination="8qf-Iv-U7U" kind="presentation" id="YfG-MV-yRT"/>
                                        </connections>
                                    </button>
                                    <button opaque="NO" contentMode="scaleToFill" fixedFrame="YES" contentHorizontalAlignment="leading" contentVerticalAlignment="center" buttonType="system" lineBreakMode="middleTruncation" translatesAutoresizingMaskIntoConstraints="NO" id="8CI-0C-Q2T">
                                        <rect key="frame" x="0.0" y="422" width="339" height="35"/>
                                        <autoresizingMask key="autoresizingMask" flexibleMaxX="YES" flexibleMaxY="YES"/>
                                        <state key="normal" title="Button"/>
                                        <buttonConfiguration key="configuration" style="plain" title="PRE INCREMENT OPERATORS">
                                            <fontDescription key="titleFontDescription" type="boldSystem" pointSize="20"/>
                                        </buttonConfiguration>
                                        <connections>
                                            <segue destination="Qkg-1M-WUB" kind="presentation" id="ZIi-8m-es3"/>
                                        </connections>
                                    </button>
                                    <button opaque="NO" contentMode="scaleToFill" fixedFrame="YES" contentHorizontalAlignment="leading" contentVerticalAlignment="center" buttonType="system" lineBreakMode="middleTruncation" translatesAutoresizingMaskIntoConstraints="NO" id="0Uf-Sl-B3p">
                                        <rect key="frame" x="0.0" y="465" width="339" height="35"/>
                                        <autoresizingMask key="autoresizingMask" flexibleMaxX="YES" flexibleMaxY="YES"/>
                                        <state key="normal" title="Button"/>
                                        <buttonConfiguration key="configuration" style="plain" title="POST INCREMENT OPERATORS">
                                            <fontDescription key="titleFontDescription" type="boldSystem" pointSize="20"/>
                                        </buttonConfiguration>
                                        <connections>
                                            <segue destination="Vhj-wz-BEm" kind="presentation" id="xCq-3K-LSS"/>
                                        </connections>
                                    </button>
                                    <button opaque="NO" contentMode="scaleToFill" fixedFrame="YES" contentHorizontalAlignment="leading" contentVerticalAlignment="center" buttonType="system" lineBreakMode="middleTruncation" translatesAutoresizingMaskIntoConstraints="NO" id="b35-hI-2ml">
                                        <rect key="frame" x="0.0" y="526" width="339" height="35"/>
                                        <autoresizingMask key="autoresizingMask" flexibleMaxX="YES" flexibleMaxY="YES"/>
                                        <state key="normal" title="Button"/>
                                        <buttonConfiguration key="configuration" style="plain" title="POST AND PRE INCREMENT OPERATORS">
                                            <fontDescription key="titleFontDescription" type="boldSystem" pointSize="20"/>
                                        </buttonConfiguration>
                                        <connections>
                                            <segue destination="z4S-Fo-Puc" kind="presentation" id="Ke1-rt-d8d"/>
                                        </connections>
                                    </button>
                                    <button opaque="NO" contentMode="scaleToFill" fixedFrame="YES" contentHorizontalAlignment="leading" contentVerticalAlignment="center" buttonType="system" lineBreakMode="middleTruncation" translatesAutoresizingMaskIntoConstraints="NO" id="22s-0j-7Ee">
                                        <rect key="frame" x="0.0" y="585" width="339" height="35"/>
                                        <autoresizingMask key="autoresizingMask" flexibleMaxX="YES" flexibleMaxY="YES"/>
                                        <state key="normal" title="Button"/>
                                        <buttonConfiguration key="configuration" style="plain" title="POST AND PRE DECREMENT OPERATORS">
                                            <fontDescription key="titleFontDescription" type="boldSystem" pointSize="20"/>
                                        </buttonConfiguration>
                                        <connections>
                                            <segue destination="TmI-SM-y7B" kind="presentation" id="uEn-Fb-bN9"/>
                                        </connections>
                                    </button>
                                    <button opaque="NO" contentMode="scaleToFill" fixedFrame="YES" contentHorizontalAlignment="leading" contentVerticalAlignment="center" buttonType="system" lineBreakMode="middleTruncation" translatesAutoresizingMaskIntoConstraints="NO" id="aXp-Zl-VPj">
                                        <rect key="frame" x="0.0" y="105" width="339" height="35"/>
                                        <autoresizingMask key="autoresizingMask" flexibleMaxX="YES" flexibleMaxY="YES"/>
                                        <state key="normal" title="Button"/>
                                        <buttonConfiguration key="configuration" style="plain" title="FIND SIZE OF ALL DATA TYPES USING sizeof() FUNCTION">
                                            <fontDescription key="titleFontDescription" type="boldSystem" pointSize="20"/>
                                        </buttonConfiguration>
                                        <connections>
                                            <segue destination="SYD-qC-NEY" kind="presentation" id="fs9-rr-IpC"/>
                                        </connections>
                                    </button>
                                </subviews>
                                <color key="backgroundColor" systemColor="systemBackgroundColor"/>
                            </view>
                            <button opaque="NO" contentMode="scaleToFill" fixedFrame="YES" contentHorizontalAlignment="center" contentVerticalAlignment="center" buttonType="system" lineBreakMode="middleTruncation" translatesAutoresizingMaskIntoConstraints="NO" id="PNP-ia-uht">
                                <rect key="frame" x="10" y="10" width="39" height="35"/>
                                <autoresizingMask key="autoresizingMask" flexibleMaxX="YES" flexibleMaxY="YES"/>
                                <state key="normal" title="Button"/>
                                <buttonConfiguration key="configuration" style="plain" title="←"/>
                                <connections>
                                    <segue destination="Z4V-Sw-RP9" kind="presentation" id="il4-ht-0li"/>
                                </connections>
                            </button>
                        </subviews>
                        <viewLayoutGuide key="safeArea" id="Qxr-ix-ZaN"/>
                        <color key="backgroundColor" systemColor="systemBackgroundColor"/>
                        <constraints>
                            <constraint firstItem="xo7-Nv-tdg" firstAttribute="bottom" secondItem="Qxr-ix-ZaN" secondAttribute="bottom" id="ARB-Ni-5Lx"/>
                            <constraint firstItem="xo7-Nv-tdg" firstAttribute="trailing" secondItem="Qxr-ix-ZaN" secondAttribute="trailing" id="bTw-lI-ViB"/>
                            <constraint firstItem="xo7-Nv-tdg" firstAttribute="leading" secondItem="Qxr-ix-ZaN" secondAttribute="leading" id="fey-Ib-Jf2"/>
                            <constraint firstItem="xo7-Nv-tdg" firstAttribute="top" secondItem="Qxr-ix-ZaN" secondAttribute="top" id="zHj-fs-g5s"/>
                        </constraints>
                    </view>
                </viewController>
                <placeholder placeholderIdentifier="IBFirstResponder" id="VCd-tw-W7X" userLabel="First Responder" customClass="UIResponder" sceneMemberID="firstResponder"/>
            </objects>
            <point key="canvasLocation" x="1405.5999999999999" y="706.59670164917543"/>
        </scene>
        <!--View Controller-->
        <scene sceneID="8iG-DE-vcG">
            <objects>
                <viewController id="SYD-qC-NEY" sceneMemberID="viewController">
                    <view key="view" contentMode="scaleToFill" id="GFY-Az-sM0">
                        <rect key="frame" x="0.0" y="0.0" width="375" height="647"/>
                        <autoresizingMask key="autoresizingMask" widthSizable="YES" heightSizable="YES"/>
                        <subviews>
                            <button opaque="NO" contentMode="scaleToFill" fixedFrame="YES" contentHorizontalAlignment="center" contentVerticalAlignment="center" buttonType="system" lineBreakMode="middleTruncation" translatesAutoresizingMaskIntoConstraints="NO" id="dbV-87-WH2">
                                <rect key="frame" x="16" y="9" width="39" height="35"/>
                                <autoresizingMask key="autoresizingMask" flexibleMaxX="YES" flexibleMaxY="YES"/>
                                <state key="normal" title="Button"/>
                                <buttonConfiguration key="configuration" style="plain" title="←"/>
                                <connections>
                                    <segue destination="Ptk-1c-tSM" kind="presentation" id="ayv-Pg-t9u"/>
                                </connections>
                            </button>
                            <scrollView clipsSubviews="YES" multipleTouchEnabled="YES" contentMode="scaleToFill" fixedFrame="YES" translatesAutoresizingMaskIntoConstraints="NO" id="nts-gh-qm9">
                                <rect key="frame" x="0.0" y="52" width="375" height="615"/>
                                <autoresizingMask key="autoresizingMask" flexibleMaxX="YES" flexibleMaxY="YES"/>
                                <subviews>
                                    <textView clipsSubviews="YES" multipleTouchEnabled="YES" contentMode="scaleToFill" fixedFrame="YES" editable="NO" textAlignment="natural" translatesAutoresizingMaskIntoConstraints="NO" id="LeV-dr-vVC">
                                        <rect key="frame" x="0.0" y="0.0" width="375" height="615"/>
                                        <autoresizingMask key="autoresizingMask" flexibleMaxX="YES" flexibleMaxY="YES"/>
                                        <color key="backgroundColor" systemColor="systemBackgroundColor"/>
                                        <string key="text">Program 1 :Implement a program to find size of all data types using sizeof() function.
#include&lt; stdio.h&gt;
#include&lt; conio.h&gt;
void main()
{
int a;
char b;
float c;
double d;
clrscr();
printf("Storage size for int data type:%d \n",sizeof(a));
printf("Storage size for char data type:%d \n",sizeof(b));
printf("Storage size for float data type:%d \n",sizeof(c));
printf("Storage size for double data type:%d\n",sizeof(d));
getch();
}

Output:
Storage size for int data type:2
Storage size for char data type:1
Storage size for float data type:4
Storage size for double data type:8</string>
                                        <color key="textColor" systemColor="labelColor"/>
                                        <fontDescription key="fontDescription" type="system" pointSize="14"/>
                                        <textInputTraits key="textInputTraits" autocapitalizationType="sentences"/>
                                    </textView>
                                </subviews>
                                <viewLayoutGuide key="contentLayoutGuide" id="suC-Uo-W7f"/>
                                <viewLayoutGuide key="frameLayoutGuide" id="4og-NQ-XUW"/>
                            </scrollView>
                        </subviews>
                        <viewLayoutGuide key="safeArea" id="4Ib-Gn-24L"/>
                        <color key="backgroundColor" systemColor="systemBackgroundColor"/>
                    </view>
                </viewController>
                <placeholder placeholderIdentifier="IBFirstResponder" id="A4N-ES-xh7" userLabel="First Responder" customClass="UIResponder" sceneMemberID="firstResponder"/>
            </objects>
            <point key="canvasLocation" x="2084" y="708"/>
        </scene>
        <!--View Controller-->
        <scene sceneID="zbN-eN-0zv">
            <objects>
                <viewController id="R6a-Fs-cAH" sceneMemberID="viewController">
                    <view key="view" contentMode="scaleToFill" id="O2J-UU-eyn">
                        <rect key="frame" x="0.0" y="0.0" width="375" height="647"/>
                        <autoresizingMask key="autoresizingMask" widthSizable="YES" heightSizable="YES"/>
                        <subviews>
                            <button opaque="NO" contentMode="scaleToFill" fixedFrame="YES" contentHorizontalAlignment="center" contentVerticalAlignment="center" buttonType="system" lineBreakMode="middleTruncation" translatesAutoresizingMaskIntoConstraints="NO" id="ch5-vg-qIW">
                                <rect key="frame" x="16" y="9" width="39" height="35"/>
                                <autoresizingMask key="autoresizingMask" flexibleMaxX="YES" flexibleMaxY="YES"/>
                                <state key="normal" title="Button"/>
                                <buttonConfiguration key="configuration" style="plain" title="←"/>
                                <connections>
                                    <segue destination="Ptk-1c-tSM" kind="presentation" id="Tbk-aP-dGH"/>
                                </connections>
                            </button>
                            <scrollView clipsSubviews="YES" multipleTouchEnabled="YES" contentMode="scaleToFill" fixedFrame="YES" translatesAutoresizingMaskIntoConstraints="NO" id="QUY-bx-H8z">
                                <rect key="frame" x="0.0" y="52" width="375" height="615"/>
                                <autoresizingMask key="autoresizingMask" flexibleMaxX="YES" flexibleMaxY="YES"/>
                                <subviews>
                                    <textView clipsSubviews="YES" multipleTouchEnabled="YES" contentMode="scaleToFill" fixedFrame="YES" editable="NO" textAlignment="natural" translatesAutoresizingMaskIntoConstraints="NO" id="Xb8-rJ-TCj">
                                        <rect key="frame" x="0.0" y="0.0" width="375" height="615"/>
                                        <autoresizingMask key="autoresizingMask" flexibleMaxX="YES" flexibleMaxY="YES"/>
                                        <color key="backgroundColor" systemColor="systemBackgroundColor"/>
                                        <string key="text">Program 2: Program for scanning a string with spaces using scanf function:
#include&lt; stdio.h&gt;
#include&lt; conio.h&gt;
void main()
{
char name[50];
clrscr();
printf(“Enter your full name\n”);
scanf(“%s”, name);
printf(“Full Name : %s”,name);
getch();
}

Output:
Enter your full name
XYZ
Full Name : XYZ</string>
                                        <color key="textColor" systemColor="labelColor"/>
                                        <fontDescription key="fontDescription" type="system" pointSize="14"/>
                                        <textInputTraits key="textInputTraits" autocapitalizationType="sentences"/>
                                    </textView>
                                </subviews>
                                <viewLayoutGuide key="contentLayoutGuide" id="9Cq-Ib-yRh"/>
                                <viewLayoutGuide key="frameLayoutGuide" id="b4k-4h-yx5"/>
                            </scrollView>
                        </subviews>
                        <viewLayoutGuide key="safeArea" id="eV6-qD-CAp"/>
                        <color key="backgroundColor" systemColor="systemBackgroundColor"/>
                    </view>
                </viewController>
                <placeholder placeholderIdentifier="IBFirstResponder" id="xCT-8V-bVp" userLabel="First Responder" customClass="UIResponder" sceneMemberID="firstResponder"/>
            </objects>
            <point key="canvasLocation" x="2737" y="708"/>
        </scene>
        <!--View Controller-->
        <scene sceneID="djX-60-t4V">
            <objects>
                <viewController id="Ujl-5b-Mbp" sceneMemberID="viewController">
                    <view key="view" contentMode="scaleToFill" id="AlW-UK-RYi">
                        <rect key="frame" x="0.0" y="0.0" width="375" height="647"/>
                        <autoresizingMask key="autoresizingMask" widthSizable="YES" heightSizable="YES"/>
                        <subviews>
                            <button opaque="NO" contentMode="scaleToFill" fixedFrame="YES" contentHorizontalAlignment="center" contentVerticalAlignment="center" buttonType="system" lineBreakMode="middleTruncation" translatesAutoresizingMaskIntoConstraints="NO" id="Oti-d6-MPJ">
                                <rect key="frame" x="16" y="9" width="39" height="35"/>
                                <autoresizingMask key="autoresizingMask" flexibleMaxX="YES" flexibleMaxY="YES"/>
                                <state key="normal" title="Button"/>
                                <buttonConfiguration key="configuration" style="plain" title="←"/>
                                <connections>
                                    <segue destination="Ptk-1c-tSM" kind="presentation" id="Q2L-2d-Ae6"/>
                                </connections>
                            </button>
                            <scrollView clipsSubviews="YES" multipleTouchEnabled="YES" contentMode="scaleToFill" fixedFrame="YES" translatesAutoresizingMaskIntoConstraints="NO" id="QlB-IL-GoI">
                                <rect key="frame" x="0.0" y="52" width="375" height="615"/>
                                <autoresizingMask key="autoresizingMask" flexibleMaxX="YES" flexibleMaxY="YES"/>
                                <subviews>
                                    <textView clipsSubviews="YES" multipleTouchEnabled="YES" contentMode="scaleToFill" fixedFrame="YES" editable="NO" textAlignment="natural" translatesAutoresizingMaskIntoConstraints="NO" id="Mva-cF-hbp">
                                        <rect key="frame" x="0.0" y="0.0" width="375" height="615"/>
                                        <autoresizingMask key="autoresizingMask" flexibleMaxX="YES" flexibleMaxY="YES"/>
                                        <color key="backgroundColor" systemColor="systemBackgroundColor"/>
                                        <string key="text">Program 3: Program for scanning a string with spaces using gets function:
#include&lt; stdio.h&gt;
#include&lt; conio.h&gt;
void main()
{
char name[50];
clrscr();
printf(“Enter your full name\n”);
gets(name);
printf(“Full Name : %s”,name);
getch();
}

Output:
Enter your full name
ABC XYZ
Full Name : ABC XYZ

Note that using printf function we can display string with spaces but using scanf function we cannot scan string with spaces.</string>
                                        <color key="textColor" systemColor="labelColor"/>
                                        <fontDescription key="fontDescription" type="system" pointSize="14"/>
                                        <textInputTraits key="textInputTraits" autocapitalizationType="sentences"/>
                                    </textView>
                                </subviews>
                                <viewLayoutGuide key="contentLayoutGuide" id="PfV-I5-oln"/>
                                <viewLayoutGuide key="frameLayoutGuide" id="tjA-VQ-GUh"/>
                            </scrollView>
                        </subviews>
                        <viewLayoutGuide key="safeArea" id="8Yl-vW-80i"/>
                        <color key="backgroundColor" systemColor="systemBackgroundColor"/>
                    </view>
                </viewController>
                <placeholder placeholderIdentifier="IBFirstResponder" id="jyW-6Q-tus" userLabel="First Responder" customClass="UIResponder" sceneMemberID="firstResponder"/>
            </objects>
            <point key="canvasLocation" x="3388" y="708"/>
        </scene>
        <!--View Controller-->
        <scene sceneID="geH-ih-Vfe">
            <objects>
                <viewController id="Mv5-O8-kY3" sceneMemberID="viewController">
                    <view key="view" contentMode="scaleToFill" id="fie-Pv-wwP">
                        <rect key="frame" x="0.0" y="0.0" width="375" height="647"/>
                        <autoresizingMask key="autoresizingMask" widthSizable="YES" heightSizable="YES"/>
                        <subviews>
                            <button opaque="NO" contentMode="scaleToFill" fixedFrame="YES" contentHorizontalAlignment="center" contentVerticalAlignment="center" buttonType="system" lineBreakMode="middleTruncation" translatesAutoresizingMaskIntoConstraints="NO" id="u2P-uD-H3K">
                                <rect key="frame" x="16" y="9" width="39" height="35"/>
                                <autoresizingMask key="autoresizingMask" flexibleMaxX="YES" flexibleMaxY="YES"/>
                                <state key="normal" title="Button"/>
                                <buttonConfiguration key="configuration" style="plain" title="←"/>
                                <connections>
                                    <segue destination="Ptk-1c-tSM" kind="presentation" id="MlL-VU-r5Q"/>
                                </connections>
                            </button>
                            <scrollView clipsSubviews="YES" multipleTouchEnabled="YES" contentMode="scaleToFill" fixedFrame="YES" translatesAutoresizingMaskIntoConstraints="NO" id="ViR-n7-H6e">
                                <rect key="frame" x="0.0" y="52" width="375" height="615"/>
                                <autoresizingMask key="autoresizingMask" flexibleMaxX="YES" flexibleMaxY="YES"/>
                                <subviews>
                                    <textView clipsSubviews="YES" multipleTouchEnabled="YES" contentMode="scaleToFill" fixedFrame="YES" editable="NO" textAlignment="natural" translatesAutoresizingMaskIntoConstraints="NO" id="bMb-Rg-CoS">
                                        <rect key="frame" x="0.0" y="0.0" width="375" height="615"/>
                                        <autoresizingMask key="autoresizingMask" flexibleMaxX="YES" flexibleMaxY="YES"/>
                                        <color key="backgroundColor" systemColor="systemBackgroundColor"/>
                                        <string key="text">Program 4: Program based on auto storage class:
#include&lt; stdio.h&gt;
#include&lt; conio.h&gt;
void main()
{
clrscr();
add();
add();
getch();
}
void add()
{
auto int number =10;
number = number +10;
printf(“\n Number=%d”,num);
}

Output:
Number=20
Number=20</string>
                                        <color key="textColor" systemColor="labelColor"/>
                                        <fontDescription key="fontDescription" type="system" pointSize="14"/>
                                        <textInputTraits key="textInputTraits" autocapitalizationType="sentences"/>
                                    </textView>
                                </subviews>
                                <viewLayoutGuide key="contentLayoutGuide" id="PFn-CQ-w7U"/>
                                <viewLayoutGuide key="frameLayoutGuide" id="jB2-gz-Pzl"/>
                            </scrollView>
                        </subviews>
                        <viewLayoutGuide key="safeArea" id="HaI-OV-MpF"/>
                        <color key="backgroundColor" systemColor="systemBackgroundColor"/>
                    </view>
                </viewController>
                <placeholder placeholderIdentifier="IBFirstResponder" id="Wuc-Uc-HBN" userLabel="First Responder" customClass="UIResponder" sceneMemberID="firstResponder"/>
            </objects>
            <point key="canvasLocation" x="4020" y="708"/>
        </scene>
        <!--View Controller-->
        <scene sceneID="MaB-oj-kUC">
            <objects>
                <viewController id="8qf-Iv-U7U" sceneMemberID="viewController">
                    <view key="view" contentMode="scaleToFill" id="CvQ-CY-5xx">
                        <rect key="frame" x="0.0" y="0.0" width="375" height="647"/>
                        <autoresizingMask key="autoresizingMask" widthSizable="YES" heightSizable="YES"/>
                        <subviews>
                            <button opaque="NO" contentMode="scaleToFill" fixedFrame="YES" contentHorizontalAlignment="center" contentVerticalAlignment="center" buttonType="system" lineBreakMode="middleTruncation" translatesAutoresizingMaskIntoConstraints="NO" id="hxP-cC-Idl">
                                <rect key="frame" x="16" y="9" width="39" height="35"/>
                                <autoresizingMask key="autoresizingMask" flexibleMaxX="YES" flexibleMaxY="YES"/>
                                <state key="normal" title="Button"/>
                                <buttonConfiguration key="configuration" style="plain" title="←"/>
                                <connections>
                                    <segue destination="Ptk-1c-tSM" kind="presentation" id="QV1-bn-nVd"/>
                                </connections>
                            </button>
                            <scrollView clipsSubviews="YES" multipleTouchEnabled="YES" contentMode="scaleToFill" fixedFrame="YES" translatesAutoresizingMaskIntoConstraints="NO" id="EXR-7b-hHQ">
                                <rect key="frame" x="0.0" y="52" width="375" height="615"/>
                                <autoresizingMask key="autoresizingMask" flexibleMaxX="YES" flexibleMaxY="YES"/>
                                <subviews>
                                    <textView clipsSubviews="YES" multipleTouchEnabled="YES" contentMode="scaleToFill" fixedFrame="YES" editable="NO" textAlignment="natural" translatesAutoresizingMaskIntoConstraints="NO" id="94W-fa-Nic">
                                        <rect key="frame" x="0.0" y="0.0" width="375" height="615"/>
                                        <autoresizingMask key="autoresizingMask" flexibleMaxX="YES" flexibleMaxY="YES"/>
                                        <color key="backgroundColor" systemColor="systemBackgroundColor"/>
                                        <string key="text">Program 5: Program based on static storage class:
#include&lt; stdio.h&gt;
#include&lt; conio.h&gt;
void main()
{
clrscr();
add();
add();
getch();
}
void add()
{
static int number =10;
number = number +10;
printf(“\n Number=%d”,num);
}

Output:
Number=20
Number=30

Explanation:
Static variables are initialized only once throughout their program execution. Lifetime of static variable is throughout program execution so the values of static variables are retained between function call. Values of static variables remains live. So first add function call value of number variable becomes 20 and second add function call value of number variable becomes 30.</string>
                                        <color key="textColor" systemColor="labelColor"/>
                                        <fontDescription key="fontDescription" type="system" pointSize="14"/>
                                        <textInputTraits key="textInputTraits" autocapitalizationType="sentences"/>
                                    </textView>
                                </subviews>
                                <viewLayoutGuide key="contentLayoutGuide" id="0jA-Uq-OEg"/>
                                <viewLayoutGuide key="frameLayoutGuide" id="O9m-Qe-jiP"/>
                            </scrollView>
                        </subviews>
                        <viewLayoutGuide key="safeArea" id="KRc-f4-qhO"/>
                        <color key="backgroundColor" systemColor="systemBackgroundColor"/>
                    </view>
                </viewController>
                <placeholder placeholderIdentifier="IBFirstResponder" id="tGv-Qb-8n7" userLabel="First Responder" customClass="UIResponder" sceneMemberID="firstResponder"/>
            </objects>
            <point key="canvasLocation" x="4673" y="708"/>
        </scene>
        <!--View Controller-->
        <scene sceneID="m8t-Aw-RPt">
            <objects>
                <viewController id="Qkg-1M-WUB" sceneMemberID="viewController">
                    <view key="view" contentMode="scaleToFill" id="Ue8-Tq-2hu">
                        <rect key="frame" x="0.0" y="0.0" width="375" height="647"/>
                        <autoresizingMask key="autoresizingMask" widthSizable="YES" heightSizable="YES"/>
                        <subviews>
                            <button opaque="NO" contentMode="scaleToFill" fixedFrame="YES" contentHorizontalAlignment="center" contentVerticalAlignment="center" buttonType="system" lineBreakMode="middleTruncation" translatesAutoresizingMaskIntoConstraints="NO" id="oF0-5g-Udb">
                                <rect key="frame" x="16" y="9" width="39" height="35"/>
                                <autoresizingMask key="autoresizingMask" flexibleMaxX="YES" flexibleMaxY="YES"/>
                                <state key="normal" title="Button"/>
                                <buttonConfiguration key="configuration" style="plain" title="←"/>
                                <connections>
                                    <segue destination="Ptk-1c-tSM" kind="presentation" id="nIb-i9-voY"/>
                                </connections>
                            </button>
                            <scrollView clipsSubviews="YES" multipleTouchEnabled="YES" contentMode="scaleToFill" fixedFrame="YES" translatesAutoresizingMaskIntoConstraints="NO" id="u8K-Pi-Zaa">
                                <rect key="frame" x="0.0" y="52" width="375" height="615"/>
                                <autoresizingMask key="autoresizingMask" flexibleMaxX="YES" flexibleMaxY="YES"/>
                                <subviews>
                                    <textView clipsSubviews="YES" multipleTouchEnabled="YES" contentMode="scaleToFill" fixedFrame="YES" editable="NO" textAlignment="natural" translatesAutoresizingMaskIntoConstraints="NO" id="Mik-vD-dnO">
                                        <rect key="frame" x="0.0" y="0.0" width="375" height="615"/>
                                        <autoresizingMask key="autoresizingMask" flexibleMaxX="YES" flexibleMaxY="YES"/>
                                        <color key="backgroundColor" systemColor="systemBackgroundColor"/>
                                        <string key="text">Program 6: Program based on pre increment operators.
#include&lt; stdio.h&gt;
#include&lt; conio.h&gt;
void main()
{
int a=10,b;
b = ++a;
//pre increment unary operator
clrscr();
printf(“a =% d “,a);
printf(“b =% d “,b);
getch();
}

Output:
a = 11
b = 11

Explanation:
b = ++a;
This statement is short hand notation containing two statements.
a =a+1;
b =a ;
Preprocessor convert short hand notation into its proper standard statement form.
In above ++a is pre increment unary operator so a = a +1 statement add before b=a statement.
So output is a=11 and b=11.
Now take another example with modification.</string>
                                        <color key="textColor" systemColor="labelColor"/>
                                        <fontDescription key="fontDescription" type="system" pointSize="14"/>
                                        <textInputTraits key="textInputTraits" autocapitalizationType="sentences"/>
                                    </textView>
                                </subviews>
                                <viewLayoutGuide key="contentLayoutGuide" id="gu4-8k-hIb"/>
                                <viewLayoutGuide key="frameLayoutGuide" id="pdL-tX-4vu"/>
                            </scrollView>
                        </subviews>
                        <viewLayoutGuide key="safeArea" id="3Qo-5R-ET8"/>
                        <color key="backgroundColor" systemColor="systemBackgroundColor"/>
                    </view>
                </viewController>
                <placeholder placeholderIdentifier="IBFirstResponder" id="jVc-Px-BWw" userLabel="First Responder" customClass="UIResponder" sceneMemberID="firstResponder"/>
            </objects>
            <point key="canvasLocation" x="5375" y="707"/>
        </scene>
        <!--View Controller-->
        <scene sceneID="8IT-qD-ebC">
            <objects>
                <viewController id="Vhj-wz-BEm" sceneMemberID="viewController">
                    <view key="view" contentMode="scaleToFill" id="Krf-8A-ELM">
                        <rect key="frame" x="0.0" y="0.0" width="375" height="647"/>
                        <autoresizingMask key="autoresizingMask" widthSizable="YES" heightSizable="YES"/>
                        <subviews>
                            <button opaque="NO" contentMode="scaleToFill" fixedFrame="YES" contentHorizontalAlignment="center" contentVerticalAlignment="center" buttonType="system" lineBreakMode="middleTruncation" translatesAutoresizingMaskIntoConstraints="NO" id="SIe-sI-bbk">
                                <rect key="frame" x="16" y="9" width="39" height="35"/>
                                <autoresizingMask key="autoresizingMask" flexibleMaxX="YES" flexibleMaxY="YES"/>
                                <state key="normal" title="Button"/>
                                <buttonConfiguration key="configuration" style="plain" title="←"/>
                                <connections>
                                    <segue destination="Ptk-1c-tSM" kind="presentation" id="4zE-LG-EFS"/>
                                </connections>
                            </button>
                            <scrollView clipsSubviews="YES" multipleTouchEnabled="YES" contentMode="scaleToFill" fixedFrame="YES" translatesAutoresizingMaskIntoConstraints="NO" id="CQB-Tb-HXw">
                                <rect key="frame" x="0.0" y="52" width="375" height="615"/>
                                <autoresizingMask key="autoresizingMask" flexibleMaxX="YES" flexibleMaxY="YES"/>
                                <subviews>
                                    <textView clipsSubviews="YES" multipleTouchEnabled="YES" contentMode="scaleToFill" fixedFrame="YES" editable="NO" textAlignment="natural" translatesAutoresizingMaskIntoConstraints="NO" id="3iQ-iq-fzh">
                                        <rect key="frame" x="0.0" y="0.0" width="375" height="615"/>
                                        <autoresizingMask key="autoresizingMask" flexibleMaxX="YES" flexibleMaxY="YES"/>
                                        <color key="backgroundColor" systemColor="systemBackgroundColor"/>
                                        <string key="text">Program 7: Program based on post increment operators.
#include&lt; stdio.h&gt;
#include&lt; conio.h&gt;
void main()
{
int a=10,b;
b = a++;
//post increment unary operator
clrscr();
printf(“a =% d “,a);
printf(“b =% d “,b);
getch();
}

Output:
a = 11
b = 10

Explanation:
b = ++a;
This statement is short hand notation containing two statements.
b =a ;
a =a+1;
Preprocessor convert short hand notation into its proper standard statement form.
In above a++ is post increment unary operator so a = a +1 statement add after b=a statement.
So output is a=11 and b=10.</string>
                                        <color key="textColor" systemColor="labelColor"/>
                                        <fontDescription key="fontDescription" type="system" pointSize="14"/>
                                        <textInputTraits key="textInputTraits" autocapitalizationType="sentences"/>
                                    </textView>
                                </subviews>
                                <viewLayoutGuide key="contentLayoutGuide" id="mDT-l8-jAq"/>
                                <viewLayoutGuide key="frameLayoutGuide" id="LqI-NA-svb"/>
                            </scrollView>
                        </subviews>
                        <viewLayoutGuide key="safeArea" id="EnL-3V-8uD"/>
                        <color key="backgroundColor" systemColor="systemBackgroundColor"/>
                    </view>
                </viewController>
                <placeholder placeholderIdentifier="IBFirstResponder" id="rOL-N7-Aeg" userLabel="First Responder" customClass="UIResponder" sceneMemberID="firstResponder"/>
            </objects>
            <point key="canvasLocation" x="6065" y="707"/>
        </scene>
        <!--View Controller-->
        <scene sceneID="bkC-Ue-cwZ">
            <objects>
                <viewController id="z4S-Fo-Puc" sceneMemberID="viewController">
                    <view key="view" contentMode="scaleToFill" id="fjX-Cc-wzi">
                        <rect key="frame" x="0.0" y="0.0" width="375" height="647"/>
                        <autoresizingMask key="autoresizingMask" widthSizable="YES" heightSizable="YES"/>
                        <subviews>
                            <button opaque="NO" contentMode="scaleToFill" fixedFrame="YES" contentHorizontalAlignment="center" contentVerticalAlignment="center" buttonType="system" lineBreakMode="middleTruncation" translatesAutoresizingMaskIntoConstraints="NO" id="heK-EB-w4y">
                                <rect key="frame" x="16" y="9" width="39" height="35"/>
                                <autoresizingMask key="autoresizingMask" flexibleMaxX="YES" flexibleMaxY="YES"/>
                                <state key="normal" title="Button"/>
                                <buttonConfiguration key="configuration" style="plain" title="←"/>
                                <connections>
                                    <segue destination="Ptk-1c-tSM" kind="presentation" id="WXg-HD-A6I"/>
                                </connections>
                            </button>
                            <scrollView clipsSubviews="YES" multipleTouchEnabled="YES" contentMode="scaleToFill" fixedFrame="YES" translatesAutoresizingMaskIntoConstraints="NO" id="hz0-uz-Fya">
                                <rect key="frame" x="0.0" y="52" width="375" height="615"/>
                                <autoresizingMask key="autoresizingMask" flexibleMaxX="YES" flexibleMaxY="YES"/>
                                <subviews>
                                    <textView clipsSubviews="YES" multipleTouchEnabled="YES" contentMode="scaleToFill" fixedFrame="YES" editable="NO" textAlignment="natural" translatesAutoresizingMaskIntoConstraints="NO" id="TEC-gK-6KO">
                                        <rect key="frame" x="0.0" y="0.0" width="375" height="615"/>
                                        <autoresizingMask key="autoresizingMask" flexibleMaxX="YES" flexibleMaxY="YES"/>
                                        <color key="backgroundColor" systemColor="systemBackgroundColor"/>
                                        <string key="text">Program 8: Program based on post and pre increment operators.
#include&lt; stdio.h&gt;
#include&lt; conio.h&gt;
void main()
{
int a=10,b;
b = a++ + ++a;
////post and pre increment unary operator
clrscr();
printf(“a =% d “,a);
printf(“b =% d “,b);
getch();
}

Output:
a = 12
b = 22

Explanation:
b = a++ + ++a;
This statement is short hand notation containing two statements.
a =a+1;
b =a+a ;
a =a+1;
So output is a=12 and b=22.</string>
                                        <color key="textColor" systemColor="labelColor"/>
                                        <fontDescription key="fontDescription" type="system" pointSize="14"/>
                                        <textInputTraits key="textInputTraits" autocapitalizationType="sentences"/>
                                    </textView>
                                </subviews>
                                <viewLayoutGuide key="contentLayoutGuide" id="Nax-oI-8CA"/>
                                <viewLayoutGuide key="frameLayoutGuide" id="hat-Nl-dyZ"/>
                            </scrollView>
                        </subviews>
                        <viewLayoutGuide key="safeArea" id="z1d-9K-buT"/>
                        <color key="backgroundColor" systemColor="systemBackgroundColor"/>
                    </view>
                </viewController>
                <placeholder placeholderIdentifier="IBFirstResponder" id="Dxf-xz-sOE" userLabel="First Responder" customClass="UIResponder" sceneMemberID="firstResponder"/>
            </objects>
            <point key="canvasLocation" x="6737" y="707"/>
        </scene>
        <!--View Controller-->
        <scene sceneID="kVu-z9-e3p">
            <objects>
                <viewController id="TmI-SM-y7B" sceneMemberID="viewController">
                    <view key="view" contentMode="scaleToFill" id="fwP-iH-O9w">
                        <rect key="frame" x="0.0" y="0.0" width="375" height="647"/>
                        <autoresizingMask key="autoresizingMask" widthSizable="YES" heightSizable="YES"/>
                        <subviews>
                            <button opaque="NO" contentMode="scaleToFill" fixedFrame="YES" contentHorizontalAlignment="center" contentVerticalAlignment="center" buttonType="system" lineBreakMode="middleTruncation" translatesAutoresizingMaskIntoConstraints="NO" id="PXh-of-Xd4">
                                <rect key="frame" x="16" y="9" width="39" height="35"/>
                                <autoresizingMask key="autoresizingMask" flexibleMaxX="YES" flexibleMaxY="YES"/>
                                <state key="normal" title="Button"/>
                                <buttonConfiguration key="configuration" style="plain" title="←"/>
                                <connections>
                                    <segue destination="Ptk-1c-tSM" kind="presentation" id="1Bj-wm-uVQ"/>
                                </connections>
                            </button>
                            <scrollView clipsSubviews="YES" multipleTouchEnabled="YES" contentMode="scaleToFill" fixedFrame="YES" translatesAutoresizingMaskIntoConstraints="NO" id="rts-hu-odO">
                                <rect key="frame" x="0.0" y="52" width="375" height="615"/>
                                <autoresizingMask key="autoresizingMask" flexibleMaxX="YES" flexibleMaxY="YES"/>
                                <subviews>
                                    <textView clipsSubviews="YES" multipleTouchEnabled="YES" contentMode="scaleToFill" fixedFrame="YES" editable="NO" textAlignment="natural" translatesAutoresizingMaskIntoConstraints="NO" id="fkU-Tf-WX7">
                                        <rect key="frame" x="0.0" y="0.0" width="375" height="615"/>
                                        <autoresizingMask key="autoresizingMask" flexibleMaxX="YES" flexibleMaxY="YES"/>
                                        <color key="backgroundColor" systemColor="systemBackgroundColor"/>
                                        <string key="text">Program 9: Program based on post and pre decrement operators.
#include&lt; stdio.h&gt;
#include&lt; conio.h&gt;
void main()
{
int a=10, b;
b = --a + a-- * 10;
//post and pre increment unary operator
clrscr();
printf(“a =% d “,a);
printf(“b =% d “,b);
getch();
}

Output:
a = 8
b = 99

Explanation:
b = --a + a-- * 10;
This statement is short hand notation containing three statements.
a =a-1;
b =a + a * 10;
a = a – 1;
So output is a=8 and b=99.
Now take another example with some modification.
b =a + a;
So output is a=12 and b=24.
Now take another example with some modification.</string>
                                        <color key="textColor" systemColor="labelColor"/>
                                        <fontDescription key="fontDescription" type="system" pointSize="14"/>
                                        <textInputTraits key="textInputTraits" autocapitalizationType="sentences"/>
                                    </textView>
                                </subviews>
                                <viewLayoutGuide key="contentLayoutGuide" id="MAm-jx-Fh1"/>
                                <viewLayoutGuide key="frameLayoutGuide" id="00T-7Z-P79"/>
                            </scrollView>
                        </subviews>
                        <viewLayoutGuide key="safeArea" id="Qyt-h8-hRd"/>
                        <color key="backgroundColor" systemColor="systemBackgroundColor"/>
                    </view>
                </viewController>
                <placeholder placeholderIdentifier="IBFirstResponder" id="cHB-RI-oy0" userLabel="First Responder" customClass="UIResponder" sceneMemberID="firstResponder"/>
            </objects>
            <point key="canvasLocation" x="7374" y="707"/>
        </scene>
        <!--View Controller-->
        <scene sceneID="vrU-KW-sH2">
            <objects>
                <viewController id="hBP-cv-dKb" sceneMemberID="viewController">
                    <view key="view" contentMode="scaleToFill" id="bJI-b2-b9m">
                        <rect key="frame" x="0.0" y="0.0" width="375" height="647"/>
                        <autoresizingMask key="autoresizingMask" widthSizable="YES" heightSizable="YES"/>
                        <subviews>
                            <view contentMode="scaleToFill" fixedFrame="YES" translatesAutoresizingMaskIntoConstraints="NO" id="wa4-1q-cxx">
                                <rect key="frame" x="0.0" y="0.0" width="375" height="667"/>
                                <autoresizingMask key="autoresizingMask" flexibleMaxX="YES" flexibleMaxY="YES"/>
                                <subviews>
                                    <button opaque="NO" contentMode="scaleToFill" fixedFrame="YES" contentHorizontalAlignment="leading" contentVerticalAlignment="center" buttonType="system" lineBreakMode="middleTruncation" translatesAutoresizingMaskIntoConstraints="NO" id="W6S-UJ-M9f">
                                        <rect key="frame" x="18" y="316" width="339" height="35"/>
                                        <autoresizingMask key="autoresizingMask" flexibleMaxX="YES" flexibleMaxY="YES"/>
                                        <state key="normal" title="Button"/>
                                        <buttonConfiguration key="configuration" style="plain" title="SCANNING A STRING WITH SPACES USING gets AND puts FUNCTION">
                                            <fontDescription key="titleFontDescription" type="boldSystem" pointSize="17"/>
                                        </buttonConfiguration>
                                        <connections>
                                            <segue destination="era-uP-xP2" kind="presentation" id="sKP-Rp-Ywg"/>
                                        </connections>
                                    </button>
                                    <button opaque="NO" contentMode="scaleToFill" fixedFrame="YES" contentHorizontalAlignment="leading" contentVerticalAlignment="center" buttonType="system" lineBreakMode="middleTruncation" translatesAutoresizingMaskIntoConstraints="NO" id="aLf-5E-0fg">
                                        <rect key="frame" x="18" y="102" width="339" height="35"/>
                                        <autoresizingMask key="autoresizingMask" flexibleMaxX="YES" flexibleMaxY="YES"/>
                                        <state key="normal" title="Button"/>
                                        <buttonConfiguration key="configuration" style="plain" title="SCANNING A CHARACTER USING getch METHOD">
                                            <fontDescription key="titleFontDescription" type="boldSystem" pointSize="17"/>
                                        </buttonConfiguration>
                                        <connections>
                                            <segue destination="Tqj-Ig-9QP" kind="presentation" id="AH2-6n-hlb"/>
                                        </connections>
                                    </button>
                                    <button opaque="NO" contentMode="scaleToFill" fixedFrame="YES" contentHorizontalAlignment="leading" contentVerticalAlignment="center" buttonType="system" lineBreakMode="middleTruncation" translatesAutoresizingMaskIntoConstraints="NO" id="eLq-r3-tdM">
                                        <rect key="frame" x="18" y="159" width="339" height="35"/>
                                        <autoresizingMask key="autoresizingMask" flexibleMaxX="YES" flexibleMaxY="YES"/>
                                        <state key="normal" title="Button"/>
                                        <buttonConfiguration key="configuration" style="plain" title="SCANNING A CHARACTER USING getche METHOD">
                                            <fontDescription key="titleFontDescription" type="boldSystem" pointSize="17"/>
                                        </buttonConfiguration>
                                        <connections>
                                            <segue destination="FnL-lt-QgH" kind="presentation" id="acm-Nr-oXS"/>
                                        </connections>
                                    </button>
                                    <button opaque="NO" contentMode="scaleToFill" fixedFrame="YES" contentHorizontalAlignment="leading" contentVerticalAlignment="center" buttonType="system" lineBreakMode="middleTruncation" translatesAutoresizingMaskIntoConstraints="NO" id="RYc-fr-s1H">
                                        <rect key="frame" x="18" y="216" width="339" height="35"/>
                                        <autoresizingMask key="autoresizingMask" flexibleMaxX="YES" flexibleMaxY="YES"/>
                                        <state key="normal" title="Button"/>
                                        <buttonConfiguration key="configuration" style="plain" title="SCANNING A STRING WITH SPACES USING scanf FUNCTION">
                                            <fontDescription key="titleFontDescription" type="boldSystem" pointSize="17"/>
                                        </buttonConfiguration>
                                        <connections>
                                            <segue destination="bBh-y7-fIL" kind="presentation" id="jOI-rQ-0gm"/>
                                        </connections>
                                    </button>
                                    <button opaque="NO" contentMode="scaleToFill" fixedFrame="YES" contentHorizontalAlignment="leading" contentVerticalAlignment="center" buttonType="system" lineBreakMode="middleTruncation" translatesAutoresizingMaskIntoConstraints="NO" id="dVO-mG-XY2">
                                        <rect key="frame" x="18" y="361" width="339" height="35"/>
                                        <autoresizingMask key="autoresizingMask" flexibleMaxX="YES" flexibleMaxY="YES"/>
                                        <state key="normal" title="Button"/>
                                        <buttonConfiguration key="configuration" style="plain" title="SHIFT LEFT (&lt;&lt;) OPERATOR">
                                            <fontDescription key="titleFontDescription" type="boldSystem" pointSize="17"/>
                                        </buttonConfiguration>
                                        <connections>
                                            <segue destination="Qgp-QO-711" kind="presentation" id="jfT-AQ-vdR"/>
                                        </connections>
                                    </button>
                                    <button opaque="NO" contentMode="scaleToFill" fixedFrame="YES" contentHorizontalAlignment="leading" contentVerticalAlignment="center" buttonType="system" lineBreakMode="middleTruncation" translatesAutoresizingMaskIntoConstraints="NO" id="1Pg-2f-GsR">
                                        <rect key="frame" x="18" y="389" width="339" height="35"/>
                                        <autoresizingMask key="autoresizingMask" flexibleMaxX="YES" flexibleMaxY="YES"/>
                                        <state key="normal" title="Button"/>
                                        <buttonConfiguration key="configuration" style="plain" title="SHIFT RIGHT (&gt;&gt;) OPERATOR">
                                            <fontDescription key="titleFontDescription" type="boldSystem" pointSize="17"/>
                                        </buttonConfiguration>
                                        <connections>
                                            <segue destination="MxD-AM-MH1" kind="presentation" id="nl2-4s-r3i"/>
                                        </connections>
                                    </button>
                                    <button opaque="NO" contentMode="scaleToFill" fixedFrame="YES" contentHorizontalAlignment="leading" contentVerticalAlignment="center" buttonType="system" lineBreakMode="middleTruncation" translatesAutoresizingMaskIntoConstraints="NO" id="dex-N7-Tkd">
                                        <rect key="frame" x="28" y="475" width="339" height="35"/>
                                        <autoresizingMask key="autoresizingMask" flexibleMaxX="YES" flexibleMaxY="YES"/>
                                        <state key="normal" title="Button"/>
                                        <buttonConfiguration key="configuration" style="plain" title="FIND LARGEST NUMBER BETWEEN TWO NUMBER USING TERNARY OPERATOR">
                                            <fontDescription key="titleFontDescription" type="boldSystem" pointSize="17"/>
                                        </buttonConfiguration>
                                        <connections>
                                            <segue destination="JHM-on-1C1" kind="presentation" id="Vzm-Yg-Ldm"/>
                                        </connections>
                                    </button>
                                    <button opaque="NO" contentMode="scaleToFill" fixedFrame="YES" contentHorizontalAlignment="leading" contentVerticalAlignment="center" buttonType="system" lineBreakMode="middleTruncation" translatesAutoresizingMaskIntoConstraints="NO" id="N68-AS-qz4">
                                        <rect key="frame" x="18" y="259" width="339" height="35"/>
                                        <autoresizingMask key="autoresizingMask" flexibleMaxX="YES" flexibleMaxY="YES"/>
                                        <state key="normal" title="Button"/>
                                        <buttonConfiguration key="configuration" style="plain" title="SCANNING STRING WITH SPACES USING gets FUNCTION">
                                            <fontDescription key="titleFontDescription" type="boldSystem" pointSize="17"/>
                                        </buttonConfiguration>
                                        <connections>
                                            <segue destination="OLf-s1-NHH" kind="presentation" id="LZY-YV-eaU"/>
                                        </connections>
                                    </button>
                                    <button opaque="NO" contentMode="scaleToFill" fixedFrame="YES" contentHorizontalAlignment="leading" contentVerticalAlignment="center" buttonType="system" lineBreakMode="middleTruncation" translatesAutoresizingMaskIntoConstraints="NO" id="zJN-Ig-ffk">
                                        <rect key="frame" x="18" y="581" width="339" height="35"/>
                                        <autoresizingMask key="autoresizingMask" flexibleMaxX="YES" flexibleMaxY="YES"/>
                                        <state key="normal" title="Button"/>
                                        <buttonConfiguration key="configuration" style="plain" title="SWAP TWO NUMBERS WITHOUT USING TEMPORARY VARIABLE">
                                            <fontDescription key="titleFontDescription" type="boldSystem" pointSize="17"/>
                                        </buttonConfiguration>
                                        <connections>
                                            <segue destination="ca2-RS-pgX" kind="presentation" id="0Ee-OM-DYX"/>
                                        </connections>
                                    </button>
                                    <button opaque="NO" contentMode="scaleToFill" fixedFrame="YES" contentHorizontalAlignment="leading" contentVerticalAlignment="center" buttonType="system" lineBreakMode="middleTruncation" translatesAutoresizingMaskIntoConstraints="NO" id="1MM-sM-jfd">
                                        <rect key="frame" x="18" y="47" width="339" height="35"/>
                                        <autoresizingMask key="autoresizingMask" flexibleMaxX="YES" flexibleMaxY="YES"/>
                                        <state key="normal" title="Button"/>
                                        <buttonConfiguration key="configuration" style="plain" title="SCANNING A CHARACTER USING getchar METHOD">
                                            <fontDescription key="titleFontDescription" type="boldSystem" pointSize="17"/>
                                        </buttonConfiguration>
                                        <connections>
                                            <segue destination="AQS-ed-HpN" kind="presentation" id="bw2-Fl-kn1"/>
                                        </connections>
                                    </button>
                                    <button opaque="NO" contentMode="scaleToFill" fixedFrame="YES" contentHorizontalAlignment="leading" contentVerticalAlignment="center" buttonType="system" lineBreakMode="middleTruncation" translatesAutoresizingMaskIntoConstraints="NO" id="2Aw-Ik-QvK">
                                        <rect key="frame" x="18" y="538" width="339" height="35"/>
                                        <autoresizingMask key="autoresizingMask" flexibleMaxX="YES" flexibleMaxY="YES"/>
                                        <state key="normal" title="Button"/>
                                        <buttonConfiguration key="configuration" style="plain" title="SWAP TWO NUMBERS USING TEMPORARY VARIABLE">
                                            <fontDescription key="titleFontDescription" type="boldSystem" pointSize="17"/>
                                        </buttonConfiguration>
                                        <connections>
                                            <segue destination="Hv3-pY-TfL" kind="presentation" id="h2H-sW-FJ0"/>
                                        </connections>
                                    </button>
                                    <button opaque="NO" contentMode="scaleToFill" fixedFrame="YES" contentHorizontalAlignment="leading" contentVerticalAlignment="center" buttonType="system" lineBreakMode="middleTruncation" translatesAutoresizingMaskIntoConstraints="NO" id="05Q-hT-qpu">
                                        <rect key="frame" x="28" y="432" width="339" height="35"/>
                                        <autoresizingMask key="autoresizingMask" flexibleMaxX="YES" flexibleMaxY="YES"/>
                                        <state key="normal" title="Button"/>
                                        <buttonConfiguration key="configuration" style="plain" title="BITWISE OPERATOR">
                                            <fontDescription key="titleFontDescription" type="boldSystem" pointSize="17"/>
                                        </buttonConfiguration>
                                        <connections>
                                            <segue destination="pB4-kt-vb0" kind="presentation" id="lv2-Wo-Si2"/>
                                        </connections>
                                    </button>
                                </subviews>
                                <color key="backgroundColor" systemColor="systemBackgroundColor"/>
                            </view>
                            <button opaque="NO" contentMode="scaleToFill" fixedFrame="YES" contentHorizontalAlignment="center" contentVerticalAlignment="center" buttonType="system" lineBreakMode="middleTruncation" translatesAutoresizingMaskIntoConstraints="NO" id="DvO-w4-CMh">
                                <rect key="frame" x="10" y="10" width="39" height="35"/>
                                <autoresizingMask key="autoresizingMask" flexibleMaxX="YES" flexibleMaxY="YES"/>
                                <state key="normal" title="Button"/>
                                <buttonConfiguration key="configuration" style="plain" title="←"/>
                                <connections>
                                    <segue destination="Z4V-Sw-RP9" kind="presentation" id="KJO-28-hJa"/>
                                </connections>
                            </button>
                        </subviews>
                        <viewLayoutGuide key="safeArea" id="vB4-ET-UQE"/>
                        <color key="backgroundColor" systemColor="systemBackgroundColor"/>
                    </view>
                </viewController>
                <placeholder placeholderIdentifier="IBFirstResponder" id="VDd-Jb-kPu" userLabel="First Responder" customClass="UIResponder" sceneMemberID="firstResponder"/>
            </objects>
            <point key="canvasLocation" x="1406" y="1377"/>
        </scene>
        <!--View Controller-->
        <scene sceneID="aJa-rx-AoX">
            <objects>
                <viewController id="AQS-ed-HpN" sceneMemberID="viewController">
                    <view key="view" contentMode="scaleToFill" id="qL5-4Z-QXc">
                        <rect key="frame" x="0.0" y="0.0" width="375" height="647"/>
                        <autoresizingMask key="autoresizingMask" widthSizable="YES" heightSizable="YES"/>
                        <subviews>
                            <button opaque="NO" contentMode="scaleToFill" fixedFrame="YES" contentHorizontalAlignment="center" contentVerticalAlignment="center" buttonType="system" lineBreakMode="middleTruncation" translatesAutoresizingMaskIntoConstraints="NO" id="DPd-Xq-Z9f">
                                <rect key="frame" x="16" y="9" width="39" height="35"/>
                                <autoresizingMask key="autoresizingMask" flexibleMaxX="YES" flexibleMaxY="YES"/>
                                <state key="normal" title="Button"/>
                                <buttonConfiguration key="configuration" style="plain" title="←"/>
                                <connections>
                                    <segue destination="hBP-cv-dKb" kind="presentation" id="LKL-Kg-2PT"/>
                                </connections>
                            </button>
                            <scrollView clipsSubviews="YES" multipleTouchEnabled="YES" contentMode="scaleToFill" fixedFrame="YES" translatesAutoresizingMaskIntoConstraints="NO" id="kYb-BA-3Nq">
                                <rect key="frame" x="0.0" y="52" width="375" height="615"/>
                                <autoresizingMask key="autoresizingMask" flexibleMaxX="YES" flexibleMaxY="YES"/>
                                <subviews>
                                    <textView clipsSubviews="YES" multipleTouchEnabled="YES" contentMode="scaleToFill" fixedFrame="YES" editable="NO" textAlignment="natural" translatesAutoresizingMaskIntoConstraints="NO" id="3Y7-tM-yyL">
                                        <rect key="frame" x="0.0" y="0.0" width="375" height="615"/>
                                        <autoresizingMask key="autoresizingMask" flexibleMaxX="YES" flexibleMaxY="YES"/>
                                        <color key="backgroundColor" systemColor="systemBackgroundColor"/>
                                        <string key="text">Program 1 : Scanning a character using getchar method.
#include&lt; stdio.h&gt;
#include&lt; conio.h&gt;
void main()
{
char ch;
printf(“Enter a character\n”);
ch = getchar( );
printf(“\n Character = %c”, ch);
}

Output:
Enter a character
S
Character = S</string>
                                        <color key="textColor" systemColor="labelColor"/>
                                        <fontDescription key="fontDescription" type="system" pointSize="14"/>
                                        <textInputTraits key="textInputTraits" autocapitalizationType="sentences"/>
                                    </textView>
                                </subviews>
                                <viewLayoutGuide key="contentLayoutGuide" id="4FQ-7K-7w4"/>
                                <viewLayoutGuide key="frameLayoutGuide" id="gao-Wi-uY8"/>
                            </scrollView>
                        </subviews>
                        <viewLayoutGuide key="safeArea" id="HG8-ML-ZIm"/>
                        <color key="backgroundColor" systemColor="systemBackgroundColor"/>
                    </view>
                </viewController>
                <placeholder placeholderIdentifier="IBFirstResponder" id="OgG-ar-sUV" userLabel="First Responder" customClass="UIResponder" sceneMemberID="firstResponder"/>
            </objects>
            <point key="canvasLocation" x="2084" y="1377"/>
        </scene>
        <!--View Controller-->
        <scene sceneID="rYE-WM-uzj">
            <objects>
                <viewController id="Tqj-Ig-9QP" sceneMemberID="viewController">
                    <view key="view" contentMode="scaleToFill" id="XCW-Ib-hPz">
                        <rect key="frame" x="0.0" y="0.0" width="375" height="647"/>
                        <autoresizingMask key="autoresizingMask" widthSizable="YES" heightSizable="YES"/>
                        <subviews>
                            <button opaque="NO" contentMode="scaleToFill" fixedFrame="YES" contentHorizontalAlignment="center" contentVerticalAlignment="center" buttonType="system" lineBreakMode="middleTruncation" translatesAutoresizingMaskIntoConstraints="NO" id="3Nr-OS-RJj">
                                <rect key="frame" x="16" y="9" width="39" height="35"/>
                                <autoresizingMask key="autoresizingMask" flexibleMaxX="YES" flexibleMaxY="YES"/>
                                <state key="normal" title="Button"/>
                                <buttonConfiguration key="configuration" style="plain" title="←"/>
                                <connections>
                                    <segue destination="hBP-cv-dKb" kind="presentation" id="V81-wR-HdK"/>
                                </connections>
                            </button>
                            <scrollView clipsSubviews="YES" multipleTouchEnabled="YES" contentMode="scaleToFill" fixedFrame="YES" translatesAutoresizingMaskIntoConstraints="NO" id="ViO-bI-kIi">
                                <rect key="frame" x="0.0" y="52" width="375" height="615"/>
                                <autoresizingMask key="autoresizingMask" flexibleMaxX="YES" flexibleMaxY="YES"/>
                                <subviews>
                                    <textView clipsSubviews="YES" multipleTouchEnabled="YES" contentMode="scaleToFill" fixedFrame="YES" editable="NO" textAlignment="natural" translatesAutoresizingMaskIntoConstraints="NO" id="uul-2d-hvf">
                                        <rect key="frame" x="0.0" y="0.0" width="375" height="615"/>
                                        <autoresizingMask key="autoresizingMask" flexibleMaxX="YES" flexibleMaxY="YES"/>
                                        <color key="backgroundColor" systemColor="systemBackgroundColor"/>
                                        <string key="text">Program 2: Scanning a character using getch method.
#include&lt; stdio.h&gt;
#include&lt; conio.h&gt;
void main()
{
char ch;
printf(“Enter a character\n”);
ch = getch( );
printf(“\n Character = %c”, ch);
}

Output:
Enter a character
Character = S</string>
                                        <color key="textColor" systemColor="labelColor"/>
                                        <fontDescription key="fontDescription" type="system" pointSize="14"/>
                                        <textInputTraits key="textInputTraits" autocapitalizationType="sentences"/>
                                    </textView>
                                </subviews>
                                <viewLayoutGuide key="contentLayoutGuide" id="hGy-Sn-tnd"/>
                                <viewLayoutGuide key="frameLayoutGuide" id="VSP-sz-ovN"/>
                            </scrollView>
                        </subviews>
                        <viewLayoutGuide key="safeArea" id="aoo-oz-7wr"/>
                        <color key="backgroundColor" systemColor="systemBackgroundColor"/>
                    </view>
                </viewController>
                <placeholder placeholderIdentifier="IBFirstResponder" id="4fZ-Dk-5rU" userLabel="First Responder" customClass="UIResponder" sceneMemberID="firstResponder"/>
            </objects>
            <point key="canvasLocation" x="2737" y="1377"/>
        </scene>
        <!--View Controller-->
        <scene sceneID="ZA9-EN-b2k">
            <objects>
                <viewController id="FnL-lt-QgH" sceneMemberID="viewController">
                    <view key="view" contentMode="scaleToFill" id="KTx-0H-hbo">
                        <rect key="frame" x="0.0" y="0.0" width="375" height="647"/>
                        <autoresizingMask key="autoresizingMask" widthSizable="YES" heightSizable="YES"/>
                        <subviews>
                            <button opaque="NO" contentMode="scaleToFill" fixedFrame="YES" contentHorizontalAlignment="center" contentVerticalAlignment="center" buttonType="system" lineBreakMode="middleTruncation" translatesAutoresizingMaskIntoConstraints="NO" id="ndU-Os-aT1">
                                <rect key="frame" x="16" y="9" width="39" height="35"/>
                                <autoresizingMask key="autoresizingMask" flexibleMaxX="YES" flexibleMaxY="YES"/>
                                <state key="normal" title="Button"/>
                                <buttonConfiguration key="configuration" style="plain" title="←"/>
                                <connections>
                                    <segue destination="hBP-cv-dKb" kind="presentation" id="wHb-0t-hcL"/>
                                </connections>
                            </button>
                            <scrollView clipsSubviews="YES" multipleTouchEnabled="YES" contentMode="scaleToFill" fixedFrame="YES" translatesAutoresizingMaskIntoConstraints="NO" id="zaj-OG-MKI">
                                <rect key="frame" x="0.0" y="52" width="375" height="615"/>
                                <autoresizingMask key="autoresizingMask" flexibleMaxX="YES" flexibleMaxY="YES"/>
                                <subviews>
                                    <textView clipsSubviews="YES" multipleTouchEnabled="YES" contentMode="scaleToFill" fixedFrame="YES" editable="NO" textAlignment="natural" translatesAutoresizingMaskIntoConstraints="NO" id="VJW-BI-6mo">
                                        <rect key="frame" x="0.0" y="0.0" width="375" height="615"/>
                                        <autoresizingMask key="autoresizingMask" flexibleMaxX="YES" flexibleMaxY="YES"/>
                                        <color key="backgroundColor" systemColor="systemBackgroundColor"/>
                                        <string key="text">Program 3 : Scanning a character using getche method.
#include&lt; stdio.h&gt;
#include&lt; conio.h&gt;
void main()
{
char ch;
printf(“Enter a character\n”);
ch = getche( );
printf(“\n Character = %c”, ch);
}

Output:
Enter a character
S
Character = S</string>
                                        <color key="textColor" systemColor="labelColor"/>
                                        <fontDescription key="fontDescription" type="system" pointSize="14"/>
                                        <textInputTraits key="textInputTraits" autocapitalizationType="sentences"/>
                                    </textView>
                                </subviews>
                                <viewLayoutGuide key="contentLayoutGuide" id="r7I-0V-GwD"/>
                                <viewLayoutGuide key="frameLayoutGuide" id="PdW-OV-eZ6"/>
                            </scrollView>
                        </subviews>
                        <viewLayoutGuide key="safeArea" id="SYX-03-7ek"/>
                        <color key="backgroundColor" systemColor="systemBackgroundColor"/>
                    </view>
                </viewController>
                <placeholder placeholderIdentifier="IBFirstResponder" id="ZLL-sl-wTs" userLabel="First Responder" customClass="UIResponder" sceneMemberID="firstResponder"/>
            </objects>
            <point key="canvasLocation" x="3388" y="1377"/>
        </scene>
        <!--View Controller-->
        <scene sceneID="Nu9-bD-FqW">
            <objects>
                <viewController id="bBh-y7-fIL" sceneMemberID="viewController">
                    <view key="view" contentMode="scaleToFill" id="l7H-GE-z5j">
                        <rect key="frame" x="0.0" y="0.0" width="375" height="647"/>
                        <autoresizingMask key="autoresizingMask" widthSizable="YES" heightSizable="YES"/>
                        <subviews>
                            <button opaque="NO" contentMode="scaleToFill" fixedFrame="YES" contentHorizontalAlignment="center" contentVerticalAlignment="center" buttonType="system" lineBreakMode="middleTruncation" translatesAutoresizingMaskIntoConstraints="NO" id="49C-16-WwX">
                                <rect key="frame" x="16" y="9" width="39" height="35"/>
                                <autoresizingMask key="autoresizingMask" flexibleMaxX="YES" flexibleMaxY="YES"/>
                                <state key="normal" title="Button"/>
                                <buttonConfiguration key="configuration" style="plain" title="←"/>
                                <connections>
                                    <segue destination="hBP-cv-dKb" kind="presentation" id="zjG-ZU-qig"/>
                                </connections>
                            </button>
                            <scrollView clipsSubviews="YES" multipleTouchEnabled="YES" contentMode="scaleToFill" fixedFrame="YES" translatesAutoresizingMaskIntoConstraints="NO" id="XCF-Vx-1Wz">
                                <rect key="frame" x="0.0" y="52" width="375" height="615"/>
                                <autoresizingMask key="autoresizingMask" flexibleMaxX="YES" flexibleMaxY="YES"/>
                                <subviews>
                                    <textView clipsSubviews="YES" multipleTouchEnabled="YES" contentMode="scaleToFill" fixedFrame="YES" editable="NO" textAlignment="natural" translatesAutoresizingMaskIntoConstraints="NO" id="S4A-Uy-9bz">
                                        <rect key="frame" x="0.0" y="0.0" width="375" height="615"/>
                                        <autoresizingMask key="autoresizingMask" flexibleMaxX="YES" flexibleMaxY="YES"/>
                                        <color key="backgroundColor" systemColor="systemBackgroundColor"/>
                                        <string key="text">Program 4: Program for scanning a string with spaces using scanf function:
#include&lt; stdio.h&gt;
#include&lt; conio.h&gt;
void main()
{
char name[50];
clrscr();
printf(“Enter your full name\n”);
scanf(“%s”, name);
printf(“Full Name : %s”,name);
getch();
}

Output:
Enter your full name
Amol Jagtap
Full Name : Amol

Explanation
In above program, only Amol string is displayed on console because when scanning the string Amol Jagtap when we press space then runtime environment treat it as end of string and only Amol string is save in variable name. So result displayed in printf statement is only Amol. Thus using scanf statement we cannot scan string with spaces. So solution to this problem is use gets() function.</string>
                                        <color key="textColor" systemColor="labelColor"/>
                                        <fontDescription key="fontDescription" type="system" pointSize="14"/>
                                        <textInputTraits key="textInputTraits" autocapitalizationType="sentences"/>
                                    </textView>
                                </subviews>
                                <viewLayoutGuide key="contentLayoutGuide" id="MW5-qJ-2ab"/>
                                <viewLayoutGuide key="frameLayoutGuide" id="dNW-pm-qzQ"/>
                            </scrollView>
                        </subviews>
                        <viewLayoutGuide key="safeArea" id="7cP-IG-lPa"/>
                        <color key="backgroundColor" systemColor="systemBackgroundColor"/>
                    </view>
                </viewController>
                <placeholder placeholderIdentifier="IBFirstResponder" id="bOn-8b-s1X" userLabel="First Responder" customClass="UIResponder" sceneMemberID="firstResponder"/>
            </objects>
            <point key="canvasLocation" x="4020" y="1377"/>
        </scene>
        <!--View Controller-->
        <scene sceneID="ACW-Sd-EeO">
            <objects>
                <viewController id="OLf-s1-NHH" sceneMemberID="viewController">
                    <view key="view" contentMode="scaleToFill" id="bAj-vK-hwi">
                        <rect key="frame" x="0.0" y="0.0" width="375" height="647"/>
                        <autoresizingMask key="autoresizingMask" widthSizable="YES" heightSizable="YES"/>
                        <subviews>
                            <button opaque="NO" contentMode="scaleToFill" fixedFrame="YES" contentHorizontalAlignment="center" contentVerticalAlignment="center" buttonType="system" lineBreakMode="middleTruncation" translatesAutoresizingMaskIntoConstraints="NO" id="Y1i-Ku-QaT">
                                <rect key="frame" x="16" y="9" width="39" height="35"/>
                                <autoresizingMask key="autoresizingMask" flexibleMaxX="YES" flexibleMaxY="YES"/>
                                <state key="normal" title="Button"/>
                                <buttonConfiguration key="configuration" style="plain" title="←"/>
                                <connections>
                                    <segue destination="hBP-cv-dKb" kind="presentation" id="MKN-TW-sds"/>
                                </connections>
                            </button>
                            <scrollView clipsSubviews="YES" multipleTouchEnabled="YES" contentMode="scaleToFill" fixedFrame="YES" translatesAutoresizingMaskIntoConstraints="NO" id="Esy-eg-2C6">
                                <rect key="frame" x="0.0" y="52" width="375" height="615"/>
                                <autoresizingMask key="autoresizingMask" flexibleMaxX="YES" flexibleMaxY="YES"/>
                                <subviews>
                                    <textView clipsSubviews="YES" multipleTouchEnabled="YES" contentMode="scaleToFill" fixedFrame="YES" editable="NO" textAlignment="natural" translatesAutoresizingMaskIntoConstraints="NO" id="CaM-Ui-56d">
                                        <rect key="frame" x="0.0" y="0.0" width="375" height="615"/>
                                        <autoresizingMask key="autoresizingMask" flexibleMaxX="YES" flexibleMaxY="YES"/>
                                        <color key="backgroundColor" systemColor="systemBackgroundColor"/>
                                        <string key="text">Program 5: Program for scanning a string with spaces using gets function:
#include&lt; stdio.h&gt;
#include&lt; conio.h&gt;
void main()
{
char name[50];
clrscr();
printf(“Enter your full name\n”);
gets(name);
printf(“Full Name : %s”,name);
getch();
}

Output:
Enter your full name
Amol Jagtap
Full Name : Amol Jagtap

Note that using printf function we can display string with spaces but using scanf function we cannot scan string with spaces.</string>
                                        <color key="textColor" systemColor="labelColor"/>
                                        <fontDescription key="fontDescription" type="system" pointSize="14"/>
                                        <textInputTraits key="textInputTraits" autocapitalizationType="sentences"/>
                                    </textView>
                                </subviews>
                                <viewLayoutGuide key="contentLayoutGuide" id="Hds-yO-hQw"/>
                                <viewLayoutGuide key="frameLayoutGuide" id="ZDh-kM-UVv"/>
                            </scrollView>
                        </subviews>
                        <viewLayoutGuide key="safeArea" id="J4y-2u-aYU"/>
                        <color key="backgroundColor" systemColor="systemBackgroundColor"/>
                    </view>
                </viewController>
                <placeholder placeholderIdentifier="IBFirstResponder" id="Cii-lQ-0hd" userLabel="First Responder" customClass="UIResponder" sceneMemberID="firstResponder"/>
            </objects>
            <point key="canvasLocation" x="4673" y="1377"/>
        </scene>
        <!--View Controller-->
        <scene sceneID="Mj1-j9-ZJW">
            <objects>
                <viewController id="era-uP-xP2" sceneMemberID="viewController">
                    <view key="view" contentMode="scaleToFill" id="UCs-ye-Qpi">
                        <rect key="frame" x="0.0" y="0.0" width="375" height="647"/>
                        <autoresizingMask key="autoresizingMask" widthSizable="YES" heightSizable="YES"/>
                        <subviews>
                            <button opaque="NO" contentMode="scaleToFill" fixedFrame="YES" contentHorizontalAlignment="center" contentVerticalAlignment="center" buttonType="system" lineBreakMode="middleTruncation" translatesAutoresizingMaskIntoConstraints="NO" id="ci8-VA-NwF">
                                <rect key="frame" x="16" y="9" width="39" height="35"/>
                                <autoresizingMask key="autoresizingMask" flexibleMaxX="YES" flexibleMaxY="YES"/>
                                <state key="normal" title="Button"/>
                                <buttonConfiguration key="configuration" style="plain" title="←"/>
                                <connections>
                                    <segue destination="hBP-cv-dKb" kind="presentation" id="whd-84-Fz2"/>
                                </connections>
                            </button>
                            <scrollView clipsSubviews="YES" multipleTouchEnabled="YES" contentMode="scaleToFill" fixedFrame="YES" translatesAutoresizingMaskIntoConstraints="NO" id="Xvm-4Y-aO8">
                                <rect key="frame" x="0.0" y="52" width="375" height="615"/>
                                <autoresizingMask key="autoresizingMask" flexibleMaxX="YES" flexibleMaxY="YES"/>
                                <subviews>
                                    <textView clipsSubviews="YES" multipleTouchEnabled="YES" contentMode="scaleToFill" fixedFrame="YES" editable="NO" textAlignment="natural" translatesAutoresizingMaskIntoConstraints="NO" id="Tgg-Ws-7a0">
                                        <rect key="frame" x="0.0" y="0.0" width="375" height="615"/>
                                        <autoresizingMask key="autoresizingMask" flexibleMaxX="YES" flexibleMaxY="YES"/>
                                        <color key="backgroundColor" systemColor="systemBackgroundColor"/>
                                        <string key="text">Program 6:Program for scanning a string with spaces using gets and puts function:
#include&lt; stdio.h&gt;
#include&lt; conio.h&gt;
void main()
{
char name[50];
clrscr();
printf(“Enter your full name\n”);
gets(name);
puts(name);
getch();
}

Output:
Enter your full name
Amol Jagtap
Amol Jagtap</string>
                                        <color key="textColor" systemColor="labelColor"/>
                                        <fontDescription key="fontDescription" type="system" pointSize="14"/>
                                        <textInputTraits key="textInputTraits" autocapitalizationType="sentences"/>
                                    </textView>
                                </subviews>
                                <viewLayoutGuide key="contentLayoutGuide" id="LeH-5H-jxC"/>
                                <viewLayoutGuide key="frameLayoutGuide" id="FDF-Kf-Cmv"/>
                            </scrollView>
                        </subviews>
                        <viewLayoutGuide key="safeArea" id="oQ6-Gc-OLb"/>
                        <color key="backgroundColor" systemColor="systemBackgroundColor"/>
                    </view>
                </viewController>
                <placeholder placeholderIdentifier="IBFirstResponder" id="yL2-Uk-7pa" userLabel="First Responder" customClass="UIResponder" sceneMemberID="firstResponder"/>
            </objects>
            <point key="canvasLocation" x="5374" y="1377"/>
        </scene>
        <!--View Controller-->
        <scene sceneID="yaE-mu-HOt">
            <objects>
                <viewController id="Qgp-QO-711" sceneMemberID="viewController">
                    <view key="view" contentMode="scaleToFill" id="36G-nB-RKw">
                        <rect key="frame" x="0.0" y="0.0" width="375" height="647"/>
                        <autoresizingMask key="autoresizingMask" widthSizable="YES" heightSizable="YES"/>
                        <subviews>
                            <button opaque="NO" contentMode="scaleToFill" fixedFrame="YES" contentHorizontalAlignment="center" contentVerticalAlignment="center" buttonType="system" lineBreakMode="middleTruncation" translatesAutoresizingMaskIntoConstraints="NO" id="tGn-cJ-CbQ">
                                <rect key="frame" x="16" y="9" width="39" height="35"/>
                                <autoresizingMask key="autoresizingMask" flexibleMaxX="YES" flexibleMaxY="YES"/>
                                <state key="normal" title="Button"/>
                                <buttonConfiguration key="configuration" style="plain" title="←"/>
                                <connections>
                                    <segue destination="hBP-cv-dKb" kind="presentation" id="YL8-e7-tBv"/>
                                </connections>
                            </button>
                            <scrollView clipsSubviews="YES" multipleTouchEnabled="YES" contentMode="scaleToFill" fixedFrame="YES" translatesAutoresizingMaskIntoConstraints="NO" id="a5F-42-Bmt">
                                <rect key="frame" x="0.0" y="52" width="375" height="615"/>
                                <autoresizingMask key="autoresizingMask" flexibleMaxX="YES" flexibleMaxY="YES"/>
                                <subviews>
                                    <textView clipsSubviews="YES" multipleTouchEnabled="YES" contentMode="scaleToFill" fixedFrame="YES" editable="NO" textAlignment="natural" translatesAutoresizingMaskIntoConstraints="NO" id="QLx-nM-Cw8">
                                        <rect key="frame" x="0.0" y="0.0" width="375" height="615"/>
                                        <autoresizingMask key="autoresizingMask" flexibleMaxX="YES" flexibleMaxY="YES"/>
                                        <color key="backgroundColor" systemColor="systemBackgroundColor"/>
                                        <string key="text">Program 7: Program based on Shift left (&lt;&lt;) operator:
#include&lt; stdio.h&gt;
#include&lt; conio.h&gt;
void main()
{
int i=76;
j=i&lt;&lt;1;
clrscr();
printf(“j =% d “,j);
getch();
}

Output:
j = 152
Value of i shifted to left by 1 bit and adding 0 bit to its right and resultant value is stored in j.
The value of j is now 152 in decimal after shifting i.e.
shift left multiplies number by 2n, where n is how many bits shifted to left</string>
                                        <color key="textColor" systemColor="labelColor"/>
                                        <fontDescription key="fontDescription" type="system" pointSize="14"/>
                                        <textInputTraits key="textInputTraits" autocapitalizationType="sentences"/>
                                    </textView>
                                </subviews>
                                <viewLayoutGuide key="contentLayoutGuide" id="G0v-mU-XkF"/>
                                <viewLayoutGuide key="frameLayoutGuide" id="fMj-FL-g9t"/>
                            </scrollView>
                        </subviews>
                        <viewLayoutGuide key="safeArea" id="P1f-Bb-Gls"/>
                        <color key="backgroundColor" systemColor="systemBackgroundColor"/>
                    </view>
                </viewController>
                <placeholder placeholderIdentifier="IBFirstResponder" id="4f5-GI-ctT" userLabel="First Responder" customClass="UIResponder" sceneMemberID="firstResponder"/>
            </objects>
            <point key="canvasLocation" x="6065" y="1377"/>
        </scene>
        <!--View Controller-->
        <scene sceneID="bDC-g1-LpA">
            <objects>
                <viewController id="MxD-AM-MH1" sceneMemberID="viewController">
                    <view key="view" contentMode="scaleToFill" id="byv-78-Els">
                        <rect key="frame" x="0.0" y="0.0" width="375" height="647"/>
                        <autoresizingMask key="autoresizingMask" widthSizable="YES" heightSizable="YES"/>
                        <subviews>
                            <button opaque="NO" contentMode="scaleToFill" fixedFrame="YES" contentHorizontalAlignment="center" contentVerticalAlignment="center" buttonType="system" lineBreakMode="middleTruncation" translatesAutoresizingMaskIntoConstraints="NO" id="hN3-Qh-wFe">
                                <rect key="frame" x="16" y="9" width="39" height="35"/>
                                <autoresizingMask key="autoresizingMask" flexibleMaxX="YES" flexibleMaxY="YES"/>
                                <state key="normal" title="Button"/>
                                <buttonConfiguration key="configuration" style="plain" title="←"/>
                                <connections>
                                    <segue destination="hBP-cv-dKb" kind="presentation" id="6lu-pt-vQu"/>
                                </connections>
                            </button>
                            <scrollView clipsSubviews="YES" multipleTouchEnabled="YES" contentMode="scaleToFill" fixedFrame="YES" translatesAutoresizingMaskIntoConstraints="NO" id="akT-24-UAF">
                                <rect key="frame" x="0.0" y="52" width="375" height="615"/>
                                <autoresizingMask key="autoresizingMask" flexibleMaxX="YES" flexibleMaxY="YES"/>
                                <subviews>
                                    <textView clipsSubviews="YES" multipleTouchEnabled="YES" contentMode="scaleToFill" fixedFrame="YES" editable="NO" textAlignment="natural" translatesAutoresizingMaskIntoConstraints="NO" id="zLK-GT-6pl">
                                        <rect key="frame" x="0.0" y="0.0" width="375" height="615"/>
                                        <autoresizingMask key="autoresizingMask" flexibleMaxX="YES" flexibleMaxY="YES"/>
                                        <color key="backgroundColor" systemColor="systemBackgroundColor"/>
                                        <string key="text">Program 8:Program based on Shift right (&gt;&gt;) operator.
#include&lt; stdio.h&gt;
#include&lt; conio.h&gt;
void main()
{
int i=76;
j=i&gt;&gt;1;
clrscr();
printf(“j =% d “,j);
getch();
}

Output:
j = 38
Value of i shifted to right by 1 bit and adding 0 bit to its left and resultant value is stored in j.
The value of j is now 38 in decimal after shifting i.e. shift right divides number by 2n, where n is how many bits shifted to right.</string>
                                        <color key="textColor" systemColor="labelColor"/>
                                        <fontDescription key="fontDescription" type="system" pointSize="14"/>
                                        <textInputTraits key="textInputTraits" autocapitalizationType="sentences"/>
                                    </textView>
                                </subviews>
                                <viewLayoutGuide key="contentLayoutGuide" id="oed-hh-7la"/>
                                <viewLayoutGuide key="frameLayoutGuide" id="BkB-ER-xsF"/>
                            </scrollView>
                        </subviews>
                        <viewLayoutGuide key="safeArea" id="DAh-JF-bYf"/>
                        <color key="backgroundColor" systemColor="systemBackgroundColor"/>
                    </view>
                </viewController>
                <placeholder placeholderIdentifier="IBFirstResponder" id="aKb-2i-ioe" userLabel="First Responder" customClass="UIResponder" sceneMemberID="firstResponder"/>
            </objects>
            <point key="canvasLocation" x="6718" y="1377"/>
        </scene>
        <!--View Controller-->
        <scene sceneID="TyI-ft-PuC">
            <objects>
                <viewController id="pB4-kt-vb0" sceneMemberID="viewController">
                    <view key="view" contentMode="scaleToFill" id="Nea-K5-H0u">
                        <rect key="frame" x="0.0" y="0.0" width="375" height="647"/>
                        <autoresizingMask key="autoresizingMask" widthSizable="YES" heightSizable="YES"/>
                        <subviews>
                            <button opaque="NO" contentMode="scaleToFill" fixedFrame="YES" contentHorizontalAlignment="center" contentVerticalAlignment="center" buttonType="system" lineBreakMode="middleTruncation" translatesAutoresizingMaskIntoConstraints="NO" id="ynx-rq-czl">
                                <rect key="frame" x="16" y="9" width="39" height="35"/>
                                <autoresizingMask key="autoresizingMask" flexibleMaxX="YES" flexibleMaxY="YES"/>
                                <state key="normal" title="Button"/>
                                <buttonConfiguration key="configuration" style="plain" title="←"/>
                                <connections>
                                    <segue destination="hBP-cv-dKb" kind="presentation" id="cew-Mq-tZE"/>
                                </connections>
                            </button>
                            <scrollView clipsSubviews="YES" multipleTouchEnabled="YES" contentMode="scaleToFill" fixedFrame="YES" translatesAutoresizingMaskIntoConstraints="NO" id="lid-Pr-T1D">
                                <rect key="frame" x="0.0" y="52" width="375" height="615"/>
                                <autoresizingMask key="autoresizingMask" flexibleMaxX="YES" flexibleMaxY="YES"/>
                                <subviews>
                                    <textView clipsSubviews="YES" multipleTouchEnabled="YES" contentMode="scaleToFill" fixedFrame="YES" editable="NO" textAlignment="natural" translatesAutoresizingMaskIntoConstraints="NO" id="n3s-8F-exG">
                                        <rect key="frame" x="0.0" y="0.0" width="375" height="615"/>
                                        <autoresizingMask key="autoresizingMask" flexibleMaxX="YES" flexibleMaxY="YES"/>
                                        <color key="backgroundColor" systemColor="systemBackgroundColor"/>
                                        <string key="text">Program 9:Program based on bitwise operators.
#include&lt; stdio.h&gt;
#include&lt; conio.h&gt;
void main()
{
int i, j, k, m;
clrscr();
printf(“Enter two integers \n”);
scanf(“ %d %d ”,&amp;i, &amp;j);
printf(“\n i=%d j=%d ”, i, j);
k=i &gt;&gt;2;
/*shift right operator */
m=j&lt;&lt;1;
/*shift left operator */
printf(“\n Values after performing bitwise shift operation \n”);
printf(“\n k= %d m= %d ”,k ,m);
k=i &amp; 4;
m =i | j;
printf(“\n Values after performing bitwise &amp; and | operation \n”);
printf(“%d %d”,k,m);
getch();
}

Output:
Enter two integers
29
76
i=29 j=76
Values after performing bitwise shift operation
k=7 m=152
Values after performing bitwise &amp; and | operation
4 93</string>
                                        <color key="textColor" systemColor="labelColor"/>
                                        <fontDescription key="fontDescription" type="system" pointSize="14"/>
                                        <textInputTraits key="textInputTraits" autocapitalizationType="sentences"/>
                                    </textView>
                                </subviews>
                                <viewLayoutGuide key="contentLayoutGuide" id="siO-MX-rWF"/>
                                <viewLayoutGuide key="frameLayoutGuide" id="Gv3-sS-efB"/>
                            </scrollView>
                        </subviews>
                        <viewLayoutGuide key="safeArea" id="w97-kM-UOQ"/>
                        <color key="backgroundColor" systemColor="systemBackgroundColor"/>
                    </view>
                </viewController>
                <placeholder placeholderIdentifier="IBFirstResponder" id="bqP-np-Zzz" userLabel="First Responder" customClass="UIResponder" sceneMemberID="firstResponder"/>
            </objects>
            <point key="canvasLocation" x="7369" y="1377"/>
        </scene>
        <!--View Controller-->
        <scene sceneID="0l4-Ix-kul">
            <objects>
                <viewController id="JHM-on-1C1" sceneMemberID="viewController">
                    <view key="view" contentMode="scaleToFill" id="h4D-FS-8qS">
                        <rect key="frame" x="0.0" y="0.0" width="375" height="647"/>
                        <autoresizingMask key="autoresizingMask" widthSizable="YES" heightSizable="YES"/>
                        <subviews>
                            <button opaque="NO" contentMode="scaleToFill" fixedFrame="YES" contentHorizontalAlignment="center" contentVerticalAlignment="center" buttonType="system" lineBreakMode="middleTruncation" translatesAutoresizingMaskIntoConstraints="NO" id="Vxw-4k-GEe">
                                <rect key="frame" x="16" y="9" width="39" height="35"/>
                                <autoresizingMask key="autoresizingMask" flexibleMaxX="YES" flexibleMaxY="YES"/>
                                <state key="normal" title="Button"/>
                                <buttonConfiguration key="configuration" style="plain" title="←"/>
                                <connections>
                                    <segue destination="hBP-cv-dKb" kind="presentation" id="EHh-as-1jR"/>
                                </connections>
                            </button>
                            <scrollView clipsSubviews="YES" multipleTouchEnabled="YES" contentMode="scaleToFill" fixedFrame="YES" translatesAutoresizingMaskIntoConstraints="NO" id="qi5-O5-ux3">
                                <rect key="frame" x="0.0" y="52" width="375" height="615"/>
                                <autoresizingMask key="autoresizingMask" flexibleMaxX="YES" flexibleMaxY="YES"/>
                                <subviews>
                                    <textView clipsSubviews="YES" multipleTouchEnabled="YES" contentMode="scaleToFill" fixedFrame="YES" editable="NO" textAlignment="natural" translatesAutoresizingMaskIntoConstraints="NO" id="eor-Bh-YeY">
                                        <rect key="frame" x="0.0" y="0.0" width="375" height="615"/>
                                        <autoresizingMask key="autoresizingMask" flexibleMaxX="YES" flexibleMaxY="YES"/>
                                        <color key="backgroundColor" systemColor="systemBackgroundColor"/>
                                        <string key="text">Program 10: Find largest number between two numbers using ternary operator.
#include&lt; stdio.h&gt;
#include&lt; conio.h&gt;
void main()
{
int a, b;
clrscr();
printf("Enter the values of variable a and b\n");
scanf("%d%d",&amp;a,&amp;b);
(a&gt;b)? printf("\n a is maximum.") : printf("\n b is maximum");
getch();
}

Output:
Enter the values of variable a and b
11
21
b is maximum.</string>
                                        <color key="textColor" systemColor="labelColor"/>
                                        <fontDescription key="fontDescription" type="system" pointSize="14"/>
                                        <textInputTraits key="textInputTraits" autocapitalizationType="sentences"/>
                                    </textView>
                                </subviews>
                                <viewLayoutGuide key="contentLayoutGuide" id="KYc-w2-CF1"/>
                                <viewLayoutGuide key="frameLayoutGuide" id="Yyi-2v-pfo"/>
                            </scrollView>
                        </subviews>
                        <viewLayoutGuide key="safeArea" id="c4l-a9-bSg"/>
                        <color key="backgroundColor" systemColor="systemBackgroundColor"/>
                    </view>
                </viewController>
                <placeholder placeholderIdentifier="IBFirstResponder" id="G7f-2A-S0Y" userLabel="First Responder" customClass="UIResponder" sceneMemberID="firstResponder"/>
            </objects>
            <point key="canvasLocation" x="8001" y="1377"/>
        </scene>
        <!--View Controller-->
        <scene sceneID="7xm-ta-3dd">
            <objects>
                <viewController id="Hv3-pY-TfL" sceneMemberID="viewController">
                    <view key="view" contentMode="scaleToFill" id="02M-qU-bYM">
                        <rect key="frame" x="0.0" y="0.0" width="375" height="647"/>
                        <autoresizingMask key="autoresizingMask" widthSizable="YES" heightSizable="YES"/>
                        <subviews>
                            <button opaque="NO" contentMode="scaleToFill" fixedFrame="YES" contentHorizontalAlignment="center" contentVerticalAlignment="center" buttonType="system" lineBreakMode="middleTruncation" translatesAutoresizingMaskIntoConstraints="NO" id="4Iv-U2-wgg">
                                <rect key="frame" x="16" y="9" width="39" height="35"/>
                                <autoresizingMask key="autoresizingMask" flexibleMaxX="YES" flexibleMaxY="YES"/>
                                <state key="normal" title="Button"/>
                                <buttonConfiguration key="configuration" style="plain" title="←"/>
                                <connections>
                                    <segue destination="hBP-cv-dKb" kind="presentation" id="C6R-Ri-egh"/>
                                </connections>
                            </button>
                            <scrollView clipsSubviews="YES" multipleTouchEnabled="YES" contentMode="scaleToFill" fixedFrame="YES" translatesAutoresizingMaskIntoConstraints="NO" id="N3r-xL-g5L">
                                <rect key="frame" x="0.0" y="52" width="375" height="615"/>
                                <autoresizingMask key="autoresizingMask" flexibleMaxX="YES" flexibleMaxY="YES"/>
                                <subviews>
                                    <textView clipsSubviews="YES" multipleTouchEnabled="YES" contentMode="scaleToFill" fixedFrame="YES" editable="NO" textAlignment="natural" translatesAutoresizingMaskIntoConstraints="NO" id="cd0-92-2Lu">
                                        <rect key="frame" x="0.0" y="0.0" width="375" height="615"/>
                                        <autoresizingMask key="autoresizingMask" flexibleMaxX="YES" flexibleMaxY="YES"/>
                                        <color key="backgroundColor" systemColor="systemBackgroundColor"/>
                                        <string key="text">Program 11: Swap two numbers using temporary variable.
#include&lt; stdio.h&gt;
#include&lt; conio.h&gt;
void main()
{
int a=10, b=20, t;
clrscr();
printf("Before swapping a=%d and b=%d\n");
t = a;
a = b;
b = t;
printf("After swapping a=%d and b=%d\n");
getch();
}

Output:
Before swapping a=10 and b=20
After swapping a=20 and b=10</string>
                                        <color key="textColor" systemColor="labelColor"/>
                                        <fontDescription key="fontDescription" type="system" pointSize="14"/>
                                        <textInputTraits key="textInputTraits" autocapitalizationType="sentences"/>
                                    </textView>
                                </subviews>
                                <viewLayoutGuide key="contentLayoutGuide" id="hXU-vj-W5V"/>
                                <viewLayoutGuide key="frameLayoutGuide" id="rLb-0z-Wqw"/>
                            </scrollView>
                        </subviews>
                        <viewLayoutGuide key="safeArea" id="rBV-Mb-R2Z"/>
                        <color key="backgroundColor" systemColor="systemBackgroundColor"/>
                    </view>
                </viewController>
                <placeholder placeholderIdentifier="IBFirstResponder" id="XgZ-ho-jCF" userLabel="First Responder" customClass="UIResponder" sceneMemberID="firstResponder"/>
            </objects>
            <point key="canvasLocation" x="8654" y="1377"/>
        </scene>
        <!--View Controller-->
        <scene sceneID="qyA-Y2-mgA">
            <objects>
                <viewController id="ca2-RS-pgX" sceneMemberID="viewController">
                    <view key="view" contentMode="scaleToFill" id="ULh-fQ-EL0">
                        <rect key="frame" x="0.0" y="0.0" width="375" height="647"/>
                        <autoresizingMask key="autoresizingMask" widthSizable="YES" heightSizable="YES"/>
                        <subviews>
                            <button opaque="NO" contentMode="scaleToFill" fixedFrame="YES" contentHorizontalAlignment="center" contentVerticalAlignment="center" buttonType="system" lineBreakMode="middleTruncation" translatesAutoresizingMaskIntoConstraints="NO" id="9U0-Og-0zA">
                                <rect key="frame" x="16" y="9" width="39" height="35"/>
                                <autoresizingMask key="autoresizingMask" flexibleMaxX="YES" flexibleMaxY="YES"/>
                                <state key="normal" title="Button"/>
                                <buttonConfiguration key="configuration" style="plain" title="←"/>
                                <connections>
                                    <segue destination="hBP-cv-dKb" kind="presentation" id="UCo-rT-esE"/>
                                </connections>
                            </button>
                            <scrollView clipsSubviews="YES" multipleTouchEnabled="YES" contentMode="scaleToFill" fixedFrame="YES" translatesAutoresizingMaskIntoConstraints="NO" id="Dtn-Fg-Oci">
                                <rect key="frame" x="0.0" y="52" width="375" height="615"/>
                                <autoresizingMask key="autoresizingMask" flexibleMaxX="YES" flexibleMaxY="YES"/>
                                <subviews>
                                    <textView clipsSubviews="YES" multipleTouchEnabled="YES" contentMode="scaleToFill" fixedFrame="YES" editable="NO" textAlignment="natural" translatesAutoresizingMaskIntoConstraints="NO" id="CZy-Fz-dIY">
                                        <rect key="frame" x="0.0" y="0.0" width="375" height="615"/>
                                        <autoresizingMask key="autoresizingMask" flexibleMaxX="YES" flexibleMaxY="YES"/>
                                        <color key="backgroundColor" systemColor="systemBackgroundColor"/>
                                        <string key="text">Program 12:Swap two numbers without using temporary variable.
Solution 1: #include&lt; stdio.h&gt;
#include&lt; conio.h&gt;
void main()
{
int a=10, b=20;
clrscr();
printf("Before swapping a=%d and b=%d\n");
a = a + b;
b = a - b;
a = a – b;
printf("After swapping a=%d and b=%d\n");
getch();
}

Output:
Before swapping a=10 and b=20
After swapping a=20 and b=10

Solution 2: #include&lt; stdio.h&gt;
#include&lt; conio.h&gt;
void main()
{
int a=10, b=20;
clrscr();
printf("Before swapping a=%d and b=%d\n");
a = a * b;
b = a / b;
a = a / b;
printf("After swapping a=%d and b=%d\n");
getch();
}</string>
                                        <color key="textColor" systemColor="labelColor"/>
                                        <fontDescription key="fontDescription" type="system" pointSize="14"/>
                                        <textInputTraits key="textInputTraits" autocapitalizationType="sentences"/>
                                    </textView>
                                </subviews>
                                <viewLayoutGuide key="contentLayoutGuide" id="lbV-6Y-idU"/>
                                <viewLayoutGuide key="frameLayoutGuide" id="IQi-Tk-Khm"/>
                            </scrollView>
                        </subviews>
                        <viewLayoutGuide key="safeArea" id="AF5-uk-0NF"/>
                        <color key="backgroundColor" systemColor="systemBackgroundColor"/>
                    </view>
                </viewController>
                <placeholder placeholderIdentifier="IBFirstResponder" id="k3O-h3-5Pu" userLabel="First Responder" customClass="UIResponder" sceneMemberID="firstResponder"/>
            </objects>
            <point key="canvasLocation" x="9354" y="1377"/>
        </scene>
        <!--View Controller-->
        <scene sceneID="3IB-tY-SOg">
            <objects>
                <viewController id="ZNW-uL-ATb" sceneMemberID="viewController">
                    <view key="view" contentMode="scaleToFill" id="dNe-Dd-clZ">
                        <rect key="frame" x="0.0" y="0.0" width="375" height="667"/>
                        <autoresizingMask key="autoresizingMask" widthSizable="YES" heightSizable="YES"/>
                        <subviews>
                            <view contentMode="scaleToFill" fixedFrame="YES" translatesAutoresizingMaskIntoConstraints="NO" id="lKL-ki-ebI">
                                <rect key="frame" x="0.0" y="0.0" width="375" height="667"/>
                                <autoresizingMask key="autoresizingMask" flexibleMaxX="YES" flexibleMaxY="YES"/>
                                <subviews>
                                    <scrollView clipsSubviews="YES" multipleTouchEnabled="YES" contentMode="scaleToFill" fixedFrame="YES" translatesAutoresizingMaskIntoConstraints="NO" id="3kr-39-0hd">
                                        <rect key="frame" x="0.0" y="0.0" width="377" height="667"/>
                                        <autoresizingMask key="autoresizingMask" flexibleMaxX="YES" flexibleMaxY="YES"/>
                                        <subviews>
                                            <button opaque="NO" contentMode="scaleToFill" fixedFrame="YES" contentHorizontalAlignment="leading" contentVerticalAlignment="center" buttonType="system" lineBreakMode="middleTruncation" translatesAutoresizingMaskIntoConstraints="NO" id="kI6-PT-Age">
                                                <rect key="frame" x="14" y="306" width="339" height="35"/>
                                                <autoresizingMask key="autoresizingMask" flexibleMaxX="YES" flexibleMaxY="YES"/>
                                                <state key="normal" title="Button"/>
                                                <buttonConfiguration key="configuration" style="plain" title="Print the gender according to given switch csae input">
                                                    <fontDescription key="titleFontDescription" type="boldSystem" pointSize="17"/>
                                                </buttonConfiguration>
                                            </button>
                                            <button opaque="NO" contentMode="scaleToFill" fixedFrame="YES" contentHorizontalAlignment="leading" contentVerticalAlignment="center" buttonType="system" lineBreakMode="middleTruncation" translatesAutoresizingMaskIntoConstraints="NO" id="8Y7-MX-d50">
                                                <rect key="frame" x="14" y="92" width="339" height="35"/>
                                                <autoresizingMask key="autoresizingMask" flexibleMaxX="YES" flexibleMaxY="YES"/>
                                                <state key="normal" title="Button"/>
                                                <buttonConfiguration key="configuration" style="plain" title="Leap Year or not">
                                                    <fontDescription key="titleFontDescription" type="boldSystem" pointSize="17"/>
                                                </buttonConfiguration>
                                            </button>
                                            <button opaque="NO" contentMode="scaleToFill" fixedFrame="YES" contentHorizontalAlignment="leading" contentVerticalAlignment="center" buttonType="system" lineBreakMode="middleTruncation" translatesAutoresizingMaskIntoConstraints="NO" id="BLK-PW-OpA">
                                                <rect key="frame" x="14" y="149" width="339" height="35"/>
                                                <autoresizingMask key="autoresizingMask" flexibleMaxX="YES" flexibleMaxY="YES"/>
                                                <state key="normal" title="Button"/>
                                                <buttonConfiguration key="configuration" style="plain" title="Program to find type of triangle">
                                                    <fontDescription key="titleFontDescription" type="boldSystem" pointSize="17"/>
                                                </buttonConfiguration>
                                            </button>
                                            <button opaque="NO" contentMode="scaleToFill" fixedFrame="YES" contentHorizontalAlignment="leading" contentVerticalAlignment="center" buttonType="system" lineBreakMode="middleTruncation" translatesAutoresizingMaskIntoConstraints="NO" id="eMm-lZ-vzV">
                                                <rect key="frame" x="14" y="206" width="339" height="35"/>
                                                <autoresizingMask key="autoresizingMask" flexibleMaxX="YES" flexibleMaxY="YES"/>
                                                <state key="normal" title="Button"/>
                                                <buttonConfiguration key="configuration" style="plain" title="Print week of days using if else ladder">
                                                    <fontDescription key="titleFontDescription" type="boldSystem" pointSize="17"/>
                                                </buttonConfiguration>
                                            </button>
                                            <button opaque="NO" contentMode="scaleToFill" fixedFrame="YES" contentHorizontalAlignment="leading" contentVerticalAlignment="center" buttonType="system" lineBreakMode="middleTruncation" translatesAutoresizingMaskIntoConstraints="NO" id="LNC-sq-J3p">
                                                <rect key="frame" x="14" y="351" width="339" height="35"/>
                                                <autoresizingMask key="autoresizingMask" flexibleMaxX="YES" flexibleMaxY="YES"/>
                                                <state key="normal" title="Button"/>
                                                <buttonConfiguration key="configuration" style="plain" title="Program to check number is positive , negative and zero">
                                                    <fontDescription key="titleFontDescription" type="boldSystem" pointSize="17"/>
                                                </buttonConfiguration>
                                            </button>
                                            <button opaque="NO" contentMode="scaleToFill" fixedFrame="YES" contentHorizontalAlignment="leading" contentVerticalAlignment="center" buttonType="system" lineBreakMode="middleTruncation" translatesAutoresizingMaskIntoConstraints="NO" id="vjG-6I-Lgk">
                                                <rect key="frame" x="14" y="403" width="339" height="35"/>
                                                <autoresizingMask key="autoresizingMask" flexibleMaxX="YES" flexibleMaxY="YES"/>
                                                <state key="normal" title="Button"/>
                                                <buttonConfiguration key="configuration" style="plain" title="Program to print grade of students according to marks">
                                                    <fontDescription key="titleFontDescription" type="boldSystem" pointSize="17"/>
                                                </buttonConfiguration>
                                            </button>
                                            <button opaque="NO" contentMode="scaleToFill" fixedFrame="YES" contentHorizontalAlignment="leading" contentVerticalAlignment="center" buttonType="system" lineBreakMode="middleTruncation" translatesAutoresizingMaskIntoConstraints="NO" id="RB6-F4-QHB">
                                                <rect key="frame" x="24" y="489" width="339" height="35"/>
                                                <autoresizingMask key="autoresizingMask" flexibleMaxX="YES" flexibleMaxY="YES"/>
                                                <state key="normal" title="Button"/>
                                                <buttonConfiguration key="configuration" style="plain" title="FIND LARGEST NUMBER BETWEEN TWO NUMBER USING TERNARY OPERATOR">
                                                    <fontDescription key="titleFontDescription" type="boldSystem" pointSize="17"/>
                                                </buttonConfiguration>
                                            </button>
                                            <button opaque="NO" contentMode="scaleToFill" fixedFrame="YES" contentHorizontalAlignment="leading" contentVerticalAlignment="center" buttonType="system" lineBreakMode="middleTruncation" translatesAutoresizingMaskIntoConstraints="NO" id="mQY-w0-CUr">
                                                <rect key="frame" x="14" y="249" width="339" height="35"/>
                                                <autoresizingMask key="autoresizingMask" flexibleMaxX="YES" flexibleMaxY="YES"/>
                                                <state key="normal" title="Button"/>
                                                <buttonConfiguration key="configuration" style="plain" title="Print Number of days in in a month">
                                                    <fontDescription key="titleFontDescription" type="boldSystem" pointSize="17"/>
                                                </buttonConfiguration>
                                            </button>
                                            <button opaque="NO" contentMode="scaleToFill" fixedFrame="YES" contentHorizontalAlignment="leading" contentVerticalAlignment="center" buttonType="system" lineBreakMode="middleTruncation" translatesAutoresizingMaskIntoConstraints="NO" id="0Gk-PZ-VFK">
                                                <rect key="frame" x="14" y="589" width="339" height="35"/>
                                                <autoresizingMask key="autoresizingMask" flexibleMaxX="YES" flexibleMaxY="YES"/>
                                                <state key="normal" title="Button"/>
                                                <buttonConfiguration key="configuration" style="plain" title="SWAP TWO NUMBERS WITHOUT USING TEMPORARY VARIABLE">
                                                    <fontDescription key="titleFontDescription" type="boldSystem" pointSize="17"/>
                                                </buttonConfiguration>
                                            </button>
                                            <button opaque="NO" contentMode="scaleToFill" fixedFrame="YES" contentHorizontalAlignment="leading" contentVerticalAlignment="center" buttonType="system" lineBreakMode="middleTruncation" translatesAutoresizingMaskIntoConstraints="NO" id="5yT-mI-wIw">
                                                <rect key="frame" x="14" y="42" width="339" height="35"/>
                                                <autoresizingMask key="autoresizingMask" flexibleMaxX="YES" flexibleMaxY="YES"/>
                                                <state key="normal" title="Button"/>
                                                <buttonConfiguration key="configuration" style="plain" title="Check Maximum number from give to number">
                                                    <fontDescription key="titleFontDescription" type="boldSystem" pointSize="17"/>
                                                </buttonConfiguration>
                                            </button>
                                            <button opaque="NO" contentMode="scaleToFill" fixedFrame="YES" contentHorizontalAlignment="leading" contentVerticalAlignment="center" buttonType="system" lineBreakMode="middleTruncation" translatesAutoresizingMaskIntoConstraints="NO" id="vhx-JO-CwE">
                                                <rect key="frame" x="14" y="546" width="339" height="35"/>
                                                <autoresizingMask key="autoresizingMask" flexibleMaxX="YES" flexibleMaxY="YES"/>
                                                <state key="normal" title="Button"/>
                                                <buttonConfiguration key="configuration" style="plain" title="SWAP TWO NUMBERS USING TEMPORARY VARIABLE">
                                                    <fontDescription key="titleFontDescription" type="boldSystem" pointSize="17"/>
                                                </buttonConfiguration>
                                            </button>
                                            <button opaque="NO" contentMode="scaleToFill" fixedFrame="YES" contentHorizontalAlignment="leading" contentVerticalAlignment="center" buttonType="system" lineBreakMode="middleTruncation" translatesAutoresizingMaskIntoConstraints="NO" id="c6T-zp-yWB">
                                                <rect key="frame" x="24" y="446" width="339" height="35"/>
                                                <autoresizingMask key="autoresizingMask" flexibleMaxX="YES" flexibleMaxY="YES"/>
                                                <state key="normal" title="Button"/>
                                                <buttonConfiguration key="configuration" style="plain" title="BITWISE OPERATOR">
                                                    <fontDescription key="titleFontDescription" type="boldSystem" pointSize="17"/>
                                                </buttonConfiguration>
                                            </button>
                                        </subviews>
                                        <viewLayoutGuide key="contentLayoutGuide" id="T5l-nf-n27"/>
                                        <viewLayoutGuide key="frameLayoutGuide" id="fxr-kQ-Nhs"/>
                                    </scrollView>
                                    <button opaque="NO" contentMode="scaleToFill" fixedFrame="YES" contentHorizontalAlignment="center" contentVerticalAlignment="center" buttonType="system" lineBreakMode="middleTruncation" translatesAutoresizingMaskIntoConstraints="NO" id="aN7-kq-dIn">
                                        <rect key="frame" x="10" y="10" width="39" height="35"/>
                                        <autoresizingMask key="autoresizingMask" flexibleMaxX="YES" flexibleMaxY="YES"/>
                                        <state key="normal" title="Button"/>
                                        <buttonConfiguration key="configuration" style="plain" title="←"/>
                                    </button>
                                </subviews>
                                <color key="backgroundColor" systemColor="systemBackgroundColor"/>
                            </view>
                        </subviews>
                        <viewLayoutGuide key="safeArea" id="IKV-HP-7Zf"/>
                        <color key="backgroundColor" systemColor="systemBackgroundColor"/>
                    </view>
                </viewController>
                <placeholder placeholderIdentifier="IBFirstResponder" id="2a3-GZ-Mvc" userLabel="First Responder" customClass="UIResponder" sceneMemberID="firstResponder"/>
            </objects>
            <point key="canvasLocation" x="720.79999999999995" y="2069.4152923538231"/>
        </scene>
        <!--View Controller-->
        <scene sceneID="1Ol-sN-xMQ">
            <objects>
                <viewController id="tNt-ug-TGW" sceneMemberID="viewController">
                    <view key="view" contentMode="scaleToFill" id="wzT-RB-ruZ">
                        <rect key="frame" x="0.0" y="0.0" width="375" height="667"/>
                        <autoresizingMask key="autoresizingMask" widthSizable="YES" heightSizable="YES"/>
                        <subviews>
                            <view contentMode="scaleToFill" fixedFrame="YES" translatesAutoresizingMaskIntoConstraints="NO" id="0ag-BP-AZ1">
                                <rect key="frame" x="0.0" y="0.0" width="375" height="667"/>
                                <autoresizingMask key="autoresizingMask" flexibleMaxX="YES" flexibleMaxY="YES"/>
                                <subviews>
                                    <button opaque="NO" contentMode="scaleToFill" fixedFrame="YES" contentHorizontalAlignment="leading" contentVerticalAlignment="center" buttonType="system" lineBreakMode="middleTruncation" translatesAutoresizingMaskIntoConstraints="NO" id="tlz-8w-FXk">
                                        <rect key="frame" x="18" y="316" width="339" height="35"/>
                                        <autoresizingMask key="autoresizingMask" flexibleMaxX="YES" flexibleMaxY="YES"/>
                                        <state key="normal" title="Button"/>
                                        <buttonConfiguration key="configuration" style="plain" title="Print the gender according to given switch csae input">
                                            <fontDescription key="titleFontDescription" type="boldSystem" pointSize="17"/>
                                        </buttonConfiguration>
                                    </button>
                                    <button opaque="NO" contentMode="scaleToFill" fixedFrame="YES" contentHorizontalAlignment="leading" contentVerticalAlignment="center" buttonType="system" lineBreakMode="middleTruncation" translatesAutoresizingMaskIntoConstraints="NO" id="mV7-61-Q53">
                                        <rect key="frame" x="18" y="102" width="339" height="35"/>
                                        <autoresizingMask key="autoresizingMask" flexibleMaxX="YES" flexibleMaxY="YES"/>
                                        <state key="normal" title="Button"/>
                                        <buttonConfiguration key="configuration" style="plain" title="Leap Year or not">
                                            <fontDescription key="titleFontDescription" type="boldSystem" pointSize="17"/>
                                        </buttonConfiguration>
                                    </button>
                                    <button opaque="NO" contentMode="scaleToFill" fixedFrame="YES" contentHorizontalAlignment="leading" contentVerticalAlignment="center" buttonType="system" lineBreakMode="middleTruncation" translatesAutoresizingMaskIntoConstraints="NO" id="SJe-TB-ZGl">
                                        <rect key="frame" x="18" y="159" width="339" height="35"/>
                                        <autoresizingMask key="autoresizingMask" flexibleMaxX="YES" flexibleMaxY="YES"/>
                                        <state key="normal" title="Button"/>
                                        <buttonConfiguration key="configuration" style="plain" title="Program to find type of triangle">
                                            <fontDescription key="titleFontDescription" type="boldSystem" pointSize="17"/>
                                        </buttonConfiguration>
                                    </button>
                                    <button opaque="NO" contentMode="scaleToFill" fixedFrame="YES" contentHorizontalAlignment="leading" contentVerticalAlignment="center" buttonType="system" lineBreakMode="middleTruncation" translatesAutoresizingMaskIntoConstraints="NO" id="v5L-ny-U1Z">
                                        <rect key="frame" x="18" y="216" width="339" height="35"/>
                                        <autoresizingMask key="autoresizingMask" flexibleMaxX="YES" flexibleMaxY="YES"/>
                                        <state key="normal" title="Button"/>
                                        <buttonConfiguration key="configuration" style="plain" title="Print week of days using if else ladder">
                                            <fontDescription key="titleFontDescription" type="boldSystem" pointSize="17"/>
                                        </buttonConfiguration>
                                    </button>
                                    <button opaque="NO" contentMode="scaleToFill" fixedFrame="YES" contentHorizontalAlignment="leading" contentVerticalAlignment="center" buttonType="system" lineBreakMode="middleTruncation" translatesAutoresizingMaskIntoConstraints="NO" id="Rd0-WR-liq">
                                        <rect key="frame" x="18" y="361" width="339" height="35"/>
                                        <autoresizingMask key="autoresizingMask" flexibleMaxX="YES" flexibleMaxY="YES"/>
                                        <state key="normal" title="Button"/>
                                        <buttonConfiguration key="configuration" style="plain" title="Program to check number is positive , negative and zero">
                                            <fontDescription key="titleFontDescription" type="boldSystem" pointSize="17"/>
                                        </buttonConfiguration>
                                    </button>
                                    <button opaque="NO" contentMode="scaleToFill" fixedFrame="YES" contentHorizontalAlignment="leading" contentVerticalAlignment="center" buttonType="system" lineBreakMode="middleTruncation" translatesAutoresizingMaskIntoConstraints="NO" id="nC7-Ut-CAn">
                                        <rect key="frame" x="28" y="499" width="339" height="35"/>
                                        <autoresizingMask key="autoresizingMask" flexibleMaxX="YES" flexibleMaxY="YES"/>
                                        <state key="normal" title="Button"/>
                                        <buttonConfiguration key="configuration" style="plain" title="FIND LARGEST NUMBER BETWEEN TWO NUMBER USING TERNARY OPERATOR">
                                            <fontDescription key="titleFontDescription" type="boldSystem" pointSize="17"/>
                                        </buttonConfiguration>
                                    </button>
                                    <button opaque="NO" contentMode="scaleToFill" fixedFrame="YES" contentHorizontalAlignment="leading" contentVerticalAlignment="center" buttonType="system" lineBreakMode="middleTruncation" translatesAutoresizingMaskIntoConstraints="NO" id="ugq-c8-tXZ">
                                        <rect key="frame" x="18" y="259" width="339" height="35"/>
                                        <autoresizingMask key="autoresizingMask" flexibleMaxX="YES" flexibleMaxY="YES"/>
                                        <state key="normal" title="Button"/>
                                        <buttonConfiguration key="configuration" style="plain" title="Print Number of days in in a month">
                                            <fontDescription key="titleFontDescription" type="boldSystem" pointSize="17"/>
                                        </buttonConfiguration>
                                    </button>
                                    <button opaque="NO" contentMode="scaleToFill" fixedFrame="YES" contentHorizontalAlignment="leading" contentVerticalAlignment="center" buttonType="system" lineBreakMode="middleTruncation" translatesAutoresizingMaskIntoConstraints="NO" id="GNc-6J-wjs">
                                        <rect key="frame" x="18" y="599" width="339" height="35"/>
                                        <autoresizingMask key="autoresizingMask" flexibleMaxX="YES" flexibleMaxY="YES"/>
                                        <state key="normal" title="Button"/>
                                        <buttonConfiguration key="configuration" style="plain" title="SWAP TWO NUMBERS WITHOUT USING TEMPORARY VARIABLE">
                                            <fontDescription key="titleFontDescription" type="boldSystem" pointSize="17"/>
                                        </buttonConfiguration>
                                    </button>
                                    <button opaque="NO" contentMode="scaleToFill" fixedFrame="YES" contentHorizontalAlignment="leading" contentVerticalAlignment="center" buttonType="system" lineBreakMode="middleTruncation" translatesAutoresizingMaskIntoConstraints="NO" id="svp-Gs-toA">
                                        <rect key="frame" x="18" y="52" width="339" height="35"/>
                                        <autoresizingMask key="autoresizingMask" flexibleMaxX="YES" flexibleMaxY="YES"/>
                                        <state key="normal" title="Button"/>
                                        <buttonConfiguration key="configuration" style="plain" title="Check Maximum number from give to number">
                                            <fontDescription key="titleFontDescription" type="boldSystem" pointSize="17"/>
                                        </buttonConfiguration>
                                    </button>
                                    <button opaque="NO" contentMode="scaleToFill" fixedFrame="YES" contentHorizontalAlignment="leading" contentVerticalAlignment="center" buttonType="system" lineBreakMode="middleTruncation" translatesAutoresizingMaskIntoConstraints="NO" id="IWo-4U-SD9">
                                        <rect key="frame" x="18" y="556" width="339" height="35"/>
                                        <autoresizingMask key="autoresizingMask" flexibleMaxX="YES" flexibleMaxY="YES"/>
                                        <state key="normal" title="Button"/>
                                        <buttonConfiguration key="configuration" style="plain" title="SWAP TWO NUMBERS USING TEMPORARY VARIABLE">
                                            <fontDescription key="titleFontDescription" type="boldSystem" pointSize="17"/>
                                        </buttonConfiguration>
                                    </button>
                                    <button opaque="NO" contentMode="scaleToFill" fixedFrame="YES" contentHorizontalAlignment="leading" contentVerticalAlignment="center" buttonType="system" lineBreakMode="middleTruncation" translatesAutoresizingMaskIntoConstraints="NO" id="Wnp-ki-dtl">
                                        <rect key="frame" x="28" y="456" width="339" height="35"/>
                                        <autoresizingMask key="autoresizingMask" flexibleMaxX="YES" flexibleMaxY="YES"/>
                                        <state key="normal" title="Button"/>
                                        <buttonConfiguration key="configuration" style="plain" title="BITWISE OPERATOR">
                                            <fontDescription key="titleFontDescription" type="boldSystem" pointSize="17"/>
                                        </buttonConfiguration>
                                    </button>
                                    <button opaque="NO" contentMode="scaleToFill" fixedFrame="YES" contentHorizontalAlignment="leading" contentVerticalAlignment="center" buttonType="system" lineBreakMode="middleTruncation" translatesAutoresizingMaskIntoConstraints="NO" id="ULZ-HP-gFL">
                                        <rect key="frame" x="18" y="413" width="339" height="35"/>
                                        <autoresizingMask key="autoresizingMask" flexibleMaxX="YES" flexibleMaxY="YES"/>
                                        <state key="normal" title="Button"/>
                                        <buttonConfiguration key="configuration" style="plain" title="Program to print grade of students according to marks">
                                            <fontDescription key="titleFontDescription" type="boldSystem" pointSize="17"/>
                                        </buttonConfiguration>
                                    </button>
                                </subviews>
                                <color key="backgroundColor" systemColor="systemBackgroundColor"/>
                            </view>
                            <button opaque="NO" contentMode="scaleToFill" fixedFrame="YES" contentHorizontalAlignment="center" contentVerticalAlignment="center" buttonType="system" lineBreakMode="middleTruncation" translatesAutoresizingMaskIntoConstraints="NO" id="w1m-mA-pRH">
                                <rect key="frame" x="10" y="10" width="39" height="35"/>
                                <autoresizingMask key="autoresizingMask" flexibleMaxX="YES" flexibleMaxY="YES"/>
                                <state key="normal" title="Button"/>
                                <buttonConfiguration key="configuration" style="plain" title="←"/>
                            </button>
                        </subviews>
                        <viewLayoutGuide key="safeArea" id="HSu-aZ-a8I"/>
                        <color key="backgroundColor" systemColor="systemBackgroundColor"/>
                    </view>
                </viewController>
                <placeholder placeholderIdentifier="IBFirstResponder" id="eRZ-ua-bAA" userLabel="First Responder" customClass="UIResponder" sceneMemberID="firstResponder"/>
            </objects>
            <point key="canvasLocation" x="1406" y="2061"/>
        </scene>
        <!--View Controller-->
        <scene sceneID="2LD-aW-Khj">
            <objects>
                <viewController id="m2e-6V-o94" sceneMemberID="viewController">
                    <view key="view" contentMode="scaleToFill" id="uEF-y3-4c1">
                        <rect key="frame" x="0.0" y="0.0" width="375" height="667"/>
                        <autoresizingMask key="autoresizingMask" widthSizable="YES" heightSizable="YES"/>
                        <subviews>
                            <button opaque="NO" contentMode="scaleToFill" fixedFrame="YES" contentHorizontalAlignment="center" contentVerticalAlignment="center" buttonType="system" lineBreakMode="middleTruncation" translatesAutoresizingMaskIntoConstraints="NO" id="KKz-Qn-TMe">
                                <rect key="frame" x="16" y="9" width="39" height="35"/>
                                <autoresizingMask key="autoresizingMask" flexibleMaxX="YES" flexibleMaxY="YES"/>
                                <state key="normal" title="Button"/>
                                <buttonConfiguration key="configuration" style="plain" title="←"/>
                            </button>
                            <scrollView clipsSubviews="YES" multipleTouchEnabled="YES" contentMode="scaleToFill" fixedFrame="YES" translatesAutoresizingMaskIntoConstraints="NO" id="Cze-Mc-7hq">
                                <rect key="frame" x="0.0" y="52" width="375" height="615"/>
                                <autoresizingMask key="autoresizingMask" flexibleMaxX="YES" flexibleMaxY="YES"/>
                                <subviews>
                                    <textView clipsSubviews="YES" multipleTouchEnabled="YES" contentMode="scaleToFill" fixedFrame="YES" editable="NO" textAlignment="natural" translatesAutoresizingMaskIntoConstraints="NO" id="af0-3C-Hc8">
                                        <rect key="frame" x="0.0" y="0.0" width="375" height="615"/>
                                        <autoresizingMask key="autoresizingMask" flexibleMaxX="YES" flexibleMaxY="YES"/>
                                        <color key="backgroundColor" systemColor="systemBackgroundColor"/>
                                        <string key="text">#include&lt; stdio.h &gt;
#include&lt; conio.h &gt;
void main()
{
int x, y;
printf(“Enter the two numbers\n”);
scanf(“%d %d ”,&amp;x ,&amp;y);
if(x&gt;y)
{
printf(“x is max and value of max is %d”, x);
}
else
{
printf(“y is max and value of max is %d”, y);
}
getch();
}

Output:
Enter the two numbers
10
21
y is max and value of max is 21</string>
                                        <color key="textColor" systemColor="labelColor"/>
                                        <fontDescription key="fontDescription" type="system" pointSize="14"/>
                                        <textInputTraits key="textInputTraits" autocapitalizationType="sentences"/>
                                    </textView>
                                </subviews>
                                <viewLayoutGuide key="contentLayoutGuide" id="9TI-5E-GPd"/>
                                <viewLayoutGuide key="frameLayoutGuide" id="B9l-Jv-blB"/>
                            </scrollView>
                        </subviews>
                        <viewLayoutGuide key="safeArea" id="37Z-4n-zZP"/>
                        <color key="backgroundColor" systemColor="systemBackgroundColor"/>
                    </view>
                </viewController>
                <placeholder placeholderIdentifier="IBFirstResponder" id="TZe-oc-GnW" userLabel="First Responder" customClass="UIResponder" sceneMemberID="firstResponder"/>
            </objects>
            <point key="canvasLocation" x="2084" y="2095"/>
        </scene>
        <!--View Controller-->
        <scene sceneID="QrG-VX-nDl">
            <objects>
                <viewController id="xQl-lM-Y64" sceneMemberID="viewController">
                    <view key="view" contentMode="scaleToFill" id="9p9-Gx-8uF">
                        <rect key="frame" x="0.0" y="0.0" width="375" height="667"/>
                        <autoresizingMask key="autoresizingMask" widthSizable="YES" heightSizable="YES"/>
                        <subviews>
                            <button opaque="NO" contentMode="scaleToFill" fixedFrame="YES" contentHorizontalAlignment="center" contentVerticalAlignment="center" buttonType="system" lineBreakMode="middleTruncation" translatesAutoresizingMaskIntoConstraints="NO" id="TEF-JY-aax">
                                <rect key="frame" x="16" y="9" width="39" height="35"/>
                                <autoresizingMask key="autoresizingMask" flexibleMaxX="YES" flexibleMaxY="YES"/>
                                <state key="normal" title="Button"/>
                                <buttonConfiguration key="configuration" style="plain" title="←"/>
                            </button>
                            <scrollView clipsSubviews="YES" multipleTouchEnabled="YES" contentMode="scaleToFill" fixedFrame="YES" translatesAutoresizingMaskIntoConstraints="NO" id="zbW-hb-akI">
                                <rect key="frame" x="0.0" y="52" width="375" height="615"/>
                                <autoresizingMask key="autoresizingMask" flexibleMaxX="YES" flexibleMaxY="YES"/>
                                <subviews>
                                    <textView clipsSubviews="YES" multipleTouchEnabled="YES" contentMode="scaleToFill" fixedFrame="YES" editable="NO" textAlignment="natural" translatesAutoresizingMaskIntoConstraints="NO" id="MLR-10-VJg">
                                        <rect key="frame" x="0.0" y="0.0" width="375" height="615"/>
                                        <autoresizingMask key="autoresizingMask" flexibleMaxX="YES" flexibleMaxY="YES"/>
                                        <color key="backgroundColor" systemColor="systemBackgroundColor"/>
                                        <string key="text">#include &lt; stdio.h &gt;
#include&lt; conio.h &gt;
void main() {
int year;
clrscr();
printf(“Enter the year\n ”);
scanf(“%d”, &amp;year);
if(((year %4==0) &amp;&amp; (year % 100 != 0)) || (year %400== 0))
printf(“%d is a leap year \n”, year);
else
printf(“% d is not a leap year \n”, year);
getch();
}

Output:
Enter the year
2020
2020 is a leap year</string>
                                        <color key="textColor" systemColor="labelColor"/>
                                        <fontDescription key="fontDescription" type="system" pointSize="14"/>
                                        <textInputTraits key="textInputTraits" autocapitalizationType="sentences"/>
                                    </textView>
                                </subviews>
                                <viewLayoutGuide key="contentLayoutGuide" id="CGg-uE-fmF"/>
                                <viewLayoutGuide key="frameLayoutGuide" id="U88-sq-PBu"/>
                            </scrollView>
                        </subviews>
                        <viewLayoutGuide key="safeArea" id="hue-HA-lZc"/>
                        <color key="backgroundColor" systemColor="systemBackgroundColor"/>
                    </view>
                </viewController>
                <placeholder placeholderIdentifier="IBFirstResponder" id="SpV-Rr-TSo" userLabel="First Responder" customClass="UIResponder" sceneMemberID="firstResponder"/>
            </objects>
            <point key="canvasLocation" x="2737" y="2095"/>
        </scene>
        <!--View Controller-->
        <scene sceneID="Jde-RU-xLm">
            <objects>
                <viewController id="HnO-ag-cz2" sceneMemberID="viewController">
                    <view key="view" contentMode="scaleToFill" id="qlv-uJ-4AS">
                        <rect key="frame" x="0.0" y="0.0" width="375" height="667"/>
                        <autoresizingMask key="autoresizingMask" widthSizable="YES" heightSizable="YES"/>
                        <subviews>
                            <button opaque="NO" contentMode="scaleToFill" fixedFrame="YES" contentHorizontalAlignment="center" contentVerticalAlignment="center" buttonType="system" lineBreakMode="middleTruncation" translatesAutoresizingMaskIntoConstraints="NO" id="gNr-fp-l4q">
                                <rect key="frame" x="16" y="9" width="39" height="35"/>
                                <autoresizingMask key="autoresizingMask" flexibleMaxX="YES" flexibleMaxY="YES"/>
                                <state key="normal" title="Button"/>
                                <buttonConfiguration key="configuration" style="plain" title="←"/>
                            </button>
                            <scrollView clipsSubviews="YES" multipleTouchEnabled="YES" contentMode="scaleToFill" fixedFrame="YES" translatesAutoresizingMaskIntoConstraints="NO" id="ROG-lX-OW5">
                                <rect key="frame" x="0.0" y="52" width="375" height="615"/>
                                <autoresizingMask key="autoresizingMask" flexibleMaxX="YES" flexibleMaxY="YES"/>
                                <subviews>
                                    <textView clipsSubviews="YES" multipleTouchEnabled="YES" contentMode="scaleToFill" fixedFrame="YES" editable="NO" textAlignment="natural" translatesAutoresizingMaskIntoConstraints="NO" id="zOf-Uj-KCm">
                                        <rect key="frame" x="0.0" y="0.0" width="375" height="615"/>
                                        <autoresizingMask key="autoresizingMask" flexibleMaxX="YES" flexibleMaxY="YES"/>
                                        <color key="backgroundColor" systemColor="systemBackgroundColor"/>
                                        <mutableString key="text">#include&lt; stdio.h &gt;
#include&lt; conio.h &gt;
void main()
{
float a, b, c;
clrscr();
printf(“Enter the three sides of a triangle\n”);
scanf(“ %f %f %f”, &amp;a, &amp;b, &amp;c);
printf(“ The given sides are \n”);
printf(“% 8.2f %8.2f %8.2f \n”, a, b, c);
if(((a+b) &gt; c) &amp;&amp; ((a+c) &gt; b) &amp;&amp; ((b+c) &gt; a))
{
if(((a==b) &amp;&amp; (a==c))
{
printf(“Equilateral triangle \n”);
}
else
{
if((a==b) !! (a==c) !! (b==c))
{
printf(“Isosceles triangle \n ”);
}
else
{
printf(“ Simple triangle \n”);
}
}
}
else
{
printf(“Triangle is not possible”);
}
getch();
}

Output:
Enter the three sides of a triangle
3.0
3.0
3.0
The given sides are 3.0 3.0 3.0
Equilateral triangle</mutableString>
                                        <color key="textColor" systemColor="labelColor"/>
                                        <fontDescription key="fontDescription" type="system" pointSize="14"/>
                                        <textInputTraits key="textInputTraits" autocapitalizationType="sentences"/>
                                    </textView>
                                </subviews>
                                <viewLayoutGuide key="contentLayoutGuide" id="iRH-Vc-pTB"/>
                                <viewLayoutGuide key="frameLayoutGuide" id="PFH-IS-Vyl"/>
                            </scrollView>
                        </subviews>
                        <viewLayoutGuide key="safeArea" id="tpk-xg-Qoj"/>
                        <color key="backgroundColor" systemColor="systemBackgroundColor"/>
                    </view>
                </viewController>
                <placeholder placeholderIdentifier="IBFirstResponder" id="4gK-PU-d7d" userLabel="First Responder" customClass="UIResponder" sceneMemberID="firstResponder"/>
            </objects>
            <point key="canvasLocation" x="3388" y="2095"/>
        </scene>
        <!--View Controller-->
        <scene sceneID="cRu-PX-1lP">
            <objects>
                <viewController id="2fG-H6-rCa" sceneMemberID="viewController">
                    <view key="view" contentMode="scaleToFill" id="ewK-ZX-XPy">
                        <rect key="frame" x="0.0" y="0.0" width="375" height="667"/>
                        <autoresizingMask key="autoresizingMask" widthSizable="YES" heightSizable="YES"/>
                        <subviews>
                            <button opaque="NO" contentMode="scaleToFill" fixedFrame="YES" contentHorizontalAlignment="center" contentVerticalAlignment="center" buttonType="system" lineBreakMode="middleTruncation" translatesAutoresizingMaskIntoConstraints="NO" id="Vmc-f1-n0D">
                                <rect key="frame" x="16" y="9" width="39" height="35"/>
                                <autoresizingMask key="autoresizingMask" flexibleMaxX="YES" flexibleMaxY="YES"/>
                                <state key="normal" title="Button"/>
                                <buttonConfiguration key="configuration" style="plain" title="←"/>
                            </button>
                            <scrollView clipsSubviews="YES" multipleTouchEnabled="YES" contentMode="scaleToFill" fixedFrame="YES" translatesAutoresizingMaskIntoConstraints="NO" id="jtj-K1-kPU">
                                <rect key="frame" x="0.0" y="52" width="375" height="615"/>
                                <autoresizingMask key="autoresizingMask" flexibleMaxX="YES" flexibleMaxY="YES"/>
                                <subviews>
                                    <textView clipsSubviews="YES" multipleTouchEnabled="YES" contentMode="scaleToFill" fixedFrame="YES" editable="NO" textAlignment="natural" translatesAutoresizingMaskIntoConstraints="NO" id="N4G-xb-xEK">
                                        <rect key="frame" x="0.0" y="0.0" width="375" height="615"/>
                                        <autoresizingMask key="autoresizingMask" flexibleMaxX="YES" flexibleMaxY="YES"/>
                                        <color key="backgroundColor" systemColor="systemBackgroundColor"/>
                                        <mutableString key="text">#include&lt; stdio.h &gt;
#include&lt; conio.h &gt;
void main()
{
int day ;
clrscr();
printf(“Enter the week day number between 1 to7 \n”);
scanf(“%d ”,&amp;day);
if(day==1)
printf(“\n Week day is Monday”);
else if(day==2)
printf(“\n Week day is Tuesday”);
else if(day==3)
printf(“\n Week day is Wednesday”);
else if(day==4)
printf(“\n Week day is Thursday”);
else if(day==5)
printf(“\n Week day is Friday”);
else if(day==6)
printf(“\n Week day is Saturday”);
else if(day==7)
printf(“\n Week day is Sunday”);
else
printf(“\n Wrong choice. Please enter correct week day.”);
}

Output:
Enter the week day number between 1 to 7
2
Week day is Tuesday</mutableString>
                                        <color key="textColor" systemColor="labelColor"/>
                                        <fontDescription key="fontDescription" type="system" pointSize="14"/>
                                        <textInputTraits key="textInputTraits" autocapitalizationType="sentences"/>
                                    </textView>
                                </subviews>
                                <viewLayoutGuide key="contentLayoutGuide" id="6cs-59-5qm"/>
                                <viewLayoutGuide key="frameLayoutGuide" id="c01-lv-mTm"/>
                            </scrollView>
                        </subviews>
                        <viewLayoutGuide key="safeArea" id="fmz-5o-O5F"/>
                        <color key="backgroundColor" systemColor="systemBackgroundColor"/>
                    </view>
                </viewController>
                <placeholder placeholderIdentifier="IBFirstResponder" id="JWF-pi-yW9" userLabel="First Responder" customClass="UIResponder" sceneMemberID="firstResponder"/>
            </objects>
            <point key="canvasLocation" x="4020" y="2095"/>
        </scene>
        <!--View Controller-->
        <scene sceneID="CTr-i0-jvp">
            <objects>
                <viewController id="imU-sr-uDt" sceneMemberID="viewController">
                    <view key="view" contentMode="scaleToFill" id="GGk-wV-q4Y">
                        <rect key="frame" x="0.0" y="0.0" width="375" height="667"/>
                        <autoresizingMask key="autoresizingMask" widthSizable="YES" heightSizable="YES"/>
                        <subviews>
                            <button opaque="NO" contentMode="scaleToFill" fixedFrame="YES" contentHorizontalAlignment="center" contentVerticalAlignment="center" buttonType="system" lineBreakMode="middleTruncation" translatesAutoresizingMaskIntoConstraints="NO" id="Xef-hw-LDC">
                                <rect key="frame" x="16" y="9" width="39" height="35"/>
                                <autoresizingMask key="autoresizingMask" flexibleMaxX="YES" flexibleMaxY="YES"/>
                                <state key="normal" title="Button"/>
                                <buttonConfiguration key="configuration" style="plain" title="←"/>
                            </button>
                            <scrollView clipsSubviews="YES" multipleTouchEnabled="YES" contentMode="scaleToFill" fixedFrame="YES" translatesAutoresizingMaskIntoConstraints="NO" id="U9d-Xr-xxL">
                                <rect key="frame" x="0.0" y="52" width="375" height="615"/>
                                <autoresizingMask key="autoresizingMask" flexibleMaxX="YES" flexibleMaxY="YES"/>
                                <subviews>
                                    <textView clipsSubviews="YES" multipleTouchEnabled="YES" contentMode="scaleToFill" fixedFrame="YES" editable="NO" textAlignment="natural" translatesAutoresizingMaskIntoConstraints="NO" id="79T-tz-qFi">
                                        <rect key="frame" x="0.0" y="0.0" width="375" height="615"/>
                                        <autoresizingMask key="autoresizingMask" flexibleMaxX="YES" flexibleMaxY="YES"/>
                                        <color key="backgroundColor" systemColor="systemBackgroundColor"/>
                                        <string key="text">#include&lt; stdio.h&gt;
#include&lt; conio.h&gt;
void main()
{
int month ;
clrscr( );
printf(“Enter month number between 1 to 12 \n”);
scanf(“%d ”,&amp;month );
switch(month)
{
case 1:
case 3:
case 5:
case 7:
case 8:
case 10:
case 12:
printf(“\n 31 days in a month ”);
break;
case 4:
case 6:
case 9:
case 11:
printf(“\n 30 days in a month ”);
break;
case 2:
printf(“\n 28 or 29 days in a month ”);
break;
default :
printf(“\n wrong choice ”);
break;
}
getch();
}

Output:
Enter month number between 1 to 12
4
30 days in a month</string>
                                        <color key="textColor" systemColor="labelColor"/>
                                        <fontDescription key="fontDescription" type="system" pointSize="14"/>
                                        <textInputTraits key="textInputTraits" autocapitalizationType="sentences"/>
                                    </textView>
                                </subviews>
                                <viewLayoutGuide key="contentLayoutGuide" id="iUw-ob-Dz7"/>
                                <viewLayoutGuide key="frameLayoutGuide" id="sz2-Yb-vSD"/>
                            </scrollView>
                        </subviews>
                        <viewLayoutGuide key="safeArea" id="ngh-kZ-ZTZ"/>
                        <color key="backgroundColor" systemColor="systemBackgroundColor"/>
                    </view>
                </viewController>
                <placeholder placeholderIdentifier="IBFirstResponder" id="CWC-7e-UKb" userLabel="First Responder" customClass="UIResponder" sceneMemberID="firstResponder"/>
            </objects>
            <point key="canvasLocation" x="4673" y="2095"/>
        </scene>
        <!--View Controller-->
        <scene sceneID="oGp-Mv-Ina">
            <objects>
                <viewController id="7M2-gC-BIn" sceneMemberID="viewController">
                    <view key="view" contentMode="scaleToFill" id="3tD-ra-VGg">
                        <rect key="frame" x="0.0" y="0.0" width="375" height="667"/>
                        <autoresizingMask key="autoresizingMask" widthSizable="YES" heightSizable="YES"/>
                        <subviews>
                            <button opaque="NO" contentMode="scaleToFill" fixedFrame="YES" contentHorizontalAlignment="center" contentVerticalAlignment="center" buttonType="system" lineBreakMode="middleTruncation" translatesAutoresizingMaskIntoConstraints="NO" id="wz9-w4-IaS">
                                <rect key="frame" x="16" y="9" width="39" height="35"/>
                                <autoresizingMask key="autoresizingMask" flexibleMaxX="YES" flexibleMaxY="YES"/>
                                <state key="normal" title="Button"/>
                                <buttonConfiguration key="configuration" style="plain" title="←"/>
                            </button>
                            <scrollView clipsSubviews="YES" multipleTouchEnabled="YES" contentMode="scaleToFill" fixedFrame="YES" translatesAutoresizingMaskIntoConstraints="NO" id="XK7-WR-SfJ">
                                <rect key="frame" x="0.0" y="52" width="375" height="615"/>
                                <autoresizingMask key="autoresizingMask" flexibleMaxX="YES" flexibleMaxY="YES"/>
                                <subviews>
                                    <textView clipsSubviews="YES" multipleTouchEnabled="YES" contentMode="scaleToFill" fixedFrame="YES" editable="NO" textAlignment="natural" translatesAutoresizingMaskIntoConstraints="NO" id="19p-SV-pHh">
                                        <rect key="frame" x="0.0" y="0.0" width="375" height="615"/>
                                        <autoresizingMask key="autoresizingMask" flexibleMaxX="YES" flexibleMaxY="YES"/>
                                        <color key="backgroundColor" systemColor="systemBackgroundColor"/>
                                        <string key="text">#include&lt; stdio.h&gt;
#include&lt; conio.h&gt;
void main()
{
char gender;
clrscr();
printf("Enter gender (M/m or F/f): \n ");
scanf("%c",&amp;gender);
switch(gender)
{
case 'M':
case 'm':
printf("\n You are Male.");
break;
case 'F':
case 'f':
printf("\n You are Female.");
break;
default:
printf("\n Unspecified Gender.");
}
printf("\n");
getch();
}

Output:
Enter gender (M/m or F/f):
M
You are Male.</string>
                                        <color key="textColor" systemColor="labelColor"/>
                                        <fontDescription key="fontDescription" type="system" pointSize="14"/>
                                        <textInputTraits key="textInputTraits" autocapitalizationType="sentences"/>
                                    </textView>
                                </subviews>
                                <viewLayoutGuide key="contentLayoutGuide" id="fa2-LK-pQR"/>
                                <viewLayoutGuide key="frameLayoutGuide" id="oTF-Qy-c7k"/>
                            </scrollView>
                        </subviews>
                        <viewLayoutGuide key="safeArea" id="69i-5B-iha"/>
                        <color key="backgroundColor" systemColor="systemBackgroundColor"/>
                    </view>
                </viewController>
                <placeholder placeholderIdentifier="IBFirstResponder" id="zN7-jg-1Dz" userLabel="First Responder" customClass="UIResponder" sceneMemberID="firstResponder"/>
            </objects>
            <point key="canvasLocation" x="5374" y="2095"/>
        </scene>
        <!--View Controller-->
        <scene sceneID="Ta9-NX-Se7">
            <objects>
                <viewController id="6WV-VO-Auo" sceneMemberID="viewController">
                    <view key="view" contentMode="scaleToFill" id="5Fj-38-SIT">
                        <rect key="frame" x="0.0" y="0.0" width="375" height="667"/>
                        <autoresizingMask key="autoresizingMask" widthSizable="YES" heightSizable="YES"/>
                        <subviews>
                            <button opaque="NO" contentMode="scaleToFill" fixedFrame="YES" contentHorizontalAlignment="center" contentVerticalAlignment="center" buttonType="system" lineBreakMode="middleTruncation" translatesAutoresizingMaskIntoConstraints="NO" id="jhb-fX-6MH">
                                <rect key="frame" x="16" y="9" width="39" height="35"/>
                                <autoresizingMask key="autoresizingMask" flexibleMaxX="YES" flexibleMaxY="YES"/>
                                <state key="normal" title="Button"/>
                                <buttonConfiguration key="configuration" style="plain" title="←"/>
                            </button>
                            <scrollView clipsSubviews="YES" multipleTouchEnabled="YES" contentMode="scaleToFill" fixedFrame="YES" translatesAutoresizingMaskIntoConstraints="NO" id="c5P-dn-H3e">
                                <rect key="frame" x="0.0" y="52" width="375" height="615"/>
                                <autoresizingMask key="autoresizingMask" flexibleMaxX="YES" flexibleMaxY="YES"/>
                                <subviews>
                                    <textView clipsSubviews="YES" multipleTouchEnabled="YES" contentMode="scaleToFill" fixedFrame="YES" editable="NO" textAlignment="natural" translatesAutoresizingMaskIntoConstraints="NO" id="9KQ-Im-Sm9">
                                        <rect key="frame" x="0.0" y="0.0" width="375" height="615"/>
                                        <autoresizingMask key="autoresizingMask" flexibleMaxX="YES" flexibleMaxY="YES"/>
                                        <color key="backgroundColor" systemColor="systemBackgroundColor"/>
                                        <string key="text">#include&lt; stdio.h&gt;
#include&lt; conio.h&gt;
void main()
{
int a;
printf("Enter a Number: \n");
scanf("%d",&amp;a);
if(a &gt; 0)
{
printf("\n Given Number is Positive");
}
else if(a == 0)
{
printf("\n Given Number is Zero");
}
else if(a &lt; 0)
{
printf(" \n Given Number is Negative");
}
else
{
printf(" \n You have entered wrong data");
}
getch();
}

Output:
Enter a Number: 21
Given Number is Positive</string>
                                        <color key="textColor" systemColor="labelColor"/>
                                        <fontDescription key="fontDescription" type="system" pointSize="14"/>
                                        <textInputTraits key="textInputTraits" autocapitalizationType="sentences"/>
                                    </textView>
                                </subviews>
                                <viewLayoutGuide key="contentLayoutGuide" id="Fz5-l5-NRi"/>
                                <viewLayoutGuide key="frameLayoutGuide" id="I4O-AI-ipI"/>
                            </scrollView>
                        </subviews>
                        <viewLayoutGuide key="safeArea" id="AxY-eZ-MCZ"/>
                        <color key="backgroundColor" systemColor="systemBackgroundColor"/>
                    </view>
                </viewController>
                <placeholder placeholderIdentifier="IBFirstResponder" id="bJH-1N-rIy" userLabel="First Responder" customClass="UIResponder" sceneMemberID="firstResponder"/>
            </objects>
            <point key="canvasLocation" x="6065" y="2095"/>
        </scene>
        <!--View Controller-->
        <scene sceneID="M1W-zp-AEQ">
            <objects>
                <viewController id="D08-wc-qMX" sceneMemberID="viewController">
                    <view key="view" contentMode="scaleToFill" id="U1B-xp-Nq8">
                        <rect key="frame" x="0.0" y="0.0" width="375" height="667"/>
                        <autoresizingMask key="autoresizingMask" widthSizable="YES" heightSizable="YES"/>
                        <subviews>
                            <button opaque="NO" contentMode="scaleToFill" fixedFrame="YES" contentHorizontalAlignment="center" contentVerticalAlignment="center" buttonType="system" lineBreakMode="middleTruncation" translatesAutoresizingMaskIntoConstraints="NO" id="7CE-vp-MKH">
                                <rect key="frame" x="16" y="9" width="39" height="35"/>
                                <autoresizingMask key="autoresizingMask" flexibleMaxX="YES" flexibleMaxY="YES"/>
                                <state key="normal" title="Button"/>
                                <buttonConfiguration key="configuration" style="plain" title="←"/>
                            </button>
                            <scrollView clipsSubviews="YES" multipleTouchEnabled="YES" contentMode="scaleToFill" fixedFrame="YES" translatesAutoresizingMaskIntoConstraints="NO" id="iUc-M4-dh0">
                                <rect key="frame" x="0.0" y="52" width="375" height="615"/>
                                <autoresizingMask key="autoresizingMask" flexibleMaxX="YES" flexibleMaxY="YES"/>
                                <subviews>
                                    <textView clipsSubviews="YES" multipleTouchEnabled="YES" contentMode="scaleToFill" fixedFrame="YES" editable="NO" textAlignment="natural" translatesAutoresizingMaskIntoConstraints="NO" id="n5u-5E-N3K">
                                        <rect key="frame" x="0.0" y="0.0" width="375" height="615"/>
                                        <autoresizingMask key="autoresizingMask" flexibleMaxX="YES" flexibleMaxY="YES"/>
                                        <color key="backgroundColor" systemColor="systemBackgroundColor"/>
                                        <string key="text">#include&lt; stdio.h&gt;
#include&lt; conio.h&gt;
void main()
{
int marks;

clrscr();

printf("Enter your marks between 0-100\n");

scanf("%d", &amp;marks);

if(marks &gt;= 90)

{

printf("Your grade is : A\n");

}

else if (marks &gt;= 70 &amp;&amp; marks &lt; 90)

{

printf("Your grade is : B\n");

}
else if (marks &gt;= 50 &amp;&amp; marks &lt; 70)
{
printf("Your grade is : C\n");
}
else
{
printf("Your grade is : Failed\n");
}
getch();
}

Output:
Enter your marks between 0-100 95
Your grade is : A</string>
                                        <color key="textColor" systemColor="labelColor"/>
                                        <fontDescription key="fontDescription" type="system" pointSize="14"/>
                                        <textInputTraits key="textInputTraits" autocapitalizationType="sentences"/>
                                    </textView>
                                </subviews>
                                <viewLayoutGuide key="contentLayoutGuide" id="H6s-Z0-07a"/>
                                <viewLayoutGuide key="frameLayoutGuide" id="aCv-6N-bJR"/>
                            </scrollView>
                        </subviews>
                        <viewLayoutGuide key="safeArea" id="SIs-NY-l1y"/>
                        <color key="backgroundColor" systemColor="systemBackgroundColor"/>
                    </view>
                </viewController>
                <placeholder placeholderIdentifier="IBFirstResponder" id="XDc-k5-vMe" userLabel="First Responder" customClass="UIResponder" sceneMemberID="firstResponder"/>
            </objects>
            <point key="canvasLocation" x="6718" y="2095"/>
        </scene>
        <!--View Controller-->
        <scene sceneID="FxE-qg-wRh">
            <objects>
                <viewController id="jqc-0F-fCZ" sceneMemberID="viewController">
                    <view key="view" contentMode="scaleToFill" id="kTp-1h-tih">
                        <rect key="frame" x="0.0" y="0.0" width="375" height="667"/>
                        <autoresizingMask key="autoresizingMask" widthSizable="YES" heightSizable="YES"/>
                        <subviews>
                            <button opaque="NO" contentMode="scaleToFill" fixedFrame="YES" contentHorizontalAlignment="center" contentVerticalAlignment="center" buttonType="system" lineBreakMode="middleTruncation" translatesAutoresizingMaskIntoConstraints="NO" id="0jO-X4-RB0">
                                <rect key="frame" x="16" y="9" width="39" height="35"/>
                                <autoresizingMask key="autoresizingMask" flexibleMaxX="YES" flexibleMaxY="YES"/>
                                <state key="normal" title="Button"/>
                                <buttonConfiguration key="configuration" style="plain" title="←"/>
                            </button>
                            <scrollView clipsSubviews="YES" multipleTouchEnabled="YES" contentMode="scaleToFill" fixedFrame="YES" translatesAutoresizingMaskIntoConstraints="NO" id="Ji6-y3-tXM">
                                <rect key="frame" x="0.0" y="52" width="375" height="615"/>
                                <autoresizingMask key="autoresizingMask" flexibleMaxX="YES" flexibleMaxY="YES"/>
                                <subviews>
                                    <textView clipsSubviews="YES" multipleTouchEnabled="YES" contentMode="scaleToFill" fixedFrame="YES" editable="NO" textAlignment="natural" translatesAutoresizingMaskIntoConstraints="NO" id="Bid-H1-OPQ">
                                        <rect key="frame" x="0.0" y="0.0" width="375" height="615"/>
                                        <autoresizingMask key="autoresizingMask" flexibleMaxX="YES" flexibleMaxY="YES"/>
                                        <color key="backgroundColor" systemColor="systemBackgroundColor"/>
                                        <mutableString key="text">#include&lt; stdio.h&gt;
#include&lt; conio.h&gt;
void main()
{
int var1, var2;
clrscr();
printf("Input the value of var1:");
scanf("%d", &amp;var1);
printf("\n Input the value of var2:");
scanf("%d",&amp;var2);
if (var1 != var2)
{
printf("\n var1 is not equal to var2\n");
if (var1 &gt; var2)
{
printf("\n var1 is greater than var2\n");
}
else
{
printf("\n var2 is greater than var1\n");
}
}
else
{
printf("\n var1 is equal to var2\n");
}
getch();
}

Output:
Input the value of var1:21
Input the value of var2:31
var1 is not equal to var2
var2 is greater than var1</mutableString>
                                        <color key="textColor" systemColor="labelColor"/>
                                        <fontDescription key="fontDescription" type="system" pointSize="14"/>
                                        <textInputTraits key="textInputTraits" autocapitalizationType="sentences"/>
                                    </textView>
                                </subviews>
                                <viewLayoutGuide key="contentLayoutGuide" id="73z-pm-9ES"/>
                                <viewLayoutGuide key="frameLayoutGuide" id="IVz-v8-Ibk"/>
                            </scrollView>
                        </subviews>
                        <viewLayoutGuide key="safeArea" id="foR-hV-h8S"/>
                        <color key="backgroundColor" systemColor="systemBackgroundColor"/>
                    </view>
                </viewController>
                <placeholder placeholderIdentifier="IBFirstResponder" id="BKc-zE-MXd" userLabel="First Responder" customClass="UIResponder" sceneMemberID="firstResponder"/>
            </objects>
            <point key="canvasLocation" x="7369" y="2095"/>
        </scene>
        <!--View Controller-->
        <scene sceneID="SMj-td-hiD">
            <objects>
                <viewController id="2kf-D2-lCm" sceneMemberID="viewController">
                    <view key="view" contentMode="scaleToFill" id="nOn-zB-p1c">
                        <rect key="frame" x="0.0" y="0.0" width="375" height="667"/>
                        <autoresizingMask key="autoresizingMask" widthSizable="YES" heightSizable="YES"/>
                        <subviews>
                            <button opaque="NO" contentMode="scaleToFill" fixedFrame="YES" contentHorizontalAlignment="center" contentVerticalAlignment="center" buttonType="system" lineBreakMode="middleTruncation" translatesAutoresizingMaskIntoConstraints="NO" id="oY3-H8-ZR8">
                                <rect key="frame" x="16" y="9" width="39" height="35"/>
                                <autoresizingMask key="autoresizingMask" flexibleMaxX="YES" flexibleMaxY="YES"/>
                                <state key="normal" title="Button"/>
                                <buttonConfiguration key="configuration" style="plain" title="←"/>
                            </button>
                            <scrollView clipsSubviews="YES" multipleTouchEnabled="YES" contentMode="scaleToFill" fixedFrame="YES" translatesAutoresizingMaskIntoConstraints="NO" id="NdX-vd-mJ7">
                                <rect key="frame" x="0.0" y="52" width="375" height="615"/>
                                <autoresizingMask key="autoresizingMask" flexibleMaxX="YES" flexibleMaxY="YES"/>
                                <subviews>
                                    <textView clipsSubviews="YES" multipleTouchEnabled="YES" contentMode="scaleToFill" fixedFrame="YES" editable="NO" textAlignment="natural" translatesAutoresizingMaskIntoConstraints="NO" id="Pib-nJ-CVW">
                                        <rect key="frame" x="0.0" y="0.0" width="375" height="615"/>
                                        <autoresizingMask key="autoresizingMask" flexibleMaxX="YES" flexibleMaxY="YES"/>
                                        <color key="backgroundColor" systemColor="systemBackgroundColor"/>
                                        <string key="text">#include&lt; stdio.h&gt;
#include&lt; conio.h&gt;
void main()
{
char character;
clrscr();
printf("Enter any Character\n");
scanf("%c", &amp;character);
if((character &gt;='a' &amp;&amp; character &lt;='z')||(character &gt;='A' &amp;&amp; character &lt;='Z'))
{
printf("%c is an Alphabet\n", character);
}
else if(character &gt;= '0' &amp;&amp; character &lt;= '9')
{
printf("%c is a Digit \n", character);
}
else
{
printf("%c is a special Character\n", character);
}
getch();
}

Output:
Enter any Character
A
A is an Alphabet</string>
                                        <color key="textColor" systemColor="labelColor"/>
                                        <fontDescription key="fontDescription" type="system" pointSize="14"/>
                                        <textInputTraits key="textInputTraits" autocapitalizationType="sentences"/>
                                    </textView>
                                </subviews>
                                <viewLayoutGuide key="contentLayoutGuide" id="H4U-CN-3EC"/>
                                <viewLayoutGuide key="frameLayoutGuide" id="GSr-nA-eWo"/>
                            </scrollView>
                        </subviews>
                        <viewLayoutGuide key="safeArea" id="Fnm-B4-qS2"/>
                        <color key="backgroundColor" systemColor="systemBackgroundColor"/>
                    </view>
                </viewController>
                <placeholder placeholderIdentifier="IBFirstResponder" id="Dlz-jG-Xew" userLabel="First Responder" customClass="UIResponder" sceneMemberID="firstResponder"/>
            </objects>
            <point key="canvasLocation" x="8001" y="2095"/>
        </scene>
        <!--View Controller-->
        <scene sceneID="imY-cV-WlB">
            <objects>
                <viewController id="4Vb-Kh-8x5" sceneMemberID="viewController">
                    <view key="view" contentMode="scaleToFill" id="q4P-zR-qL1">
                        <rect key="frame" x="0.0" y="0.0" width="375" height="667"/>
                        <autoresizingMask key="autoresizingMask" widthSizable="YES" heightSizable="YES"/>
                        <subviews>
                            <button opaque="NO" contentMode="scaleToFill" fixedFrame="YES" contentHorizontalAlignment="center" contentVerticalAlignment="center" buttonType="system" lineBreakMode="middleTruncation" translatesAutoresizingMaskIntoConstraints="NO" id="Ls3-gk-MDY">
                                <rect key="frame" x="16" y="9" width="39" height="35"/>
                                <autoresizingMask key="autoresizingMask" flexibleMaxX="YES" flexibleMaxY="YES"/>
                                <state key="normal" title="Button"/>
                                <buttonConfiguration key="configuration" style="plain" title="←"/>
                            </button>
                            <scrollView clipsSubviews="YES" multipleTouchEnabled="YES" contentMode="scaleToFill" fixedFrame="YES" translatesAutoresizingMaskIntoConstraints="NO" id="AlR-O6-fw0">
                                <rect key="frame" x="0.0" y="52" width="375" height="615"/>
                                <autoresizingMask key="autoresizingMask" flexibleMaxX="YES" flexibleMaxY="YES"/>
                                <subviews>
                                    <textView clipsSubviews="YES" multipleTouchEnabled="YES" contentMode="scaleToFill" fixedFrame="YES" editable="NO" textAlignment="natural" translatesAutoresizingMaskIntoConstraints="NO" id="Raq-Zm-5ef">
                                        <rect key="frame" x="0.0" y="0.0" width="375" height="615"/>
                                        <autoresizingMask key="autoresizingMask" flexibleMaxX="YES" flexibleMaxY="YES"/>
                                        <color key="backgroundColor" systemColor="systemBackgroundColor"/>
                                        <mutableString key="text">#include&lt; stdio.h &gt;
#include&lt; conio.h &gt;
void main()
{
int num , original_no , r , sum;
clrscr();
printf(“Enter any number for finding sum of its digits \n”);
scanf(“%d”, &amp;num);
sum=0;
original_no = num;
// or condition num &gt; 0 is also used
while ( num != 0)
{
// separate first digit from a number num and save it into variable r
r = num%10; // add the digit into intermediate variable sum
sum = sum + r;
// delete first digit from a number and save remaining number into variable num
num =num/10;
}
printf(“Sum of digits of number %d is %d”, original_no, sum);
}

Output:
Enter any number for finding sum of its digits
123
Sum of digits of number 123 is 6</mutableString>
                                        <color key="textColor" systemColor="labelColor"/>
                                        <fontDescription key="fontDescription" type="system" pointSize="14"/>
                                        <textInputTraits key="textInputTraits" autocapitalizationType="sentences"/>
                                    </textView>
                                </subviews>
                                <viewLayoutGuide key="contentLayoutGuide" id="Nd0-Wk-xZa"/>
                                <viewLayoutGuide key="frameLayoutGuide" id="sCT-Rp-2OC"/>
                            </scrollView>
                        </subviews>
                        <viewLayoutGuide key="safeArea" id="G4A-b7-ZJp"/>
                        <color key="backgroundColor" systemColor="systemBackgroundColor"/>
                    </view>
                </viewController>
                <placeholder placeholderIdentifier="IBFirstResponder" id="IDt-yW-BMC" userLabel="First Responder" customClass="UIResponder" sceneMemberID="firstResponder"/>
            </objects>
            <point key="canvasLocation" x="8654" y="2095"/>
        </scene>
        <!--View Controller-->
        <scene sceneID="uSK-P5-T6J">
            <objects>
                <viewController id="rDc-3q-9hu" sceneMemberID="viewController">
                    <view key="view" contentMode="scaleToFill" id="AeZ-hz-Ev1">
                        <rect key="frame" x="0.0" y="0.0" width="375" height="667"/>
                        <autoresizingMask key="autoresizingMask" widthSizable="YES" heightSizable="YES"/>
                        <subviews>
                            <button opaque="NO" contentMode="scaleToFill" fixedFrame="YES" contentHorizontalAlignment="center" contentVerticalAlignment="center" buttonType="system" lineBreakMode="middleTruncation" translatesAutoresizingMaskIntoConstraints="NO" id="gRI-o0-RFy">
                                <rect key="frame" x="16" y="9" width="39" height="35"/>
                                <autoresizingMask key="autoresizingMask" flexibleMaxX="YES" flexibleMaxY="YES"/>
                                <state key="normal" title="Button"/>
                                <buttonConfiguration key="configuration" style="plain" title="←"/>
                            </button>
                            <scrollView clipsSubviews="YES" multipleTouchEnabled="YES" contentMode="scaleToFill" fixedFrame="YES" translatesAutoresizingMaskIntoConstraints="NO" id="Dnc-RT-bGV">
                                <rect key="frame" x="0.0" y="52" width="375" height="615"/>
                                <autoresizingMask key="autoresizingMask" flexibleMaxX="YES" flexibleMaxY="YES"/>
                                <subviews>
                                    <textView clipsSubviews="YES" multipleTouchEnabled="YES" contentMode="scaleToFill" fixedFrame="YES" editable="NO" textAlignment="natural" translatesAutoresizingMaskIntoConstraints="NO" id="PPm-DU-ra8">
                                        <rect key="frame" x="0.0" y="0.0" width="375" height="615"/>
                                        <autoresizingMask key="autoresizingMask" flexibleMaxX="YES" flexibleMaxY="YES"/>
                                        <color key="backgroundColor" systemColor="systemBackgroundColor"/>
                                        <mutableString key="text">#include&lt; stdio.h&gt;
#include&lt; conio.h &gt;
void main()
{
int num , original_no , r , rev;
clrscr();
printf(“Enter any number \n”);
scanf(“%d”, &amp;num);
rev = 0;
original_no = num;
while ( num != 0)
// or condition num &gt; 0 is also used
{
r = num%10;
// separate first digit from a number num and save it into variable r
rev = rev * 10 + r;
// multiply intermediate result by 10 and add separated digit r
num =num/10;
// delete first digit from a number and save remaining number into variable num
}
if (original_no == rev)
{
printf(“ \n Number is Palindrome”);
}else
{
printf(“ \n Number is not Palindrome”);
}
}

Output:
Enter any number
212
Number is Palindrome</mutableString>
                                        <color key="textColor" systemColor="labelColor"/>
                                        <fontDescription key="fontDescription" type="system" pointSize="14"/>
                                        <textInputTraits key="textInputTraits" autocapitalizationType="sentences"/>
                                    </textView>
                                </subviews>
                                <viewLayoutGuide key="contentLayoutGuide" id="eTq-8n-lQr"/>
                                <viewLayoutGuide key="frameLayoutGuide" id="Qem-rZ-V66"/>
                            </scrollView>
                        </subviews>
                        <viewLayoutGuide key="safeArea" id="oQS-Oo-eqq"/>
                        <color key="backgroundColor" systemColor="systemBackgroundColor"/>
                    </view>
                </viewController>
                <placeholder placeholderIdentifier="IBFirstResponder" id="rbm-dW-Xbg" userLabel="First Responder" customClass="UIResponder" sceneMemberID="firstResponder"/>
            </objects>
            <point key="canvasLocation" x="9353" y="2095"/>
        </scene>
        <!--View Controller-->
        <scene sceneID="Hbz-5K-lTZ">
            <objects>
                <viewController id="hXS-2C-YRv" sceneMemberID="viewController">
                    <view key="view" contentMode="scaleToFill" id="aOR-7v-S1S">
                        <rect key="frame" x="0.0" y="0.0" width="375" height="667"/>
                        <autoresizingMask key="autoresizingMask" widthSizable="YES" heightSizable="YES"/>
                        <subviews>
                            <button opaque="NO" contentMode="scaleToFill" fixedFrame="YES" contentHorizontalAlignment="center" contentVerticalAlignment="center" buttonType="system" lineBreakMode="middleTruncation" translatesAutoresizingMaskIntoConstraints="NO" id="C0j-PG-DXU">
                                <rect key="frame" x="16" y="9" width="39" height="35"/>
                                <autoresizingMask key="autoresizingMask" flexibleMaxX="YES" flexibleMaxY="YES"/>
                                <state key="normal" title="Button"/>
                                <buttonConfiguration key="configuration" style="plain" title="←"/>
                            </button>
                            <scrollView clipsSubviews="YES" multipleTouchEnabled="YES" contentMode="scaleToFill" fixedFrame="YES" translatesAutoresizingMaskIntoConstraints="NO" id="hzn-tE-5Wd">
                                <rect key="frame" x="0.0" y="52" width="375" height="615"/>
                                <autoresizingMask key="autoresizingMask" flexibleMaxX="YES" flexibleMaxY="YES"/>
                                <subviews>
                                    <textView clipsSubviews="YES" multipleTouchEnabled="YES" contentMode="scaleToFill" fixedFrame="YES" editable="NO" textAlignment="natural" translatesAutoresizingMaskIntoConstraints="NO" id="8m1-Z8-YaV">
                                        <rect key="frame" x="0.0" y="0.0" width="375" height="615"/>
                                        <autoresizingMask key="autoresizingMask" flexibleMaxX="YES" flexibleMaxY="YES"/>
                                        <color key="backgroundColor" systemColor="systemBackgroundColor"/>
                                        <mutableString key="text">#include&lt; stdio.h &gt;
#include&lt; conio.h &gt;
void main()
{
int num , original_no , r , sum;
clrscr();
printf(“Enter a number having three digits \n”);
scanf(“%d”, &amp;num);
sum=0;
original_no = num;
// or condition num &gt; 0 is also used
{
r = num%10;
// separate first digit from a number num and save it into variable r
sum = sum + r * r * r ;
// add the digit into intermediate variable sum
num =num/10;
// delete first digit from a number and save remaining number into variable num
}
if ( original_no == sum)
{
printf(“Number is Armstrong Number\n”);
}else
{
printf(“Number is not Armstrong Number\n”);
}
}

Output:
Enter a number having three digits
153
Number is Armstrong Number</mutableString>
                                        <color key="textColor" systemColor="labelColor"/>
                                        <fontDescription key="fontDescription" type="system" pointSize="14"/>
                                        <textInputTraits key="textInputTraits" autocapitalizationType="sentences"/>
                                    </textView>
                                </subviews>
                                <viewLayoutGuide key="contentLayoutGuide" id="Ifa-XV-KTD"/>
                                <viewLayoutGuide key="frameLayoutGuide" id="8u9-mf-8w4"/>
                            </scrollView>
                        </subviews>
                        <viewLayoutGuide key="safeArea" id="Chp-Xn-Lgp"/>
                        <color key="backgroundColor" systemColor="systemBackgroundColor"/>
                    </view>
                </viewController>
                <placeholder placeholderIdentifier="IBFirstResponder" id="hh2-vZ-QEE" userLabel="First Responder" customClass="UIResponder" sceneMemberID="firstResponder"/>
            </objects>
            <point key="canvasLocation" x="10015" y="2095"/>
        </scene>
        <!--View Controller-->
        <scene sceneID="eIs-NG-eUf">
            <objects>
                <viewController id="EFd-Rq-C46" sceneMemberID="viewController">
                    <view key="view" contentMode="scaleToFill" id="3Uj-Ah-Mbs">
                        <rect key="frame" x="0.0" y="0.0" width="375" height="667"/>
                        <autoresizingMask key="autoresizingMask" widthSizable="YES" heightSizable="YES"/>
                        <subviews>
                            <button opaque="NO" contentMode="scaleToFill" fixedFrame="YES" contentHorizontalAlignment="center" contentVerticalAlignment="center" buttonType="system" lineBreakMode="middleTruncation" translatesAutoresizingMaskIntoConstraints="NO" id="Wvi-Kq-Wqn">
                                <rect key="frame" x="16" y="9" width="39" height="35"/>
                                <autoresizingMask key="autoresizingMask" flexibleMaxX="YES" flexibleMaxY="YES"/>
                                <state key="normal" title="Button"/>
                                <buttonConfiguration key="configuration" style="plain" title="←"/>
                            </button>
                            <scrollView clipsSubviews="YES" multipleTouchEnabled="YES" contentMode="scaleToFill" fixedFrame="YES" translatesAutoresizingMaskIntoConstraints="NO" id="Sa7-Ml-Zg4">
                                <rect key="frame" x="0.0" y="52" width="375" height="615"/>
                                <autoresizingMask key="autoresizingMask" flexibleMaxX="YES" flexibleMaxY="YES"/>
                                <subviews>
                                    <textView clipsSubviews="YES" multipleTouchEnabled="YES" contentMode="scaleToFill" fixedFrame="YES" editable="NO" textAlignment="natural" translatesAutoresizingMaskIntoConstraints="NO" id="TGP-pP-CPl">
                                        <rect key="frame" x="0.0" y="0.0" width="375" height="615"/>
                                        <autoresizingMask key="autoresizingMask" flexibleMaxX="YES" flexibleMaxY="YES"/>
                                        <color key="backgroundColor" systemColor="systemBackgroundColor"/>
                                        <mutableString key="text">#include&lt; stdio.h &gt;
#include&lt; conio.h &gt;
void main()
{
int num, binary_val, decimal_val = 0, base = 1, rem;
clrscr();
printf("Enter a binary number (1s and 0s) \n");
scanf("%d", &amp;num); /* maximum five digits */
binary_val = num;
do
{
rem = num % 10;
decimal_val = decimal_val + rem * base;
num = num / 10 ;
base = base * 2;
} while (num &gt; 0);
printf("The Binary number is = %d \n", binary_val);
printf("Its decimal equivalent value is = %d \n", decimal_val);
getch();
}

Output
Enter a binary number (1s and 0s)
10100
The Binary number is = 10100
Its decimal equivalent value is = 20</mutableString>
                                        <color key="textColor" systemColor="labelColor"/>
                                        <fontDescription key="fontDescription" type="system" pointSize="14"/>
                                        <textInputTraits key="textInputTraits" autocapitalizationType="sentences"/>
                                    </textView>
                                </subviews>
                                <viewLayoutGuide key="contentLayoutGuide" id="3pJ-z0-kAk"/>
                                <viewLayoutGuide key="frameLayoutGuide" id="8dn-1X-FQ5"/>
                            </scrollView>
                        </subviews>
                        <viewLayoutGuide key="safeArea" id="MIS-eT-wUV"/>
                        <color key="backgroundColor" systemColor="systemBackgroundColor"/>
                    </view>
                </viewController>
                <placeholder placeholderIdentifier="IBFirstResponder" id="NOy-OS-36F" userLabel="First Responder" customClass="UIResponder" sceneMemberID="firstResponder"/>
            </objects>
            <point key="canvasLocation" x="10807" y="2095"/>
        </scene>
        <!--View Controller-->
        <scene sceneID="nbh-pk-0a6">
            <objects>
                <viewController id="IU2-oL-gao" sceneMemberID="viewController">
                    <view key="view" contentMode="scaleToFill" id="xWn-4f-iNn">
                        <rect key="frame" x="0.0" y="0.0" width="375" height="667"/>
                        <autoresizingMask key="autoresizingMask" widthSizable="YES" heightSizable="YES"/>
                        <subviews>
                            <button opaque="NO" contentMode="scaleToFill" fixedFrame="YES" contentHorizontalAlignment="center" contentVerticalAlignment="center" buttonType="system" lineBreakMode="middleTruncation" translatesAutoresizingMaskIntoConstraints="NO" id="zYD-68-Ffd">
                                <rect key="frame" x="16" y="9" width="39" height="35"/>
                                <autoresizingMask key="autoresizingMask" flexibleMaxX="YES" flexibleMaxY="YES"/>
                                <state key="normal" title="Button"/>
                                <buttonConfiguration key="configuration" style="plain" title="←"/>
                            </button>
                            <scrollView clipsSubviews="YES" multipleTouchEnabled="YES" contentMode="scaleToFill" fixedFrame="YES" translatesAutoresizingMaskIntoConstraints="NO" id="DT4-OP-Wm8">
                                <rect key="frame" x="0.0" y="52" width="375" height="615"/>
                                <autoresizingMask key="autoresizingMask" flexibleMaxX="YES" flexibleMaxY="YES"/>
                                <subviews>
                                    <textView clipsSubviews="YES" multipleTouchEnabled="YES" contentMode="scaleToFill" fixedFrame="YES" editable="NO" textAlignment="natural" translatesAutoresizingMaskIntoConstraints="NO" id="K2s-hi-GBH">
                                        <rect key="frame" x="0.0" y="0.0" width="375" height="615"/>
                                        <autoresizingMask key="autoresizingMask" flexibleMaxX="YES" flexibleMaxY="YES"/>
                                        <color key="backgroundColor" systemColor="systemBackgroundColor"/>
                                        <string key="text">#include&lt; stdio.h &gt;
#include&lt; conio.h &gt;
void main()
{
long int binarynum, octalnum = 0, j = 1, remainder;
clrscr();
printf("Enter any binary number:\n ");
scanf("%ld", &amp;binarynum);
do
{
remainder = binarynum % 10;
octalnum = octalnum + remainder * j;
j = j * 2;
binarynum = binarynum / 10;
} while (binarynum != 0);
printf("Equivalent octal value: %ld", octalnum);
getch();
}

Output:
Enter any binary number:
1010
Equivalent octal value: 12</string>
                                        <color key="textColor" systemColor="labelColor"/>
                                        <fontDescription key="fontDescription" type="system" pointSize="14"/>
                                        <textInputTraits key="textInputTraits" autocapitalizationType="sentences"/>
                                    </textView>
                                </subviews>
                                <viewLayoutGuide key="contentLayoutGuide" id="jFh-DZ-7UE"/>
                                <viewLayoutGuide key="frameLayoutGuide" id="OQz-W4-yvg"/>
                            </scrollView>
                        </subviews>
                        <viewLayoutGuide key="safeArea" id="oi7-Tb-AP4"/>
                        <color key="backgroundColor" systemColor="systemBackgroundColor"/>
                    </view>
                </viewController>
                <placeholder placeholderIdentifier="IBFirstResponder" id="lud-a8-x9z" userLabel="First Responder" customClass="UIResponder" sceneMemberID="firstResponder"/>
            </objects>
            <point key="canvasLocation" x="11506" y="2095"/>
        </scene>
        <!--View Controller-->
        <scene sceneID="TY9-VW-G8b">
            <objects>
                <viewController id="SVe-gB-xDc" sceneMemberID="viewController">
                    <view key="view" contentMode="scaleToFill" id="H3B-jw-r8N">
                        <rect key="frame" x="0.0" y="0.0" width="375" height="667"/>
                        <autoresizingMask key="autoresizingMask" widthSizable="YES" heightSizable="YES"/>
                        <subviews>
                            <button opaque="NO" contentMode="scaleToFill" fixedFrame="YES" contentHorizontalAlignment="center" contentVerticalAlignment="center" buttonType="system" lineBreakMode="middleTruncation" translatesAutoresizingMaskIntoConstraints="NO" id="oXn-Cu-Pxa">
                                <rect key="frame" x="16" y="9" width="39" height="35"/>
                                <autoresizingMask key="autoresizingMask" flexibleMaxX="YES" flexibleMaxY="YES"/>
                                <state key="normal" title="Button"/>
                                <buttonConfiguration key="configuration" style="plain" title="←"/>
                            </button>
                            <scrollView clipsSubviews="YES" multipleTouchEnabled="YES" contentMode="scaleToFill" fixedFrame="YES" translatesAutoresizingMaskIntoConstraints="NO" id="j92-FA-sFf">
                                <rect key="frame" x="0.0" y="52" width="375" height="615"/>
                                <autoresizingMask key="autoresizingMask" flexibleMaxX="YES" flexibleMaxY="YES"/>
                                <subviews>
                                    <textView clipsSubviews="YES" multipleTouchEnabled="YES" contentMode="scaleToFill" fixedFrame="YES" editable="NO" textAlignment="natural" translatesAutoresizingMaskIntoConstraints="NO" id="Dcd-p2-YLY">
                                        <rect key="frame" x="0.0" y="0.0" width="375" height="615"/>
                                        <autoresizingMask key="autoresizingMask" flexibleMaxX="YES" flexibleMaxY="YES"/>
                                        <color key="backgroundColor" systemColor="systemBackgroundColor"/>
                                        <string key="text">#include&lt; stdio.h &gt;
#include&lt; conio.h &gt;
void main()
{
int limit,num,sum=0;
clrscr();
printf(“Enter the number till which addition of natural numbers to be done\n”);
scanf(“%d”, &amp;limit);
num = 1;
target:
sum = sum + num;
if(num {
num++;
goto target;
}
printf(“\n Sum of first %d natural number is %d”, limit ,sum);
getch();
}

Output:
Enter the number till which addition of natural numbers to be done
10
Sum of first 10 natural number is 55</string>
                                        <color key="textColor" systemColor="labelColor"/>
                                        <fontDescription key="fontDescription" type="system" pointSize="14"/>
                                        <textInputTraits key="textInputTraits" autocapitalizationType="sentences"/>
                                    </textView>
                                </subviews>
                                <viewLayoutGuide key="contentLayoutGuide" id="OL0-qz-wTg"/>
                                <viewLayoutGuide key="frameLayoutGuide" id="PtN-8w-l62"/>
                            </scrollView>
                        </subviews>
                        <viewLayoutGuide key="safeArea" id="KQV-Xq-SRh"/>
                        <color key="backgroundColor" systemColor="systemBackgroundColor"/>
                    </view>
                </viewController>
                <placeholder placeholderIdentifier="IBFirstResponder" id="Uvg-h7-5gv" userLabel="First Responder" customClass="UIResponder" sceneMemberID="firstResponder"/>
            </objects>
            <point key="canvasLocation" x="12167" y="2095"/>
        </scene>
        <!--View Controller-->
        <scene sceneID="Hcl-sv-PgY">
            <objects>
                <viewController id="ZE8-5c-r3T" sceneMemberID="viewController">
                    <view key="view" contentMode="scaleToFill" id="u6u-hK-W7u">
                        <rect key="frame" x="0.0" y="0.0" width="375" height="667"/>
                        <autoresizingMask key="autoresizingMask" widthSizable="YES" heightSizable="YES"/>
                        <subviews>
                            <button opaque="NO" contentMode="scaleToFill" fixedFrame="YES" contentHorizontalAlignment="center" contentVerticalAlignment="center" buttonType="system" lineBreakMode="middleTruncation" translatesAutoresizingMaskIntoConstraints="NO" id="ZtG-MC-WOn">
                                <rect key="frame" x="16" y="9" width="39" height="35"/>
                                <autoresizingMask key="autoresizingMask" flexibleMaxX="YES" flexibleMaxY="YES"/>
                                <state key="normal" title="Button"/>
                                <buttonConfiguration key="configuration" style="plain" title="←"/>
                            </button>
                            <scrollView clipsSubviews="YES" multipleTouchEnabled="YES" contentMode="scaleToFill" fixedFrame="YES" translatesAutoresizingMaskIntoConstraints="NO" id="DQN-fF-6i9">
                                <rect key="frame" x="0.0" y="52" width="375" height="615"/>
                                <autoresizingMask key="autoresizingMask" flexibleMaxX="YES" flexibleMaxY="YES"/>
                                <subviews>
                                    <textView clipsSubviews="YES" multipleTouchEnabled="YES" contentMode="scaleToFill" fixedFrame="YES" editable="NO" textAlignment="natural" translatesAutoresizingMaskIntoConstraints="NO" id="Zk6-M2-fyT">
                                        <rect key="frame" x="0.0" y="0.0" width="375" height="615"/>
                                        <autoresizingMask key="autoresizingMask" flexibleMaxX="YES" flexibleMaxY="YES"/>
                                        <color key="backgroundColor" systemColor="systemBackgroundColor"/>
                                        <string key="text">#include&lt; stdio.h &gt;
#include&lt; conio.h &gt;
void main()
{
int num, i, flag=0;
clrscr();
printf("Enter any number\n");
scanf("%d",&amp; num);
for(i=2; i &lt; =(num-1); i++)
{
if(num%i==0)
{
flag=1;
break;
}
}
if(flag==1)
{
printf("\n The number %d is not prime", num);
else
{
printf("\n The number %d is prime", num);
}
getch();
}

&gt;b&gt;Output:
Enter any number
21
The number 21 is not prime</string>
                                        <color key="textColor" systemColor="labelColor"/>
                                        <fontDescription key="fontDescription" type="system" pointSize="14"/>
                                        <textInputTraits key="textInputTraits" autocapitalizationType="sentences"/>
                                    </textView>
                                </subviews>
                                <viewLayoutGuide key="contentLayoutGuide" id="5ce-Io-Rew"/>
                                <viewLayoutGuide key="frameLayoutGuide" id="3XQ-4v-oe3"/>
                            </scrollView>
                        </subviews>
                        <viewLayoutGuide key="safeArea" id="KaW-Ww-wxW"/>
                        <color key="backgroundColor" systemColor="systemBackgroundColor"/>
                    </view>
                </viewController>
                <placeholder placeholderIdentifier="IBFirstResponder" id="8q3-ZE-j58" userLabel="First Responder" customClass="UIResponder" sceneMemberID="firstResponder"/>
            </objects>
            <point key="canvasLocation" x="12825" y="2095"/>
        </scene>
        <!--View Controller-->
        <scene sceneID="lbY-Hd-uEc">
            <objects>
                <viewController id="F5d-jz-cW5" sceneMemberID="viewController">
                    <view key="view" contentMode="scaleToFill" id="XnY-FZ-Hyk">
                        <rect key="frame" x="0.0" y="0.0" width="375" height="667"/>
                        <autoresizingMask key="autoresizingMask" widthSizable="YES" heightSizable="YES"/>
                        <subviews>
                            <button opaque="NO" contentMode="scaleToFill" fixedFrame="YES" contentHorizontalAlignment="center" contentVerticalAlignment="center" buttonType="system" lineBreakMode="middleTruncation" translatesAutoresizingMaskIntoConstraints="NO" id="pvV-r2-gN2">
                                <rect key="frame" x="16" y="9" width="39" height="35"/>
                                <autoresizingMask key="autoresizingMask" flexibleMaxX="YES" flexibleMaxY="YES"/>
                                <state key="normal" title="Button"/>
                                <buttonConfiguration key="configuration" style="plain" title="←"/>
                            </button>
                            <scrollView clipsSubviews="YES" multipleTouchEnabled="YES" contentMode="scaleToFill" fixedFrame="YES" translatesAutoresizingMaskIntoConstraints="NO" id="cgi-t6-KlC">
                                <rect key="frame" x="0.0" y="52" width="375" height="615"/>
                                <autoresizingMask key="autoresizingMask" flexibleMaxX="YES" flexibleMaxY="YES"/>
                                <subviews>
                                    <textView clipsSubviews="YES" multipleTouchEnabled="YES" contentMode="scaleToFill" fixedFrame="YES" editable="NO" textAlignment="natural" translatesAutoresizingMaskIntoConstraints="NO" id="Yl6-sl-gtI">
                                        <rect key="frame" x="0.0" y="0.0" width="375" height="615"/>
                                        <autoresizingMask key="autoresizingMask" flexibleMaxX="YES" flexibleMaxY="YES"/>
                                        <color key="backgroundColor" systemColor="systemBackgroundColor"/>
                                        <string key="text">#include&lt; stdio.h &gt;
#include&lt; conio.h &gt;
void main()
{
int i, j, flag=0;
clrscr();
printf(“Prime numbers between 50 to 100 are as follows:\n”);
for(i=50 ; i &lt;=100 ; i++)
{
flag=0;
for(j=2 ; j &lt; i ; j++)
{
if ( i % j == 0)
flag=1;
break;
}
}
if(flag == 0)
{
printf(“%d\t”, i);
}
}
getch();
}

Output:
Prime numbers between 50 to 100 are as follows:
53 59 61 67 71 73 79 83 89 97</string>
                                        <color key="textColor" systemColor="labelColor"/>
                                        <fontDescription key="fontDescription" type="system" pointSize="14"/>
                                        <textInputTraits key="textInputTraits" autocapitalizationType="sentences"/>
                                    </textView>
                                </subviews>
                                <viewLayoutGuide key="contentLayoutGuide" id="tgu-3E-D2z"/>
                                <viewLayoutGuide key="frameLayoutGuide" id="OP9-lF-AMv"/>
                            </scrollView>
                        </subviews>
                        <viewLayoutGuide key="safeArea" id="Z1i-Ww-uT4"/>
                        <color key="backgroundColor" systemColor="systemBackgroundColor"/>
                    </view>
                </viewController>
                <placeholder placeholderIdentifier="IBFirstResponder" id="XKg-QN-rgA" userLabel="First Responder" customClass="UIResponder" sceneMemberID="firstResponder"/>
            </objects>
            <point key="canvasLocation" x="13510" y="2095"/>
        </scene>
        <!--View Controller-->
        <scene sceneID="low-EQ-YKY">
            <objects>
                <viewController id="DjF-ZB-ELe" sceneMemberID="viewController">
                    <view key="view" contentMode="scaleToFill" id="IxQ-Vv-Z6C">
                        <rect key="frame" x="0.0" y="0.0" width="375" height="667"/>
                        <autoresizingMask key="autoresizingMask" widthSizable="YES" heightSizable="YES"/>
                        <subviews>
                            <button opaque="NO" contentMode="scaleToFill" fixedFrame="YES" contentHorizontalAlignment="center" contentVerticalAlignment="center" buttonType="system" lineBreakMode="middleTruncation" translatesAutoresizingMaskIntoConstraints="NO" id="Ulv-Xg-Vrw">
                                <rect key="frame" x="16" y="9" width="39" height="35"/>
                                <autoresizingMask key="autoresizingMask" flexibleMaxX="YES" flexibleMaxY="YES"/>
                                <state key="normal" title="Button"/>
                                <buttonConfiguration key="configuration" style="plain" title="←"/>
                            </button>
                            <scrollView clipsSubviews="YES" multipleTouchEnabled="YES" contentMode="scaleToFill" fixedFrame="YES" translatesAutoresizingMaskIntoConstraints="NO" id="kfN-UE-yjR">
                                <rect key="frame" x="0.0" y="52" width="375" height="615"/>
                                <autoresizingMask key="autoresizingMask" flexibleMaxX="YES" flexibleMaxY="YES"/>
                                <subviews>
                                    <textView clipsSubviews="YES" multipleTouchEnabled="YES" contentMode="scaleToFill" fixedFrame="YES" editable="NO" textAlignment="natural" translatesAutoresizingMaskIntoConstraints="NO" id="yOM-UQ-vjU">
                                        <rect key="frame" x="0.0" y="0.0" width="375" height="615"/>
                                        <autoresizingMask key="autoresizingMask" flexibleMaxX="YES" flexibleMaxY="YES"/>
                                        <color key="backgroundColor" systemColor="systemBackgroundColor"/>
                                        <mutableString key="text">#include&lt; stdio.h &gt;
#include&lt; conio.h &gt;
// function prototype, also called function declaration
float cube ( float x );
// main function, program starts from here
void main( )
{
float x, c ;
printf ( "\n Enter any number for finding cube \n");
scanf ( "%f", &amp;x ) ;
// function call
c = cube ( x ) ;
printf ( "\n Cube of the given number %f is %f", x, c );
getch();
}
// function definition
float cube ( float x )
{
float y ;
y = x * x * x;
return ( y ) ;
}

Output:
Enter any number for finding cube
2
Cube of the given number 2 is 8</mutableString>
                                        <color key="textColor" systemColor="labelColor"/>
                                        <fontDescription key="fontDescription" type="system" pointSize="14"/>
                                        <textInputTraits key="textInputTraits" autocapitalizationType="sentences"/>
                                    </textView>
                                </subviews>
                                <viewLayoutGuide key="contentLayoutGuide" id="Jcl-OF-i5H"/>
                                <viewLayoutGuide key="frameLayoutGuide" id="sps-qV-ksy"/>
                            </scrollView>
                        </subviews>
                        <viewLayoutGuide key="safeArea" id="sQb-HI-q2s"/>
                        <color key="backgroundColor" systemColor="systemBackgroundColor"/>
                    </view>
                </viewController>
                <placeholder placeholderIdentifier="IBFirstResponder" id="GBK-zM-uQb" userLabel="First Responder" customClass="UIResponder" sceneMemberID="firstResponder"/>
            </objects>
            <point key="canvasLocation" x="2084" y="2822"/>
        </scene>
        <!--View Controller-->
        <scene sceneID="4he-tN-dqD">
            <objects>
                <viewController id="GOV-Br-0ht" sceneMemberID="viewController">
                    <view key="view" contentMode="scaleToFill" id="StU-Mx-lkb">
                        <rect key="frame" x="0.0" y="0.0" width="375" height="667"/>
                        <autoresizingMask key="autoresizingMask" widthSizable="YES" heightSizable="YES"/>
                        <subviews>
                            <button opaque="NO" contentMode="scaleToFill" fixedFrame="YES" contentHorizontalAlignment="center" contentVerticalAlignment="center" buttonType="system" lineBreakMode="middleTruncation" translatesAutoresizingMaskIntoConstraints="NO" id="QLO-ey-ZnF">
                                <rect key="frame" x="16" y="9" width="39" height="35"/>
                                <autoresizingMask key="autoresizingMask" flexibleMaxX="YES" flexibleMaxY="YES"/>
                                <state key="normal" title="Button"/>
                                <buttonConfiguration key="configuration" style="plain" title="←"/>
                            </button>
                            <scrollView clipsSubviews="YES" multipleTouchEnabled="YES" contentMode="scaleToFill" fixedFrame="YES" translatesAutoresizingMaskIntoConstraints="NO" id="hG6-Oz-fo7">
                                <rect key="frame" x="0.0" y="52" width="375" height="615"/>
                                <autoresizingMask key="autoresizingMask" flexibleMaxX="YES" flexibleMaxY="YES"/>
                                <subviews>
                                    <textView clipsSubviews="YES" multipleTouchEnabled="YES" contentMode="scaleToFill" fixedFrame="YES" editable="NO" textAlignment="natural" translatesAutoresizingMaskIntoConstraints="NO" id="fLm-uH-Zkq">
                                        <rect key="frame" x="0.0" y="0.0" width="375" height="615"/>
                                        <autoresizingMask key="autoresizingMask" flexibleMaxX="YES" flexibleMaxY="YES"/>
                                        <color key="backgroundColor" systemColor="systemBackgroundColor"/>
                                        <string key="text">#include&lt; stdio.h &gt;
#include&lt; conio.h &gt;
void main ()
{
int a,b,c;
int sum (int ,int);
/only mentioning data type is also allowed in function prototype/
printf(“\n Enter two number ”);
scanf(“%d %d ”&amp; a, &amp;b);
c=sum (a, b);
printf(“\n Addition is =%d ”,c);
}
int sum (int a, int b)
{
int c;
c=a + b;
return c;
/*returning ‘c’ value which is of integer data type so data type of sum() is integer */
}

Output:
Enter two number
21
31
Addition is =52</string>
                                        <color key="textColor" systemColor="labelColor"/>
                                        <fontDescription key="fontDescription" type="system" pointSize="14"/>
                                        <textInputTraits key="textInputTraits" autocapitalizationType="sentences"/>
                                    </textView>
                                </subviews>
                                <viewLayoutGuide key="contentLayoutGuide" id="bRf-LN-wGF"/>
                                <viewLayoutGuide key="frameLayoutGuide" id="6qA-cT-6My"/>
                            </scrollView>
                        </subviews>
                        <viewLayoutGuide key="safeArea" id="fy7-x1-fSt"/>
                        <color key="backgroundColor" systemColor="systemBackgroundColor"/>
                    </view>
                </viewController>
                <placeholder placeholderIdentifier="IBFirstResponder" id="ZAe-0g-b2u" userLabel="First Responder" customClass="UIResponder" sceneMemberID="firstResponder"/>
            </objects>
            <point key="canvasLocation" x="2737" y="2822"/>
        </scene>
        <!--View Controller-->
        <scene sceneID="fN8-lS-PBv">
            <objects>
                <viewController id="lUj-Iz-c30" sceneMemberID="viewController">
                    <view key="view" contentMode="scaleToFill" id="UFw-A9-Lfz">
                        <rect key="frame" x="0.0" y="0.0" width="375" height="667"/>
                        <autoresizingMask key="autoresizingMask" widthSizable="YES" heightSizable="YES"/>
                        <subviews>
                            <button opaque="NO" contentMode="scaleToFill" fixedFrame="YES" contentHorizontalAlignment="center" contentVerticalAlignment="center" buttonType="system" lineBreakMode="middleTruncation" translatesAutoresizingMaskIntoConstraints="NO" id="sKB-Or-Xxr">
                                <rect key="frame" x="16" y="9" width="39" height="35"/>
                                <autoresizingMask key="autoresizingMask" flexibleMaxX="YES" flexibleMaxY="YES"/>
                                <state key="normal" title="Button"/>
                                <buttonConfiguration key="configuration" style="plain" title="←"/>
                            </button>
                            <scrollView clipsSubviews="YES" multipleTouchEnabled="YES" contentMode="scaleToFill" fixedFrame="YES" translatesAutoresizingMaskIntoConstraints="NO" id="K3Z-kj-P1I">
                                <rect key="frame" x="0.0" y="52" width="375" height="615"/>
                                <autoresizingMask key="autoresizingMask" flexibleMaxX="YES" flexibleMaxY="YES"/>
                                <subviews>
                                    <textView clipsSubviews="YES" multipleTouchEnabled="YES" contentMode="scaleToFill" fixedFrame="YES" editable="NO" textAlignment="natural" translatesAutoresizingMaskIntoConstraints="NO" id="seR-uC-n7g">
                                        <rect key="frame" x="0.0" y="0.0" width="375" height="615"/>
                                        <autoresizingMask key="autoresizingMask" flexibleMaxX="YES" flexibleMaxY="YES"/>
                                        <color key="backgroundColor" systemColor="systemBackgroundColor"/>
                                        <string key="text">#include&lt; stdio.h &gt;
#include&lt; conio.h &gt;
void main ()
{
int a,b,c;
void sum (int ,int);
/only mentioning data type is also allowed in function prototype/
printf(“\n Enter two number ”);
scanf(“%d %d ”&amp; a, &amp;b);
sum (a, b);
getch();
}
void sum (int a, int b)
{
int c;
c=a + b;
printf(“\n Addition is =%d ”,c);
}

Output:
Enter two number
21
31
Addition is =52</string>
                                        <color key="textColor" systemColor="labelColor"/>
                                        <fontDescription key="fontDescription" type="system" pointSize="14"/>
                                        <textInputTraits key="textInputTraits" autocapitalizationType="sentences"/>
                                    </textView>
                                </subviews>
                                <viewLayoutGuide key="contentLayoutGuide" id="dBR-4n-oug"/>
                                <viewLayoutGuide key="frameLayoutGuide" id="cg8-zU-6Tn"/>
                            </scrollView>
                        </subviews>
                        <viewLayoutGuide key="safeArea" id="Ica-W7-XcZ"/>
                        <color key="backgroundColor" systemColor="systemBackgroundColor"/>
                    </view>
                </viewController>
                <placeholder placeholderIdentifier="IBFirstResponder" id="z9S-sP-PFj" userLabel="First Responder" customClass="UIResponder" sceneMemberID="firstResponder"/>
            </objects>
            <point key="canvasLocation" x="3388" y="2822"/>
        </scene>
        <!--View Controller-->
        <scene sceneID="LNV-JR-IQi">
            <objects>
                <viewController id="gtI-0k-E5z" sceneMemberID="viewController">
                    <view key="view" contentMode="scaleToFill" id="IGY-h3-bpK">
                        <rect key="frame" x="0.0" y="0.0" width="375" height="667"/>
                        <autoresizingMask key="autoresizingMask" widthSizable="YES" heightSizable="YES"/>
                        <subviews>
                            <button opaque="NO" contentMode="scaleToFill" fixedFrame="YES" contentHorizontalAlignment="center" contentVerticalAlignment="center" buttonType="system" lineBreakMode="middleTruncation" translatesAutoresizingMaskIntoConstraints="NO" id="fEt-z5-wlK">
                                <rect key="frame" x="16" y="9" width="39" height="35"/>
                                <autoresizingMask key="autoresizingMask" flexibleMaxX="YES" flexibleMaxY="YES"/>
                                <state key="normal" title="Button"/>
                                <buttonConfiguration key="configuration" style="plain" title="←"/>
                            </button>
                            <scrollView clipsSubviews="YES" multipleTouchEnabled="YES" contentMode="scaleToFill" fixedFrame="YES" translatesAutoresizingMaskIntoConstraints="NO" id="2p2-Gi-tmS">
                                <rect key="frame" x="0.0" y="52" width="375" height="615"/>
                                <autoresizingMask key="autoresizingMask" flexibleMaxX="YES" flexibleMaxY="YES"/>
                                <subviews>
                                    <textView clipsSubviews="YES" multipleTouchEnabled="YES" contentMode="scaleToFill" fixedFrame="YES" editable="NO" textAlignment="natural" translatesAutoresizingMaskIntoConstraints="NO" id="11W-VY-q5d">
                                        <rect key="frame" x="0.0" y="0.0" width="375" height="615"/>
                                        <autoresizingMask key="autoresizingMask" flexibleMaxX="YES" flexibleMaxY="YES"/>
                                        <color key="backgroundColor" systemColor="systemBackgroundColor"/>
                                        <string key="text">#include &lt; stdio.h &gt;
#include&lt; conio.h &gt;
void main ()
{
int c;
int sum ();
c= sum ();
printf(“\n Addition is =%d ”,c);
getch();
}
int sum ()
{
int a, b;
printf(“\n Enter two number ”);
scanf(“%d %d ”&amp; a, &amp;b);
c=a + b;
return c;
}

Output:
Enter two number
21
31
Addition is =52</string>
                                        <color key="textColor" systemColor="labelColor"/>
                                        <fontDescription key="fontDescription" type="system" pointSize="14"/>
                                        <textInputTraits key="textInputTraits" autocapitalizationType="sentences"/>
                                    </textView>
                                </subviews>
                                <viewLayoutGuide key="contentLayoutGuide" id="CJs-tB-6RV"/>
                                <viewLayoutGuide key="frameLayoutGuide" id="nTb-WN-zFa"/>
                            </scrollView>
                        </subviews>
                        <viewLayoutGuide key="safeArea" id="ROx-UD-pcI"/>
                        <color key="backgroundColor" systemColor="systemBackgroundColor"/>
                    </view>
                </viewController>
                <placeholder placeholderIdentifier="IBFirstResponder" id="qrX-dV-WSD" userLabel="First Responder" customClass="UIResponder" sceneMemberID="firstResponder"/>
            </objects>
            <point key="canvasLocation" x="4020" y="2822"/>
        </scene>
        <!--View Controller-->
        <scene sceneID="wIn-Pk-P4V">
            <objects>
                <viewController id="cY0-sx-Mfc" sceneMemberID="viewController">
                    <view key="view" contentMode="scaleToFill" id="vEz-RH-9Q1">
                        <rect key="frame" x="0.0" y="0.0" width="375" height="667"/>
                        <autoresizingMask key="autoresizingMask" widthSizable="YES" heightSizable="YES"/>
                        <subviews>
                            <button opaque="NO" contentMode="scaleToFill" fixedFrame="YES" contentHorizontalAlignment="center" contentVerticalAlignment="center" buttonType="system" lineBreakMode="middleTruncation" translatesAutoresizingMaskIntoConstraints="NO" id="9xv-tc-keK">
                                <rect key="frame" x="16" y="9" width="39" height="35"/>
                                <autoresizingMask key="autoresizingMask" flexibleMaxX="YES" flexibleMaxY="YES"/>
                                <state key="normal" title="Button"/>
                                <buttonConfiguration key="configuration" style="plain" title="←"/>
                            </button>
                            <scrollView clipsSubviews="YES" multipleTouchEnabled="YES" contentMode="scaleToFill" fixedFrame="YES" translatesAutoresizingMaskIntoConstraints="NO" id="Yn9-Mo-qS7">
                                <rect key="frame" x="0.0" y="52" width="375" height="615"/>
                                <autoresizingMask key="autoresizingMask" flexibleMaxX="YES" flexibleMaxY="YES"/>
                                <subviews>
                                    <textView clipsSubviews="YES" multipleTouchEnabled="YES" contentMode="scaleToFill" fixedFrame="YES" editable="NO" textAlignment="natural" translatesAutoresizingMaskIntoConstraints="NO" id="1ef-GE-7o6">
                                        <rect key="frame" x="0.0" y="0.0" width="375" height="615"/>
                                        <autoresizingMask key="autoresizingMask" flexibleMaxX="YES" flexibleMaxY="YES"/>
                                        <color key="backgroundColor" systemColor="systemBackgroundColor"/>
                                        <string key="text">#include&lt; stdio.h &gt;
#include&lt; conio.h &gt;
void main ()
{
int c;
void sum (void);
sum ();
getch();
}
void sum (void)
{
int a, b;
printf(“\n Enter two number ”);
scanf(“%d %d ”&amp; a, &amp;b);
c=a + b;
printf(“\n Addition is =%d ”,c);
}

Output:
Enter two number
21
31
Addition is =52</string>
                                        <color key="textColor" systemColor="labelColor"/>
                                        <fontDescription key="fontDescription" type="system" pointSize="14"/>
                                        <textInputTraits key="textInputTraits" autocapitalizationType="sentences"/>
                                    </textView>
                                </subviews>
                                <viewLayoutGuide key="contentLayoutGuide" id="9fm-Po-HK3"/>
                                <viewLayoutGuide key="frameLayoutGuide" id="hAH-pS-ELV"/>
                            </scrollView>
                        </subviews>
                        <viewLayoutGuide key="safeArea" id="1K7-bH-Jrk"/>
                        <color key="backgroundColor" systemColor="systemBackgroundColor"/>
                    </view>
                </viewController>
                <placeholder placeholderIdentifier="IBFirstResponder" id="9nV-Dj-PCz" userLabel="First Responder" customClass="UIResponder" sceneMemberID="firstResponder"/>
            </objects>
            <point key="canvasLocation" x="4673" y="2822"/>
        </scene>
        <!--View Controller-->
        <scene sceneID="bwk-Lq-PYi">
            <objects>
                <viewController id="y83-J8-DQj" sceneMemberID="viewController">
                    <view key="view" contentMode="scaleToFill" id="sdq-hN-unI">
                        <rect key="frame" x="0.0" y="0.0" width="375" height="667"/>
                        <autoresizingMask key="autoresizingMask" widthSizable="YES" heightSizable="YES"/>
                        <subviews>
                            <button opaque="NO" contentMode="scaleToFill" fixedFrame="YES" contentHorizontalAlignment="center" contentVerticalAlignment="center" buttonType="system" lineBreakMode="middleTruncation" translatesAutoresizingMaskIntoConstraints="NO" id="6wP-ET-0qT">
                                <rect key="frame" x="16" y="9" width="39" height="35"/>
                                <autoresizingMask key="autoresizingMask" flexibleMaxX="YES" flexibleMaxY="YES"/>
                                <state key="normal" title="Button"/>
                                <buttonConfiguration key="configuration" style="plain" title="←"/>
                            </button>
                            <scrollView clipsSubviews="YES" multipleTouchEnabled="YES" contentMode="scaleToFill" fixedFrame="YES" translatesAutoresizingMaskIntoConstraints="NO" id="U9X-OD-aal">
                                <rect key="frame" x="0.0" y="52" width="375" height="615"/>
                                <autoresizingMask key="autoresizingMask" flexibleMaxX="YES" flexibleMaxY="YES"/>
                                <subviews>
                                    <textView clipsSubviews="YES" multipleTouchEnabled="YES" contentMode="scaleToFill" fixedFrame="YES" editable="NO" textAlignment="natural" translatesAutoresizingMaskIntoConstraints="NO" id="tsT-9U-Vco">
                                        <rect key="frame" x="0.0" y="0.0" width="375" height="615"/>
                                        <autoresizingMask key="autoresizingMask" flexibleMaxX="YES" flexibleMaxY="YES"/>
                                        <color key="backgroundColor" systemColor="systemBackgroundColor"/>
                                        <mutableString key="text">#include&lt; stdio.h &gt;
#include&lt; conio.h &gt;
void swap(int x, int y)
{
int t;
t=x;
x=y;
y=t;
}
void main()
{
int a, b;
printf(“\n Enter the first number a=”);
scanf(“%d”, &amp;a);
printf(“\n Enter the second number b=”);
scanf(“%d ”,&amp;b);
swap(a , b); //actual swapping is not done in call by value
printf(“\n After swapping value of a = %d”, a);
printf(“\n After swapping value of b = %d ”, b);
getch();
}

Output:
Enter the first number a= 10
Enter the second number b= 20
After swapping value of a = 10
After swapping value of b = 20

Explanation:
In call by value when a and b argument is passed to function swap, that values are copied to x and y. When we made changes on x and y that is only visible into swap function and not reflected back into a and b in main function. Old values that is a and b remains same only x and y values get swapped. So output after swapping remains same in the main function.</mutableString>
                                        <color key="textColor" systemColor="labelColor"/>
                                        <fontDescription key="fontDescription" type="system" pointSize="14"/>
                                        <textInputTraits key="textInputTraits" autocapitalizationType="sentences"/>
                                    </textView>
                                </subviews>
                                <viewLayoutGuide key="contentLayoutGuide" id="QZI-e2-aZJ"/>
                                <viewLayoutGuide key="frameLayoutGuide" id="emX-xy-OC6"/>
                            </scrollView>
                        </subviews>
                        <viewLayoutGuide key="safeArea" id="x4X-hn-BNS"/>
                        <color key="backgroundColor" systemColor="systemBackgroundColor"/>
                    </view>
                </viewController>
                <placeholder placeholderIdentifier="IBFirstResponder" id="htN-Sh-efZ" userLabel="First Responder" customClass="UIResponder" sceneMemberID="firstResponder"/>
            </objects>
            <point key="canvasLocation" x="5374" y="2822"/>
        </scene>
        <!--View Controller-->
        <scene sceneID="Ge7-2D-qhL">
            <objects>
                <viewController id="VSx-aQ-Qz7" sceneMemberID="viewController">
                    <view key="view" contentMode="scaleToFill" id="mZ2-8H-L7a">
                        <rect key="frame" x="0.0" y="0.0" width="375" height="667"/>
                        <autoresizingMask key="autoresizingMask" widthSizable="YES" heightSizable="YES"/>
                        <subviews>
                            <button opaque="NO" contentMode="scaleToFill" fixedFrame="YES" contentHorizontalAlignment="center" contentVerticalAlignment="center" buttonType="system" lineBreakMode="middleTruncation" translatesAutoresizingMaskIntoConstraints="NO" id="DE8-rW-YKa">
                                <rect key="frame" x="16" y="9" width="39" height="35"/>
                                <autoresizingMask key="autoresizingMask" flexibleMaxX="YES" flexibleMaxY="YES"/>
                                <state key="normal" title="Button"/>
                                <buttonConfiguration key="configuration" style="plain" title="←"/>
                            </button>
                            <scrollView clipsSubviews="YES" multipleTouchEnabled="YES" contentMode="scaleToFill" fixedFrame="YES" translatesAutoresizingMaskIntoConstraints="NO" id="HZX-ji-d9h">
                                <rect key="frame" x="0.0" y="52" width="375" height="615"/>
                                <autoresizingMask key="autoresizingMask" flexibleMaxX="YES" flexibleMaxY="YES"/>
                                <subviews>
                                    <textView clipsSubviews="YES" multipleTouchEnabled="YES" contentMode="scaleToFill" fixedFrame="YES" editable="NO" textAlignment="natural" translatesAutoresizingMaskIntoConstraints="NO" id="cOI-CD-84I">
                                        <rect key="frame" x="0.0" y="0.0" width="375" height="615"/>
                                        <autoresizingMask key="autoresizingMask" flexibleMaxX="YES" flexibleMaxY="YES"/>
                                        <color key="backgroundColor" systemColor="systemBackgroundColor"/>
                                        <mutableString key="text">#include&lt; stdio.h&gt;
#include&lt; conio.h&gt;
void swap(int * x, int *y)
{
int t;
t = *x;
*x = *y;
*y = t;
}
void main()
{
int a, b;
printf(“\n Enter the first number a=”);
scanf(“%d”, &amp;a);
printf(“\n Enter the second number b=”);
scanf(“%d ”,&amp;b);
swap(&amp;a , &amp;b); //actual swapping is done in call by reference
printf(“\n After swapping value of a = %d”, a);
printf(“\n After swapping value of b = %d ”, b);
getch();
}

Output:
Enter the first number a= 10
Enter the second number b= 20
After swapping value of a = 20
After swapping value of b = 10

Explanation:
In call by reference, address of variable a and b is passed to the function swap. When we swap values in swap function is reflected in old values a and b. So after swapping a becomes 20 and b becomes 10 in main function.</mutableString>
                                        <color key="textColor" systemColor="labelColor"/>
                                        <fontDescription key="fontDescription" type="system" pointSize="14"/>
                                        <textInputTraits key="textInputTraits" autocapitalizationType="sentences"/>
                                    </textView>
                                </subviews>
                                <viewLayoutGuide key="contentLayoutGuide" id="8By-TG-g3q"/>
                                <viewLayoutGuide key="frameLayoutGuide" id="8It-dd-Sfx"/>
                            </scrollView>
                        </subviews>
                        <viewLayoutGuide key="safeArea" id="Asm-DY-WAc"/>
                        <color key="backgroundColor" systemColor="systemBackgroundColor"/>
                    </view>
                </viewController>
                <placeholder placeholderIdentifier="IBFirstResponder" id="Ah1-d8-6um" userLabel="First Responder" customClass="UIResponder" sceneMemberID="firstResponder"/>
            </objects>
            <point key="canvasLocation" x="6065" y="2822"/>
        </scene>
        <!--View Controller-->
        <scene sceneID="smR-1n-jQO">
            <objects>
                <viewController id="PfC-Ir-iiv" sceneMemberID="viewController">
                    <view key="view" contentMode="scaleToFill" id="fnt-nV-sPR">
                        <rect key="frame" x="0.0" y="0.0" width="375" height="667"/>
                        <autoresizingMask key="autoresizingMask" widthSizable="YES" heightSizable="YES"/>
                        <subviews>
                            <button opaque="NO" contentMode="scaleToFill" fixedFrame="YES" contentHorizontalAlignment="center" contentVerticalAlignment="center" buttonType="system" lineBreakMode="middleTruncation" translatesAutoresizingMaskIntoConstraints="NO" id="PYS-gV-gah">
                                <rect key="frame" x="16" y="9" width="39" height="35"/>
                                <autoresizingMask key="autoresizingMask" flexibleMaxX="YES" flexibleMaxY="YES"/>
                                <state key="normal" title="Button"/>
                                <buttonConfiguration key="configuration" style="plain" title="←"/>
                            </button>
                            <scrollView clipsSubviews="YES" multipleTouchEnabled="YES" contentMode="scaleToFill" fixedFrame="YES" translatesAutoresizingMaskIntoConstraints="NO" id="5jf-3q-yNZ">
                                <rect key="frame" x="0.0" y="52" width="375" height="615"/>
                                <autoresizingMask key="autoresizingMask" flexibleMaxX="YES" flexibleMaxY="YES"/>
                                <subviews>
                                    <textView clipsSubviews="YES" multipleTouchEnabled="YES" contentMode="scaleToFill" fixedFrame="YES" editable="NO" textAlignment="natural" translatesAutoresizingMaskIntoConstraints="NO" id="eQk-fA-fBy">
                                        <rect key="frame" x="0.0" y="0.0" width="375" height="615"/>
                                        <autoresizingMask key="autoresizingMask" flexibleMaxX="YES" flexibleMaxY="YES"/>
                                        <color key="backgroundColor" systemColor="systemBackgroundColor"/>
                                        <string key="text">#include&lt; stdio.h&gt;
#include&lt; conio.h&gt;
long factorial(int);
void main()
{
int n;
long f;
printf("Enter an integer to find its factorial\n");
scanf("%d", &amp;n);
if (n &lt; 0)
printf("Factorial of negative integers isn't defined.\n");
else
{
f = factorial(n);
printf("%d! = %ld\n", n, f);
}
getch();
}
long factorial(int n)
{
if (n == 0)
return 1;
else
return(n * factorial(n-1));
}

Output:
Enter an integer to find its factorial
4
4! = 24</string>
                                        <color key="textColor" systemColor="labelColor"/>
                                        <fontDescription key="fontDescription" type="system" pointSize="14"/>
                                        <textInputTraits key="textInputTraits" autocapitalizationType="sentences"/>
                                    </textView>
                                </subviews>
                                <viewLayoutGuide key="contentLayoutGuide" id="eaj-FU-A8s"/>
                                <viewLayoutGuide key="frameLayoutGuide" id="CnX-Vg-E2S"/>
                            </scrollView>
                        </subviews>
                        <viewLayoutGuide key="safeArea" id="hBd-lC-u9i"/>
                        <color key="backgroundColor" systemColor="systemBackgroundColor"/>
                    </view>
                </viewController>
                <placeholder placeholderIdentifier="IBFirstResponder" id="J10-2k-eUU" userLabel="First Responder" customClass="UIResponder" sceneMemberID="firstResponder"/>
            </objects>
            <point key="canvasLocation" x="6718" y="2822"/>
        </scene>
        <!--View Controller-->
        <scene sceneID="zUb-Tu-XV9">
            <objects>
                <viewController id="wxN-5P-abL" sceneMemberID="viewController">
                    <view key="view" contentMode="scaleToFill" id="czZ-hT-mBZ">
                        <rect key="frame" x="0.0" y="0.0" width="375" height="667"/>
                        <autoresizingMask key="autoresizingMask" widthSizable="YES" heightSizable="YES"/>
                        <subviews>
                            <button opaque="NO" contentMode="scaleToFill" fixedFrame="YES" contentHorizontalAlignment="center" contentVerticalAlignment="center" buttonType="system" lineBreakMode="middleTruncation" translatesAutoresizingMaskIntoConstraints="NO" id="Ggq-1c-yGu">
                                <rect key="frame" x="16" y="9" width="39" height="35"/>
                                <autoresizingMask key="autoresizingMask" flexibleMaxX="YES" flexibleMaxY="YES"/>
                                <state key="normal" title="Button"/>
                                <buttonConfiguration key="configuration" style="plain" title="←"/>
                            </button>
                            <scrollView clipsSubviews="YES" multipleTouchEnabled="YES" contentMode="scaleToFill" fixedFrame="YES" translatesAutoresizingMaskIntoConstraints="NO" id="TEc-ih-UTL">
                                <rect key="frame" x="0.0" y="52" width="375" height="615"/>
                                <autoresizingMask key="autoresizingMask" flexibleMaxX="YES" flexibleMaxY="YES"/>
                                <subviews>
                                    <textView clipsSubviews="YES" multipleTouchEnabled="YES" contentMode="scaleToFill" fixedFrame="YES" editable="NO" textAlignment="natural" translatesAutoresizingMaskIntoConstraints="NO" id="ulV-4P-X0u">
                                        <rect key="frame" x="0.0" y="0.0" width="375" height="615"/>
                                        <autoresizingMask key="autoresizingMask" flexibleMaxX="YES" flexibleMaxY="YES"/>
                                        <color key="backgroundColor" systemColor="systemBackgroundColor"/>
                                        <string key="text">#include &lt; stdio.h &gt;
#include&lt; conio.h &gt;
long factorial(int);
void main()
{
int number;
long fact = 1;
printf("Enter a number to calculate its factorial\n");
scanf("%d", &amp;number);
printf("%d! = %ld\n", number, factorial(number));
getch();
}
long factorial(int n)
{
int c;
long fact = 1;
for (c = 1; c &lt;= n; c++)
{
fact = fact * c;
}
return fact;
}

Output:
Enter a number to calculate its factorial
4
4! = 24</string>
                                        <color key="textColor" systemColor="labelColor"/>
                                        <fontDescription key="fontDescription" type="system" pointSize="14"/>
                                        <textInputTraits key="textInputTraits" autocapitalizationType="sentences"/>
                                    </textView>
                                </subviews>
                                <viewLayoutGuide key="contentLayoutGuide" id="kBh-VH-W5P"/>
                                <viewLayoutGuide key="frameLayoutGuide" id="haw-Ms-hMd"/>
                            </scrollView>
                        </subviews>
                        <viewLayoutGuide key="safeArea" id="Iro-49-Rgb"/>
                        <color key="backgroundColor" systemColor="systemBackgroundColor"/>
                    </view>
                </viewController>
                <placeholder placeholderIdentifier="IBFirstResponder" id="Vqx-FG-x61" userLabel="First Responder" customClass="UIResponder" sceneMemberID="firstResponder"/>
            </objects>
            <point key="canvasLocation" x="7369" y="2822"/>
        </scene>
        <!--View Controller-->
        <scene sceneID="tUx-Wz-XhF">
            <objects>
                <viewController id="ePU-e4-juv" sceneMemberID="viewController">
                    <view key="view" contentMode="scaleToFill" id="2io-5q-6Yj">
                        <rect key="frame" x="0.0" y="0.0" width="375" height="667"/>
                        <autoresizingMask key="autoresizingMask" widthSizable="YES" heightSizable="YES"/>
                        <subviews>
                            <button opaque="NO" contentMode="scaleToFill" fixedFrame="YES" contentHorizontalAlignment="center" contentVerticalAlignment="center" buttonType="system" lineBreakMode="middleTruncation" translatesAutoresizingMaskIntoConstraints="NO" id="AHE-En-yus">
                                <rect key="frame" x="16" y="9" width="39" height="35"/>
                                <autoresizingMask key="autoresizingMask" flexibleMaxX="YES" flexibleMaxY="YES"/>
                                <state key="normal" title="Button"/>
                                <buttonConfiguration key="configuration" style="plain" title="←"/>
                            </button>
                            <scrollView clipsSubviews="YES" multipleTouchEnabled="YES" contentMode="scaleToFill" fixedFrame="YES" translatesAutoresizingMaskIntoConstraints="NO" id="7TS-fb-JNI">
                                <rect key="frame" x="0.0" y="52" width="375" height="615"/>
                                <autoresizingMask key="autoresizingMask" flexibleMaxX="YES" flexibleMaxY="YES"/>
                                <subviews>
                                    <textView clipsSubviews="YES" multipleTouchEnabled="YES" contentMode="scaleToFill" fixedFrame="YES" editable="NO" textAlignment="natural" translatesAutoresizingMaskIntoConstraints="NO" id="uz3-tl-Rxa">
                                        <rect key="frame" x="0.0" y="0.0" width="375" height="615"/>
                                        <autoresizingMask key="autoresizingMask" flexibleMaxX="YES" flexibleMaxY="YES"/>
                                        <color key="backgroundColor" systemColor="systemBackgroundColor"/>
                                        <mutableString key="text">#include&lt; stdio.h &gt;
#include&lt; conio.h &gt;
void sumdiff (int x, int y ,int *sum ,int *diff);
void main()
{
int x=20 ,y=10 ,sum, diff;
sumdiff (x ,y ,&amp;sum ,&amp;diff);
printf(“sum =%d \n difference=%d \n”,s,d);
getch();
}
void sumdiff (int a, int b, int *sum, int *diff)
{
*sum = a + b;
*diff = a - b;
}

Output:
sum = 30
difference=10

Explanation:
Here, *sum=a+b; statement1
*diff=a-b; statement2
In statement1, values of a and b are added and stored in the memory location pointed to by sum pointer, this memory location is same as memory location of sum value variable in main function. Therefore, value stored in location pointed to by sum pointer is value of sum in main function. Similarly diff pointer stores value in diff value variable in main function. So actual sum and diff value variables in main get changed by diff and sum pointer type variables in sumdiff function. That is by passing arguments to a function sumdiff by reference old values in main function get changes means actually sum and diff value variable is return by the sumdiff function not directly by using return type but indirectly by passing argument to a function by reference.</mutableString>
                                        <color key="textColor" systemColor="labelColor"/>
                                        <fontDescription key="fontDescription" type="system" pointSize="14"/>
                                        <textInputTraits key="textInputTraits" autocapitalizationType="sentences"/>
                                    </textView>
                                </subviews>
                                <viewLayoutGuide key="contentLayoutGuide" id="g3l-Jb-xBk"/>
                                <viewLayoutGuide key="frameLayoutGuide" id="sll-WT-ssk"/>
                            </scrollView>
                        </subviews>
                        <viewLayoutGuide key="safeArea" id="L4G-G8-c4g"/>
                        <color key="backgroundColor" systemColor="systemBackgroundColor"/>
                    </view>
                </viewController>
                <placeholder placeholderIdentifier="IBFirstResponder" id="yRt-9O-aMy" userLabel="First Responder" customClass="UIResponder" sceneMemberID="firstResponder"/>
            </objects>
            <point key="canvasLocation" x="8001" y="2822"/>
        </scene>
        <!--View Controller-->
        <scene sceneID="Oad-bc-66e">
            <objects>
                <viewController id="IhD-oY-bd5" sceneMemberID="viewController">
                    <view key="view" contentMode="scaleToFill" id="Kem-a4-UAI">
                        <rect key="frame" x="0.0" y="0.0" width="375" height="667"/>
                        <autoresizingMask key="autoresizingMask" widthSizable="YES" heightSizable="YES"/>
                        <subviews>
                            <button opaque="NO" contentMode="scaleToFill" fixedFrame="YES" contentHorizontalAlignment="center" contentVerticalAlignment="center" buttonType="system" lineBreakMode="middleTruncation" translatesAutoresizingMaskIntoConstraints="NO" id="ENn-fH-d38">
                                <rect key="frame" x="16" y="9" width="39" height="35"/>
                                <autoresizingMask key="autoresizingMask" flexibleMaxX="YES" flexibleMaxY="YES"/>
                                <state key="normal" title="Button"/>
                                <buttonConfiguration key="configuration" style="plain" title="←"/>
                            </button>
                            <scrollView clipsSubviews="YES" multipleTouchEnabled="YES" contentMode="scaleToFill" fixedFrame="YES" translatesAutoresizingMaskIntoConstraints="NO" id="pZC-QX-lvs">
                                <rect key="frame" x="0.0" y="52" width="375" height="615"/>
                                <autoresizingMask key="autoresizingMask" flexibleMaxX="YES" flexibleMaxY="YES"/>
                                <subviews>
                                    <textView clipsSubviews="YES" multipleTouchEnabled="YES" contentMode="scaleToFill" fixedFrame="YES" editable="NO" textAlignment="natural" translatesAutoresizingMaskIntoConstraints="NO" id="wzF-bM-qe5">
                                        <rect key="frame" x="0.0" y="0.0" width="375" height="615"/>
                                        <autoresizingMask key="autoresizingMask" flexibleMaxX="YES" flexibleMaxY="YES"/>
                                        <color key="backgroundColor" systemColor="systemBackgroundColor"/>
                                        <mutableString key="text">1D Array
Program 1: Implement a C program to count array elements by using sizeof() operator.
#include &lt; stdio.h &gt;
#include&lt; conio.h &gt;
void main()
{
int array[]={11, 21,31,41,51,61};
int n;
clrscr();
n=sizeof(array)/sizeof(int);
printf("Number of elements in an array are: % d\n", n);
getch();
}
Output:
Number of elements in an array are: 6

Program 2: C program to swap first element with last, second to second last and so on in an array. That is reversing array elements.
#include &lt; stdio.h &gt;
#include&lt; conio.h &gt;
void main()
{
int array[]={11, 21,31,41,51,61};
int size=6;
clrscr();
for(i=0 ; i&lt;=2 ; i++)
{
temp = array[i];
array[i] = array[size-1];
array[size-1] = temp;
size = size -1;
}
printf("\n The array after swapping is: \n");
for(i=0 ; i&lt;=5 ; i++)
{
printf("array[% d] : % d \n", i , array[i]);
}
getch();
}
Output:
The array after swapping is:
array[0] : 61
array[1] : 51
array[2] : 41
array[3] : 31
array[4] : 21
array[5] : 11

Program 3: Implement a C program to check prime numbers in an array.
#include &lt; stdio.h &gt;
#include&lt; conio.h &gt;
//to check number is prime or not if number is prime it returns 1 otherwise 0
int isPrime(int num)
{
int i;
int flag=0;
for(i=2; i {
if(num % i ==0)
{
flag =1;
break;
}
}
if(flag==1)
//flag is 1, if number is not prime return 0
return 0;
else
//flag is 0, if number is prime return 1
return 1;
}
void main()
{
int i;
int array[5]={7, 9, 10, 20, 11};
for(i=0; i&lt;=4; i++)
{
printf("% d : % s \n", array[i], (isPrime(array[i])? "Prime" : "Not Prime"));
}
getch();
}
Output:
7 : Prime
9 : Not Prime
10 : Not Prime
20 : Not Prime
11 : Prime

Program 4: Implement a program to sort an array elements in ascending order.
#include&lt; stdio.h &gt;
#include&lt; conio.h &gt;
void main()
{
int a[5];
int i, j, temp;
clrscr();
printf("\n Enter array element:");
for(i=0;i&lt;5;i++)
{
scanf("%d",&amp;a[i]);
}
printf("\n Array element are ");
for(i=0;i&lt;5;i++)
{
printf("% d \t ",a[i]);
}
//sorting of array elements in ascending order
for(i=0;i&lt;5;i++)
{
for(j=0;j &lt;(5-i);j++)
{
if(a[j]&gt;a[j+1])
{
temp=a[j];
a[j]=a[j+1];
a[j]=temp;
}
} // completion of inner for loop
} // completion of outer for loop
printf("\n Sorted Array elements are ");
for(i=0;i&lt;5;i++)
{
printf("%d \t", a[i]);
}
getch();
}
Output:
Enter array element:
21
4
6
17
9
Array element are 21 4 6 17 9
Sorted Array elements are 4 6 9 17 21

Program 5: Implement a program to search an element into a one dimensional array.
#include&lt; stdio.h&gt;
#include&lt; conio.h&gt;
void main()
{
int a[5];
int i, z, flag=0;
clrscr();
printf("\n Enter array element:");
for(i=0;i&lt;5;i++)
{
scanf("%d",&amp;a[i]);
}
printf("\n Enter any number which you want to search:");
scanf("%d",&amp;z);
for(i=0;i&lt;5;i++)
{
if(z==a[i])
{
printf("\n Element present in array index %d",i);
flag=1;
break;
}
}
if(flag==0)
{
printf("\n Element is not present in an array");
}
getch();
}
Output:
Enter array element: 21
44
55
66
78
Enter any number which you want to search: 66
Element present in array index 3

Program 6: Implement a program that accepts 5 numbers in an array1 and accept 5 numbers in array2 and add these two array’s elements index wise and stores the result in third array3.
#include&lt; stdio.h&gt;
#include&lt; conio.h&gt;
void main()
{
int array1[5], array2[5], array3[5], i;
printf(“Enter 5 numbers in array1 \n”);
for(i=0;i&lt;=4;i++)
{
scanf(“%d”,&amp; array1[i])
}
printf(“Enter 5 numbers in array2 \n”);
for(i=0;i&lt;=4;i++)
{
scanf(“%d”, &amp;array2[i]);
}
/*Addition of two array elements index wise */
for(i=0;i&lt;=4;i++)
{
array3[i]= array1[i]+ array2[i];
}
printf(“\n Addition is :”);
for(i=0;i&lt;=4;i++)
{
printf(“%d \t”, array3[i]);
}
getch();
}
Output:
Enter 5 numbers in array1
1
2
3
4
5
Enter 5 numbers in array2
6
7
8
9
10
Addition is:
7 9 11 13 15

Program 7:Implement C program to merge two 1-D arrays into third 1-D array.
#include&lt; stdio.h&gt;
#include&lt; conio.h&gt;
void merge(int a[10],int b[10]),int n, int m);
//Function Prototype
void main()
{
int a[10],b[10],i ,j,n,m;
clrscr();
printf("Enter limit of first array \n");
scanf("%d", &amp;n);
printf("Enter first array elements \n");
for(i=0; i&lt; n; i++)
{
scanf("%d",&amp;a[i]);
}
printf("Enter limit of second array \n");
scanf("%d", &amp;m);
printf("Enter second array elements \n");
for(j=0;j&lt; n;j++)
{
scanf("%d", &amp;b[j]);
}
merge(a, b, n, m);
// Function call
getch();
}
void merge(int a[],int b[],int n, int m)
//Function Definition
{
int c[100],i,j;
for(i=0;i&lt; n;i++)
{
c[i] = a[i]
}
for(i=n, j=0; i &lt; m+n; i++,j++)
{
c[i]=b[j];
}
printf("After merging array elements are: \n");
for(i=0; i&lt; n+m; i++)
printf("%d\t", c[i]);
}
Output:
Enter limit of first array
2
Enter first array elements
21
31
Enter limit of second array
2
Enter second array elements
41
51
After merging array elements are:
21
31
41
51

Program 8: Implement C program to find smallest element in a 1-D array and display index of that smallest element.
#include&lt; stdio.h&gt;
#include&lt; conio.h&gt;
void main()
{
int a[5], i, n, min, loc;
clrscr();
printf("\n Enter five numbers in an array");
for(i=0; i&lt;5; i++)
{
scanf("%d", &amp;a[i]);
}
min=a[0];
for(i=1; i&lt;5; i++)
{
if(min &gt; a[i])
{
min=a[i];
loc = i;
}
}
printf("\n Minimum element =% d is at index % d", min, loc);
getch();
}
Output:
Enter five numbers in an array 91
41
77
88
34
Minimum element = 34 is at index 4
Explanation:
Here 34 element is at index 4 and position in array is 5. Because array element index starts from 0 and last element’s index is (size-1).

Program 9:Implement C program to display even and odd numbers from given 1-D array.
#include&lt; stdio.h&gt;
#include&lt; conio.h&gt;
void main()
{
int a[100],n,i;
clrscr();
printf("Enter how many number of elements you want in array\n");
scanf("%d",&amp;n);
printf("Enter %d array elements \n",n);
for(i=0; i&lt; n; i++)
{
scanf("%d",&amp;a[i]);
}
for(i=0;i&lt; n;i++)
{
if(a[i]%2==0)
{
printf("%d is even\n",a[i]);
}
else
{
printf("%d is odd\n",a[i]);
}
}
getch();
}

Output:
Enter how many number of elements you want in array
4
Enter 4 array elements
21
55
20
57
21 is odd
55 is odd
20 is even
57 is odd

Program 10:Implement C program to display list of prime numbers from given 1-D array.
#include&lt; stdio.h&gt;
#include&lt; conio.h&gt;
void main()
{
int a[100], i, n, f, c;
clrscr();
printf("Enter how many number of elements you want in array\n");
scanf("%d",&amp;n);
printf("Enter %d array elements \n",n);
for(i=0; i&lt; n; i++)
{
scanf("%d" , &amp;a[i]);
}
for(i=0; i&lt; n; i++)
//External for loop is for number of array elements
{
f=0;
for(c=2; c&lt;=a[i]-1; c++)
//Internal for loop is for divide the given array number from 2 to (number-1)
{
if(a[i]%c == 0)
{
f=1;
break;
}
}
//Closing bracket of internal for loop
if(f==0)
{
printf("%d is a prime number \n",a[i]);
}
else
{
printf("%d is not a prime number \n",a[i]);
}
}
//Closing bracket of external for loop
getch();
}
Output:
Enter how many number of elements you want in array
4
Enter 4 array elements
21
7
20
11
21 is not a prime number
7 is a prime number
20 is not a prime number
11 is a prime number</mutableString>
                                        <color key="textColor" systemColor="labelColor"/>
                                        <fontDescription key="fontDescription" type="system" pointSize="14"/>
                                        <textInputTraits key="textInputTraits" autocapitalizationType="sentences"/>
                                    </textView>
                                </subviews>
                                <viewLayoutGuide key="contentLayoutGuide" id="mi0-Jb-Gi1"/>
                                <viewLayoutGuide key="frameLayoutGuide" id="m1x-7C-nzZ"/>
                            </scrollView>
                        </subviews>
                        <viewLayoutGuide key="safeArea" id="7MI-ZT-eyZ"/>
                        <color key="backgroundColor" systemColor="systemBackgroundColor"/>
                    </view>
                </viewController>
                <placeholder placeholderIdentifier="IBFirstResponder" id="66s-sj-MRX" userLabel="First Responder" customClass="UIResponder" sceneMemberID="firstResponder"/>
            </objects>
            <point key="canvasLocation" x="2084" y="3570"/>
        </scene>
        <!--View Controller-->
        <scene sceneID="waD-4a-8KX">
            <objects>
                <viewController id="cne-27-EaG" sceneMemberID="viewController">
                    <view key="view" contentMode="scaleToFill" id="TZb-8U-9if">
                        <rect key="frame" x="0.0" y="0.0" width="375" height="667"/>
                        <autoresizingMask key="autoresizingMask" widthSizable="YES" heightSizable="YES"/>
                        <subviews>
                            <button opaque="NO" contentMode="scaleToFill" fixedFrame="YES" contentHorizontalAlignment="center" contentVerticalAlignment="center" buttonType="system" lineBreakMode="middleTruncation" translatesAutoresizingMaskIntoConstraints="NO" id="utg-DX-J1e">
                                <rect key="frame" x="16" y="9" width="39" height="35"/>
                                <autoresizingMask key="autoresizingMask" flexibleMaxX="YES" flexibleMaxY="YES"/>
                                <state key="normal" title="Button"/>
                                <buttonConfiguration key="configuration" style="plain" title="←"/>
                            </button>
                            <scrollView clipsSubviews="YES" multipleTouchEnabled="YES" contentMode="scaleToFill" fixedFrame="YES" translatesAutoresizingMaskIntoConstraints="NO" id="kjn-KV-Am9">
                                <rect key="frame" x="0.0" y="52" width="375" height="615"/>
                                <autoresizingMask key="autoresizingMask" flexibleMaxX="YES" flexibleMaxY="YES"/>
                                <subviews>
                                    <textView clipsSubviews="YES" multipleTouchEnabled="YES" contentMode="scaleToFill" fixedFrame="YES" editable="NO" textAlignment="natural" translatesAutoresizingMaskIntoConstraints="NO" id="aeq-Z3-kQE">
                                        <rect key="frame" x="0.0" y="0.0" width="375" height="615"/>
                                        <autoresizingMask key="autoresizingMask" flexibleMaxX="YES" flexibleMaxY="YES"/>
                                        <color key="backgroundColor" systemColor="systemBackgroundColor"/>
                                        <mutableString key="text">2D Array
Q 1. Implement C program to display Transpose of given 2-D matrix.
#include&lt; stdio.h &gt;
#include&lt; conio.h &gt;
void main()
{
int a[10][10], transpose[10][10], r, c, i, j;
printf("Enter rows and columns of matrix: ");
scanf("%d %d", &amp;r, &amp;c);
// storing elements of the matrix
printf("\n Enter elements of matrix:\n");
for(i=0; i&lt; r; ++i)
for(j=0; j&lt; c; ++j)
{
printf("Enter element a[%d][%d]: ",i+1, j+1);
scanf("%d", &amp;a[i][j]);
}
// Displaying the matrix a[][]
printf("\n Entered Matrix: \n");
for(i=0; i&lt; r; ++i)
{
for(j=0; j&lt; c; ++j)
{
printf("%d ", a[i][j]);
}
printf(“\n”);
}
// Finding the transpose of matrix a
for(i=0; i&lt; r; ++i)
{
for(j=0; j&lt; c; ++j)
{
transpose[j][i] = a[i][j];
}
}
// Displaying the transpose of matrix a
printf("\n Transpose of Matrix: \n");
for(i=0; i&lt; c; ++i)
{
for(j=0; j&lt; r; ++j)
{
printf("%d ",transpose[i][j]);
if(j==r-1)
printf("\n\n");
}
}
getch();
}

Output:
Enter rows and columns of matrix: 2
2
Enter element of matrix:
Enter element a[1][1]: 1
Enter element a[1][2]: 2
Enter element a[1][3]: 3
Enter element a[2][1]: 4
Entered Matrix:
1 2
3 4
Transpose of Matrix:
1 3
2 4

Q 2. Implement C program to pass entire two dimensional array as a parameter and display array elements.
#include &lt; stdio.h &gt;
#include&lt; conio.h &gt;
void display(int arr[2][2])
{
int i, j;
for (i = 0; i &lt; 2; i++)
{
for (j = 0; j &lt; 2; j++)
{
printf("%d \t ", arr[i][j]);
}
}
}
void main()
{
int arr[2][3] = {{1, 2, 3}, {4, 5, 6}};
clrscr();
display(arr);
// display(&amp;arr[0][0]);
getch();
}

Output:
1 2 3 4 5 6

Q 3. Implement C program to pass entire two dimensional array as a pointer and display two dimensional array elements using pointer arithmetic.
#include &lt; stdio.h &gt;
#include&lt; conio.h &gt;
void display(int * arr)
{
int i, j;
for (i = 0; i &lt; 2; i++)
{
for (j = 0; j &lt; 2; j++)
{
printf("%d ", *arr);
arr ++;
}
}
}
void main()
{
int arr[2][2] = {{1, 2, 3}, {4, 5, 6}};
clrscr();
display(&amp;arr[0][0]);
// display(arr);
getch();
}

Output:
1 2 3 4 5 6

Q 4. Implement C program to create a matrix and find sum, product and average of all elements of two dimensional (matrix) array.&gt;
#include &lt; stdio.h &gt;
#include&lt; conio.h &gt;
void main()
{
int matrix[21][21];
int i,j,r,c;
int sum=0,product=1, average;
printf("Enter number of Rows :");
scanf("%d", &amp;r);
printf("\n Enter number of Columns :");
scanf("%d", &amp;c);
printf("\nEnter matrix elements :\n");
for(i=0;i&lt; r;i++)
{
for(j=0;j&lt; c;j++)
{
scanf("%d",&amp;matrix[i][j]);
}
}
for(i=0;i&lt; r; i++)
{
for(j=0; j&lt; c; j++)
{
sum = sum + matrix[i][j];
product = product * matrix[i][j];
}
}
average = sum / ( r * c) ;
printf("\n Sum of all elements : %d \n Product of all elements :%d \n Average of all elements : %d",sum,product,average);
getch();
}

Output:
Enter number of Rows : 2
Enter number of Columns : 2
Enter matrix elements :
1
2
3
4
Sum of all elements : 10
Product of all elements : 24
Average of all elements :3

Q 5. Implement C program to read a matrix and print its diagonals using two dimensional array.
#include&lt; stdio.h&gt;
#include&lt; conio.h&gt;
void main()
{
int matrix[10][10];
int i, j, r, c;
printf("Enter number of Rows :");
scanf("%d",&amp;r);
printf("\n Enter number of Columns :");
scanf("%d",&amp;c);
printf("\n Enter matrix elements :\n");
for(i=0;i&lt; r;i++)
{
for(j=0;j&lt; c;j++)
{
scanf("%d", &amp;matrix[i][j]);
}
}
/* matrix must be square matrix that is number of rows and columns must be same then only we can print diagonal elements*/
if(r==c)
{
printf(“Diagonal elements are: \n”);
for(i=0; i&lt; c; i++)
{
for(j=0 ; j&lt; r; j++)
{
if(i==j)
printf("%d\t", matrix[i][j]);
else
printf("\t");
/*print space if rows and columns indices are not matched */
}
printf("\n");
/after each row print new line/
}
}
else
{
printf("\n Matrix is not a Square Matrix.");
}
getch();
}

Output:
Enter number of Rows : 2
Enter number of Columns : 2
Enter matrix elements :
1
2
3
4
Diagonal elements are:
1
4

Q 6. Implement C program to access the elements of the two dimensional array via pointer.
#include &lt; stdio.h &gt;
#include &lt; conio.h &gt;
void main(void)
{
int matrix[3][2] = {{1, 2 }, {3, 4}, {21, 10}};
// pointer ptr pointing at two dimensional array matrix
int *ptr = &amp;matrix[0][0];
// print all elements of an array matrix using pointer
printf(“Matrix elements are \n”);
for (i = 0; i &lt;= 5; i++)
{
printf("%d \t ", *(ptr + i));
//pointer arithmetic
}
getch();
}

Output:
Matrix elements are
1 2 3 4 21 10

Q 7. Implement C program to display even numbers from given 2-D array.
#include&lt; stdio.h &gt;
#include&lt; conio.h &gt;
void main()
{
int array[3][3],i, j, r, c;
clrscr();
printf(“Enter nine elements into two dimensional array\n”);
for(i=0;i&lt;3;i++)
{
for(j=0;j&lt;3;j++)
{
scanf("%d", &amp; array[i][j]);
}
}
printf("Even numbers in the given two dimensional array is:\n");
for(i=0; i&lt;3; i++)
{
for(j=0; j&lt;3; j++)
{
if(a[i][j]%2==0)
printf("%d\t", array[i][j]);
}
}
getch();
}

Output:
Enter nine elements into two dimensional array
22 21 44 32 12 6 7 99 56
Even numbers in the given two dimensional array is:
22 44 32 12 6 56

Q 8. Implement C program to search an element in a given 2-D array using linear search for that design search function and pass two dimensional array, row and column as argument.
#include&lt; stdio.h &gt;
#include&lt; conio.h &gt;
void search(int x[ ][10], int r, int c);
void main()
{
int array[10][10], row, col, i, j;
clrscr();
printf(“Enter number of rows and columns\n”);
scanf("%d%d",&amp;row, &amp;col);
printf(“Enter elements in two dimensional array \n”);
for(i=0; i&lt; row; i++)
{
for(j=0; j&lt; col; j++)
{
scanf("%d", &amp;array[i][j]);
}
}
search(array, row, col);
getch();
}
void search(int x[ ][10],int r, int c)
{
int i, j, number, found=0;
printf("Enter number which you want to search \n");
scanf("%d",&amp;number);
for(i=0; i&lt; r; i++)
{
for(j=0; j&lt; c; j++)
{
if(number == x[i][j])
found=1;
}
}
if(found==1)
printf("%d is present in two dimensional array. ", number);
else
printf("Number is not present in two dimensional array. ");
}

Output:
Enter number of rows and columns 2 2 Enter elements in two dimensional array 21 22 44 77 Enter number which you want to search 44 44 is present in two dimensional array.

Q 9. Implement a program to find all palindrome numbers in two dimensional array.
#include&lt; stdio.h &gt;
#include&lt; conio.h &gt;
void main()
{
int array[2][2]={ {11, 21} , {121, 41} };
int num , original_no , r , rev=0;
int i, j;
clrscr();
for( i = 0; i &lt; 2; i++)
{
for( j=0; j&lt;2; j++)
{
rev=0;
num = array[i][j];
while ( num != 0)
// or condition num &gt; 0 is also used
{
r = num%10;
// separate first digit from a number
rev = rev * 10 + r;
// multiply intermediate result by 10 and add separated digit r
num =num/10;
// delete first digit from number
}
if (rev == array[i][j] )
{
printf(“ %d Number is Palindrome.\n”, array[i][j]);
}
}
}
getch();
}

Output:
11 Number is Palindrome.
121 Number is Palindrome.

Q 10. Implement a program to find all perfect numbers in two dimensional array.

#include&lt; stdio.h &gt;
#include&lt; conio.h &gt;
void main()
{
int array[2][2]={ {11, 6} , {121, 28} };
int num , original_no , r , sum, k=1;
int i, j;
clrscr();
for( i = 0; i &lt; 2; i++)
{
for( j=0; j&lt;2; j++)
{
num = array[i][j];
k=1;
sum=0;
while ( k &lt;= (num-1))
{
if( num % k == 0)
{
sum = sum + k;
}
K++;
}
if ( num == sum)
{
printf(“%d number is Perfect Number.\n”,num);
}
} //completion of inner for loop
} //completion of outer for loop
getch();
}

Output:
6 number is Perfect Number.
28 number is Perfect Number.</mutableString>
                                        <color key="textColor" systemColor="labelColor"/>
                                        <fontDescription key="fontDescription" type="system" pointSize="14"/>
                                        <textInputTraits key="textInputTraits" autocapitalizationType="sentences"/>
                                    </textView>
                                </subviews>
                                <viewLayoutGuide key="contentLayoutGuide" id="AqH-d1-aAR"/>
                                <viewLayoutGuide key="frameLayoutGuide" id="tno-kg-dAA"/>
                            </scrollView>
                        </subviews>
                        <viewLayoutGuide key="safeArea" id="7fQ-pR-ygm"/>
                        <color key="backgroundColor" systemColor="systemBackgroundColor"/>
                    </view>
                </viewController>
                <placeholder placeholderIdentifier="IBFirstResponder" id="foE-Ot-UZx" userLabel="First Responder" customClass="UIResponder" sceneMemberID="firstResponder"/>
            </objects>
            <point key="canvasLocation" x="2737" y="3570"/>
        </scene>
        <!--View Controller-->
        <scene sceneID="I3Y-vQ-28P">
            <objects>
                <viewController id="OZi-SN-DQ5" sceneMemberID="viewController">
                    <view key="view" contentMode="scaleToFill" id="YeF-ZC-zz7">
                        <rect key="frame" x="0.0" y="0.0" width="375" height="667"/>
                        <autoresizingMask key="autoresizingMask" widthSizable="YES" heightSizable="YES"/>
                        <subviews>
                            <button opaque="NO" contentMode="scaleToFill" fixedFrame="YES" contentHorizontalAlignment="center" contentVerticalAlignment="center" buttonType="system" lineBreakMode="middleTruncation" translatesAutoresizingMaskIntoConstraints="NO" id="D8A-Vw-fk7">
                                <rect key="frame" x="16" y="9" width="39" height="35"/>
                                <autoresizingMask key="autoresizingMask" flexibleMaxX="YES" flexibleMaxY="YES"/>
                                <state key="normal" title="Button"/>
                                <buttonConfiguration key="configuration" style="plain" title="←"/>
                            </button>
                            <scrollView clipsSubviews="YES" multipleTouchEnabled="YES" contentMode="scaleToFill" fixedFrame="YES" translatesAutoresizingMaskIntoConstraints="NO" id="pfS-gN-koa">
                                <rect key="frame" x="0.0" y="52" width="375" height="615"/>
                                <autoresizingMask key="autoresizingMask" flexibleMaxX="YES" flexibleMaxY="YES"/>
                                <subviews>
                                    <textView clipsSubviews="YES" multipleTouchEnabled="YES" contentMode="scaleToFill" fixedFrame="YES" editable="NO" textAlignment="natural" translatesAutoresizingMaskIntoConstraints="NO" id="m20-7v-JaX">
                                        <rect key="frame" x="0.0" y="0.0" width="375" height="615"/>
                                        <autoresizingMask key="autoresizingMask" flexibleMaxX="YES" flexibleMaxY="YES"/>
                                        <color key="backgroundColor" systemColor="systemBackgroundColor"/>
                                        <mutableString key="text">String
Program1: Implement a C program to split a string into two equal strings and display that two strings on console.
#include&lt; stdio.h &gt;
#include&lt; string.h &gt;
void main()
{
char inputString[100], leftHalf[100], rightHalf[100];
int length, mid, i, k;
clrscr();
printf("Enter a string\n");
gets(inputString);
length = strlen(inputString);
mid = length/2;
for(i = 0; i &lt; mid; i++)
//Copy left half of inputString to leftHalf
{
leftHalf[i]= inputString[i];
}
leftHalf[i] = '\0';
for(i = mid, k = 0; i &lt;= length; i++, k++)
// Copy right half of inputString to rightHalf
{ rightHalf[k]= inputString[i];
}
/* Printing left and right half of string */
printf("Left half : %s\n",leftHalf);
printf("Right half : %s\n",rightHalf);
getch();
}

Output:
Enter a string
AmolAmit
Left half : Amol
Right half : Amit

Program2: Write a C program to check whether a string is palindrome or not using library function.
#include&lt; stdio.h &gt;
#include&lt; conio.h &gt;
#include&lt; string.h &gt;
void main()
{
char str[20], stringdup[20];
int diff;
clrscr();
printf(“Enter any string: \n ”);
gets(str);
strcpy(stringdup,str);
strrev(stringdup);
diff = strcmp (str, stringdup);
if(diff == 0)
printf(“\n String is a palindrome.”);
else
printf(“\n String is not palindrome.”);
getch();
}

Output:
Enter any string: madam
String is a palindrome.

Program3: Write a C program to check whether a string is palindrome or not without using library function.
#include&lt; stdio.h &gt;
#include&lt; conio.h &gt;
void main()
{
char str[20];
int length ,mid ,i=0;
clrcsr();
printf(“Enter any string: ”);
gets(str);
length =strlen(str);
mid =length/2;
while(i&lt; mid)
{
if(str[i] != str[length-1-i])
{
break;
}
i++;
}
if(i==mid)
printf(“\n String is a palindrome.”);
else
printf(“\n String is a not palindrome.”);
getch();
}

Output:
Enter any string: madam
String is a palindrome.

Program4: Write a C program to remove all characters in a string except alphabets.
#include&lt; stdio.h &gt;
#include&lt; conio.h &gt;
void main()
{
char string[21];
int i, j;
clrcsr();
printf("\n Enter any string: ");
gets(string);
for(i = 0; string[i] != '\0'; ++i)
{
if(!((string[i] &gt;= 'a' &amp;&amp; string[i] &lt;= 'z')||(string[i] &gt;= 'A' &amp;&amp; string[i] &lt;= 'Z')||string[i] == '\0') )
{
for(j = i; string[j] != '\0'; ++j)
{
string[j] = string[j+1];
}
string[j] = '\0';
}
}
printf("\n Output String: ");
puts(line);
getch();
}

Output:
Enter any string: amol@@&amp;&amp;**Jag$$tap
Output String: amol Jagtap

Program5: Write a C program to read line of text characters by using getchar function.
#include&lt; stdio.h &gt;
#include&lt; conio.h &gt;
void main()
{
char name[21], ch;
int i = 0;
clrscr();
printf("\n Enter any name of book: ");
while(ch != '\n')
// while loop terminates when user press ‘\n’ character means enter key
{
ch = getchar();
name[i] = ch;
i++;
}
name[i] = '\0';
// insert NULL character at the end of string explicitly
printf("\n Name of Book: %s", name);
getch();
}

Output:
Enter any name of book:
C programming
Name of Book: C programming

Program6: Implement a C program that passes entire character array to a display function and display that string into function display.
#include &lt; stdio.h &gt;
#include&lt; conio.h&gt;
void display(char str[]);
void main()
{
char string[50];
clrscr();
printf("\n Enter any string: ");
gets(string);
display(string);
// Passing entire string to function
getch();
}
void display(char str[])
{
printf("String Output: ");
puts(str);
}

Output:
Enter any string: abcd
String Output: abcd

Program7: Find the Frequency of particular character in given a string.
#include &lt; stdio.h &gt;
#include&lt; conio.h &gt;
void main()
{
char string[210], ch;
int i, frequency = 0;
printf("Enter any string:");
gets(string);
printf("\n Enter a character to find the frequency: ");
scanf("%c",&amp;ch);
for(i =0; string[i] != '\0'; i++)
{ if(ch == string[i])
{
frequency++;
}
}
printf("\n Frequency of %c = %d", ch, frequency);
getch();
}

Output:
Enter any string: amolamitsamit
Enter a character to find the frequency: m
Frequency of m = 3

Program 8: Program to Sort Strings in Dictionary Order or Lexicographical Order.
#include&lt; stdio.h &gt;
#include &lt; string.h &gt;
#include&lt; conio.h&gt;
void main()
{
int i, j;
char str[5][50], temp[50];
printf("Enter 5 words:\n");
for(i=0; i&lt;5; ++i)
{
scanf("%s[^\n]",str[i]);
}
//Code for sorting the strings in ascending order or Lexicographical Order
for(i=0; i&lt;5; ++i)
{
for(j=i+1; j&lt;5 ; ++j)
{
if(strcmp(str[i], str[j])&gt;0)
{
strcpy(temp, str[i]);
strcpy(str[i], str[j]);
strcpy(str[j], temp);
}
}
printf("\n Strings in lexicographical order: \n");
for(i=0; i&lt;5; ++i)
{
puts(str[i]);
}
getch();
}

Output:
Enter 5 words:
Kedar
Amol
Samit
Vijay
Ganesh
Strings in lexicographical order:
Amol
Ganesh
Kedar
Samit
Vijay

Program 9: Reverse a sentence using recursion without using strings.
#include &lt; stdio.h &gt;
#include&lt; conio.h &gt;
void reverseSentence();
void main()
{
printf("Enter sentence: ");
reverseSentence(); getch();
}
void reverseSentence()
{
char c;
scanf("%c", &amp;c);
if( c != '\n')
{
reverseSentence();
printf("%c",c);
}
}

Output:
Enter a sentence: amol
loma

Program 10: Write a function string length having return type integer and argument as string pointer that function calculate length of string using pointer and return length to the calling function.

#include &lt; stdio.h&gt;
#include&lt; conio.h &gt;
int string_length(char* string)
{
int length = 0;
while (*string != '\0')
{
length++;
string++;
}
return length;
}
void main()
{
Int len;
char string[] = "ProgramingKatta";
len = string_length(string);
printf(“Length of string = %d”,len);
getch();
}

Output:
Length of string = 15</mutableString>
                                        <color key="textColor" systemColor="labelColor"/>
                                        <fontDescription key="fontDescription" type="system" pointSize="14"/>
                                        <textInputTraits key="textInputTraits" autocapitalizationType="sentences"/>
                                    </textView>
                                </subviews>
                                <viewLayoutGuide key="contentLayoutGuide" id="Aig-Pg-5GW"/>
                                <viewLayoutGuide key="frameLayoutGuide" id="wL8-ao-gQI"/>
                            </scrollView>
                        </subviews>
                        <viewLayoutGuide key="safeArea" id="mDr-MO-5zD"/>
                        <color key="backgroundColor" systemColor="systemBackgroundColor"/>
                    </view>
                </viewController>
                <placeholder placeholderIdentifier="IBFirstResponder" id="q0d-cS-js5" userLabel="First Responder" customClass="UIResponder" sceneMemberID="firstResponder"/>
            </objects>
            <point key="canvasLocation" x="3388" y="3570"/>
        </scene>
        <!--View Controller-->
        <scene sceneID="8W5-Wm-Ddw">
            <objects>
                <viewController id="yJl-1F-Dl7" sceneMemberID="viewController">
                    <view key="view" contentMode="scaleToFill" id="t6q-7e-MB9">
                        <rect key="frame" x="0.0" y="0.0" width="375" height="667"/>
                        <autoresizingMask key="autoresizingMask" widthSizable="YES" heightSizable="YES"/>
                        <subviews>
                            <button opaque="NO" contentMode="scaleToFill" fixedFrame="YES" contentHorizontalAlignment="center" contentVerticalAlignment="center" buttonType="system" lineBreakMode="middleTruncation" translatesAutoresizingMaskIntoConstraints="NO" id="XLc-4o-hYq">
                                <rect key="frame" x="16" y="9" width="39" height="35"/>
                                <autoresizingMask key="autoresizingMask" flexibleMaxX="YES" flexibleMaxY="YES"/>
                                <state key="normal" title="Button"/>
                                <buttonConfiguration key="configuration" style="plain" title="←"/>
                            </button>
                            <scrollView clipsSubviews="YES" multipleTouchEnabled="YES" contentMode="scaleToFill" fixedFrame="YES" translatesAutoresizingMaskIntoConstraints="NO" id="ggg-3Q-Ph1">
                                <rect key="frame" x="0.0" y="52" width="375" height="615"/>
                                <autoresizingMask key="autoresizingMask" flexibleMaxX="YES" flexibleMaxY="YES"/>
                                <subviews>
                                    <textView clipsSubviews="YES" multipleTouchEnabled="YES" contentMode="scaleToFill" fixedFrame="YES" editable="NO" textAlignment="natural" translatesAutoresizingMaskIntoConstraints="NO" id="FOe-ip-Pv6">
                                        <rect key="frame" x="0.0" y="0.0" width="375" height="615"/>
                                        <autoresizingMask key="autoresizingMask" flexibleMaxX="YES" flexibleMaxY="YES"/>
                                        <color key="backgroundColor" systemColor="systemBackgroundColor"/>
                                        <string key="text">Q1. Write a function which receives a float and an int from main( ), finds the product of these two and returns the product which is printed through main( ).
#include&lt; stdio.h&gt;
#include&lt; conio.h&gt;
float mul(int,float);
void main()
{
int a;
float b,result;
clrscr();
printf("Enter values of a and b\n");
scanf("%d%f",&amp;a, &amp;b);
result=mul(a, b);
printf("Multiplication=%f",result);
getch();
}
float mul(int m,float n)
{
float t;
t=m*n;
return (t);
}

Output:
Enter values of a and b
21 45
Multiplication= 945.00</string>
                                        <color key="textColor" systemColor="labelColor"/>
                                        <fontDescription key="fontDescription" type="system" pointSize="14"/>
                                        <textInputTraits key="textInputTraits" autocapitalizationType="sentences"/>
                                    </textView>
                                </subviews>
                                <viewLayoutGuide key="contentLayoutGuide" id="AoF-WL-D1z"/>
                                <viewLayoutGuide key="frameLayoutGuide" id="wSp-nB-2kc"/>
                            </scrollView>
                        </subviews>
                        <viewLayoutGuide key="safeArea" id="wUP-aQ-JAR"/>
                        <color key="backgroundColor" systemColor="systemBackgroundColor"/>
                    </view>
                </viewController>
                <placeholder placeholderIdentifier="IBFirstResponder" id="qFe-tM-F4z" userLabel="First Responder" customClass="UIResponder" sceneMemberID="firstResponder"/>
            </objects>
            <point key="canvasLocation" x="2084" y="4271"/>
        </scene>
        <!--View Controller-->
        <scene sceneID="wYJ-hX-3ko">
            <objects>
                <viewController id="XDo-qD-Wzu" sceneMemberID="viewController">
                    <view key="view" contentMode="scaleToFill" id="vde-R8-0wO">
                        <rect key="frame" x="0.0" y="0.0" width="375" height="667"/>
                        <autoresizingMask key="autoresizingMask" widthSizable="YES" heightSizable="YES"/>
                        <subviews>
                            <button opaque="NO" contentMode="scaleToFill" fixedFrame="YES" contentHorizontalAlignment="center" contentVerticalAlignment="center" buttonType="system" lineBreakMode="middleTruncation" translatesAutoresizingMaskIntoConstraints="NO" id="c56-TD-gbq">
                                <rect key="frame" x="16" y="9" width="39" height="35"/>
                                <autoresizingMask key="autoresizingMask" flexibleMaxX="YES" flexibleMaxY="YES"/>
                                <state key="normal" title="Button"/>
                                <buttonConfiguration key="configuration" style="plain" title="←"/>
                            </button>
                            <scrollView clipsSubviews="YES" multipleTouchEnabled="YES" contentMode="scaleToFill" fixedFrame="YES" translatesAutoresizingMaskIntoConstraints="NO" id="NCr-Kd-AGd">
                                <rect key="frame" x="0.0" y="52" width="375" height="615"/>
                                <autoresizingMask key="autoresizingMask" flexibleMaxX="YES" flexibleMaxY="YES"/>
                                <subviews>
                                    <textView clipsSubviews="YES" multipleTouchEnabled="YES" contentMode="scaleToFill" fixedFrame="YES" editable="NO" textAlignment="natural" translatesAutoresizingMaskIntoConstraints="NO" id="7xY-aQ-3al">
                                        <rect key="frame" x="0.0" y="0.0" width="375" height="615"/>
                                        <autoresizingMask key="autoresizingMask" flexibleMaxX="YES" flexibleMaxY="YES"/>
                                        <color key="backgroundColor" systemColor="systemBackgroundColor"/>
                                        <mutableString key="text">#include&lt; stdio.h&gt;
#include&lt; conio.h&gt;
void main()
{
int a,*p;
char b,*q;
float c,*r;
clrscr();
printf("int data type requires %d bytes \n", sizeof(int ));
printf("char data type requires %d bytes \n", sizeof(char ));
printf("float data type requires %d bytes \n", sizeof(float));
printf("int pointer requires %d bytes \n", sizeof(int *));
printf("char pointer requires %d bytes \n", sizeof(char *));
printf("float pointer requires %d bytes \n", sizeof(float *));
getch();
}

Output:
int data type requires 2 bytes
char data type requires 1 bytes
float data type requires 4 bytes
int pointer requires 2 bytes
char pointer requires 2 bytes
float pointer requires 2 bytes

Explanation:
In 32 bit operating system, all pointer type variables requires only two bytes for int, float and char pointers. In ANSCII C or 64 bit operating system, all pointer type variables requires four bytes for int, float and char pointers</mutableString>
                                        <color key="textColor" systemColor="labelColor"/>
                                        <fontDescription key="fontDescription" type="system" pointSize="14"/>
                                        <textInputTraits key="textInputTraits" autocapitalizationType="sentences"/>
                                    </textView>
                                </subviews>
                                <viewLayoutGuide key="contentLayoutGuide" id="dpN-Jd-Rpa"/>
                                <viewLayoutGuide key="frameLayoutGuide" id="Hzs-Bf-idy"/>
                            </scrollView>
                        </subviews>
                        <viewLayoutGuide key="safeArea" id="FMi-L6-fC3"/>
                        <color key="backgroundColor" systemColor="systemBackgroundColor"/>
                    </view>
                </viewController>
                <placeholder placeholderIdentifier="IBFirstResponder" id="gyD-nE-0Hk" userLabel="First Responder" customClass="UIResponder" sceneMemberID="firstResponder"/>
            </objects>
            <point key="canvasLocation" x="2737" y="4271"/>
        </scene>
        <!--View Controller-->
        <scene sceneID="cCi-q1-4ce">
            <objects>
                <viewController id="fn8-lu-ONS" sceneMemberID="viewController">
                    <view key="view" contentMode="scaleToFill" id="iXR-Mg-TZY">
                        <rect key="frame" x="0.0" y="0.0" width="375" height="667"/>
                        <autoresizingMask key="autoresizingMask" widthSizable="YES" heightSizable="YES"/>
                        <subviews>
                            <button opaque="NO" contentMode="scaleToFill" fixedFrame="YES" contentHorizontalAlignment="center" contentVerticalAlignment="center" buttonType="system" lineBreakMode="middleTruncation" translatesAutoresizingMaskIntoConstraints="NO" id="fZ6-zT-npb">
                                <rect key="frame" x="16" y="9" width="39" height="35"/>
                                <autoresizingMask key="autoresizingMask" flexibleMaxX="YES" flexibleMaxY="YES"/>
                                <state key="normal" title="Button"/>
                                <buttonConfiguration key="configuration" style="plain" title="←"/>
                            </button>
                            <scrollView clipsSubviews="YES" multipleTouchEnabled="YES" contentMode="scaleToFill" fixedFrame="YES" translatesAutoresizingMaskIntoConstraints="NO" id="sZ4-OU-iJG">
                                <rect key="frame" x="0.0" y="52" width="375" height="615"/>
                                <autoresizingMask key="autoresizingMask" flexibleMaxX="YES" flexibleMaxY="YES"/>
                                <subviews>
                                    <textView clipsSubviews="YES" multipleTouchEnabled="YES" contentMode="scaleToFill" fixedFrame="YES" editable="NO" textAlignment="natural" translatesAutoresizingMaskIntoConstraints="NO" id="Tu5-ad-1lo">
                                        <rect key="frame" x="0.0" y="0.0" width="375" height="615"/>
                                        <autoresizingMask key="autoresizingMask" flexibleMaxX="YES" flexibleMaxY="YES"/>
                                        <color key="backgroundColor" systemColor="systemBackgroundColor"/>
                                        <string key="text">#include&lt; stdio.h &gt;
#include&lt; conio.h &gt;
void main ()
{
int a,b,c;
void sum (int ,int);
/only mentioning data type is also allowed in function prototype/
printf(“\n Enter two number ”);
scanf(“%d %d ”&amp; a, &amp;b);
sum (a, b);
getch();
}
void sum (int a, int b)
{
int c;
c=a + b;
printf(“\n Addition is =%d ”,c);
}

Output:
Enter two number
21
31
Addition is =52</string>
                                        <color key="textColor" systemColor="labelColor"/>
                                        <fontDescription key="fontDescription" type="system" pointSize="14"/>
                                        <textInputTraits key="textInputTraits" autocapitalizationType="sentences"/>
                                    </textView>
                                </subviews>
                                <viewLayoutGuide key="contentLayoutGuide" id="oZf-mN-M8t"/>
                                <viewLayoutGuide key="frameLayoutGuide" id="QEg-uT-v66"/>
                            </scrollView>
                        </subviews>
                        <viewLayoutGuide key="safeArea" id="Uxl-bQ-aW0"/>
                        <color key="backgroundColor" systemColor="systemBackgroundColor"/>
                    </view>
                </viewController>
                <placeholder placeholderIdentifier="IBFirstResponder" id="OmL-Ld-bGh" userLabel="First Responder" customClass="UIResponder" sceneMemberID="firstResponder"/>
            </objects>
            <point key="canvasLocation" x="3388" y="4271"/>
        </scene>
        <!--View Controller-->
        <scene sceneID="HNp-VX-WOH">
            <objects>
                <viewController id="qQU-GA-gcn" sceneMemberID="viewController">
                    <view key="view" contentMode="scaleToFill" id="azY-FV-l4N">
                        <rect key="frame" x="0.0" y="0.0" width="375" height="667"/>
                        <autoresizingMask key="autoresizingMask" widthSizable="YES" heightSizable="YES"/>
                        <subviews>
                            <button opaque="NO" contentMode="scaleToFill" fixedFrame="YES" contentHorizontalAlignment="center" contentVerticalAlignment="center" buttonType="system" lineBreakMode="middleTruncation" translatesAutoresizingMaskIntoConstraints="NO" id="oii-2N-dav">
                                <rect key="frame" x="16" y="9" width="39" height="35"/>
                                <autoresizingMask key="autoresizingMask" flexibleMaxX="YES" flexibleMaxY="YES"/>
                                <state key="normal" title="Button"/>
                                <buttonConfiguration key="configuration" style="plain" title="←"/>
                            </button>
                            <scrollView clipsSubviews="YES" multipleTouchEnabled="YES" contentMode="scaleToFill" fixedFrame="YES" translatesAutoresizingMaskIntoConstraints="NO" id="Vtk-Pf-eGR">
                                <rect key="frame" x="0.0" y="52" width="375" height="615"/>
                                <autoresizingMask key="autoresizingMask" flexibleMaxX="YES" flexibleMaxY="YES"/>
                                <subviews>
                                    <textView clipsSubviews="YES" multipleTouchEnabled="YES" contentMode="scaleToFill" fixedFrame="YES" editable="NO" textAlignment="natural" translatesAutoresizingMaskIntoConstraints="NO" id="g65-L2-lX0">
                                        <rect key="frame" x="0.0" y="0.0" width="375" height="615"/>
                                        <autoresizingMask key="autoresizingMask" flexibleMaxX="YES" flexibleMaxY="YES"/>
                                        <color key="backgroundColor" systemColor="systemBackgroundColor"/>
                                        <string key="text">#include&lt; stdio.h&gt;
#include&lt; conio.h&gt;
void main()
{
int a[3];
int *p,i;
p=a;
clrscr();
printf("Enter array elements: \n");
for(i=0;i&lt;3;i++)
{
scanf("%d",&amp;(*p));
p++;
}
p=a;
printf("\n Array Elements are: ");
for(i=0;i&lt;3;i++)
{
printf("Array element at [%d] index is %d .\n ",i ,*p);
p++;
}
getch();
}

Output:
Enter array elements:
1
2
3
Array Elements are:
Array element at [0] index is 1.
Array element at [1] index is 2.
Array element at [2] index is 3.</string>
                                        <color key="textColor" systemColor="labelColor"/>
                                        <fontDescription key="fontDescription" type="system" pointSize="14"/>
                                        <textInputTraits key="textInputTraits" autocapitalizationType="sentences"/>
                                    </textView>
                                </subviews>
                                <viewLayoutGuide key="contentLayoutGuide" id="hCE-Sx-Rof"/>
                                <viewLayoutGuide key="frameLayoutGuide" id="DQx-WC-GU6"/>
                            </scrollView>
                        </subviews>
                        <viewLayoutGuide key="safeArea" id="Akx-DI-XHN"/>
                        <color key="backgroundColor" systemColor="systemBackgroundColor"/>
                    </view>
                </viewController>
                <placeholder placeholderIdentifier="IBFirstResponder" id="Ett-BM-VX5" userLabel="First Responder" customClass="UIResponder" sceneMemberID="firstResponder"/>
            </objects>
            <point key="canvasLocation" x="4020" y="4271"/>
        </scene>
        <!--View Controller-->
        <scene sceneID="nfR-8I-xuo">
            <objects>
                <viewController id="Iet-IV-xff" sceneMemberID="viewController">
                    <view key="view" contentMode="scaleToFill" id="isB-ms-gz5">
                        <rect key="frame" x="0.0" y="0.0" width="375" height="667"/>
                        <autoresizingMask key="autoresizingMask" widthSizable="YES" heightSizable="YES"/>
                        <subviews>
                            <button opaque="NO" contentMode="scaleToFill" fixedFrame="YES" contentHorizontalAlignment="center" contentVerticalAlignment="center" buttonType="system" lineBreakMode="middleTruncation" translatesAutoresizingMaskIntoConstraints="NO" id="HWu-Wi-BdE">
                                <rect key="frame" x="16" y="9" width="39" height="35"/>
                                <autoresizingMask key="autoresizingMask" flexibleMaxX="YES" flexibleMaxY="YES"/>
                                <state key="normal" title="Button"/>
                                <buttonConfiguration key="configuration" style="plain" title="←"/>
                            </button>
                            <scrollView clipsSubviews="YES" multipleTouchEnabled="YES" contentMode="scaleToFill" fixedFrame="YES" translatesAutoresizingMaskIntoConstraints="NO" id="6Kg-N7-rQW">
                                <rect key="frame" x="0.0" y="52" width="375" height="615"/>
                                <autoresizingMask key="autoresizingMask" flexibleMaxX="YES" flexibleMaxY="YES"/>
                                <subviews>
                                    <textView clipsSubviews="YES" multipleTouchEnabled="YES" contentMode="scaleToFill" fixedFrame="YES" editable="NO" textAlignment="natural" translatesAutoresizingMaskIntoConstraints="NO" id="c9p-nT-0dT">
                                        <rect key="frame" x="0.0" y="0.0" width="375" height="615"/>
                                        <autoresizingMask key="autoresizingMask" flexibleMaxX="YES" flexibleMaxY="YES"/>
                                        <color key="backgroundColor" systemColor="systemBackgroundColor"/>
                                        <string key="text">#include&lt; conio.h&gt;
#include&lt; stdio.h&gt;
void array(int *a,int j);
void main()
{
int a[5]={21,16,7,8,10};
clrscr();
array(&amp;a[0],5);
//or array( a, 5);
getch();
}
void array(int *a, int j)
{
int i;
for(i=0; i&lt;= (j-1); i++)
{
if(*a % 2==0)
{
printf("%d is even number.\n",*a);
}
a=a+
1;
}
}

Output:
16 is even number.
8 is even number.
10 is even numbe</string>
                                        <color key="textColor" systemColor="labelColor"/>
                                        <fontDescription key="fontDescription" type="system" pointSize="14"/>
                                        <textInputTraits key="textInputTraits" autocapitalizationType="sentences"/>
                                    </textView>
                                </subviews>
                                <viewLayoutGuide key="contentLayoutGuide" id="DSZ-Bk-UNl"/>
                                <viewLayoutGuide key="frameLayoutGuide" id="Mos-ov-COY"/>
                            </scrollView>
                        </subviews>
                        <viewLayoutGuide key="safeArea" id="iUL-dg-OPc"/>
                        <color key="backgroundColor" systemColor="systemBackgroundColor"/>
                    </view>
                </viewController>
                <placeholder placeholderIdentifier="IBFirstResponder" id="1yJ-t7-eGb" userLabel="First Responder" customClass="UIResponder" sceneMemberID="firstResponder"/>
            </objects>
            <point key="canvasLocation" x="4673" y="4271"/>
        </scene>
        <!--View Controller-->
        <scene sceneID="AHG-KM-HXy">
            <objects>
                <viewController id="hOb-Qe-E1e" sceneMemberID="viewController">
                    <view key="view" contentMode="scaleToFill" id="b96-YZ-U94">
                        <rect key="frame" x="0.0" y="0.0" width="375" height="667"/>
                        <autoresizingMask key="autoresizingMask" widthSizable="YES" heightSizable="YES"/>
                        <subviews>
                            <button opaque="NO" contentMode="scaleToFill" fixedFrame="YES" contentHorizontalAlignment="center" contentVerticalAlignment="center" buttonType="system" lineBreakMode="middleTruncation" translatesAutoresizingMaskIntoConstraints="NO" id="7tn-lW-x7Q">
                                <rect key="frame" x="16" y="9" width="39" height="35"/>
                                <autoresizingMask key="autoresizingMask" flexibleMaxX="YES" flexibleMaxY="YES"/>
                                <state key="normal" title="Button"/>
                                <buttonConfiguration key="configuration" style="plain" title="←"/>
                            </button>
                            <scrollView clipsSubviews="YES" multipleTouchEnabled="YES" contentMode="scaleToFill" fixedFrame="YES" translatesAutoresizingMaskIntoConstraints="NO" id="ysh-sX-2PP">
                                <rect key="frame" x="0.0" y="52" width="375" height="615"/>
                                <autoresizingMask key="autoresizingMask" flexibleMaxX="YES" flexibleMaxY="YES"/>
                                <subviews>
                                    <textView clipsSubviews="YES" multipleTouchEnabled="YES" contentMode="scaleToFill" fixedFrame="YES" editable="NO" textAlignment="natural" translatesAutoresizingMaskIntoConstraints="NO" id="6ZN-cE-VTw">
                                        <rect key="frame" x="0.0" y="0.0" width="375" height="615"/>
                                        <autoresizingMask key="autoresizingMask" flexibleMaxX="YES" flexibleMaxY="YES"/>
                                        <color key="backgroundColor" systemColor="systemBackgroundColor"/>
                                        <mutableString key="text">#include &lt; stdio.h&gt;
#include&lt; conio.h&gt;
void main()
{
int a = 21;
int *p1; //this can store the address of variable a
int **p2;
/* This can store the address of pointer variable p1 only. It cannot store the address of variable ‘a’ because double pointer stores address of another pointer type of variable and not address of value variable */
// single pointer type of variable stores address of value variable of same type
p1 = &amp; a;
// double pointer type of variable stores address of another single type of pointer variable
p2 = &amp; p1;
printf("Address of a = %u\n", &amp;a);
printf("Address of p1 = %u\n", &amp;p1);
printf("Address of p2 = %u\n", &amp;p2);
// *p2 gives value at p1 pointer that is address of 'a' variable
printf("Value at the address stored by p2 = %u\n", *p2);
printf("Value at the address stored by p1 = %d\n\n", *p1);
// **p2 print the value of variable a
printf("Value of **p2 = %d\n", **p2);
getch();
}

Output:
Address of a = 656521
Address of p1 = 656581 Address of p2 = 656591
Value at the address stored by p2 = 656581
Value at the address stored by p1 = 21
Value of **p2 = 21</mutableString>
                                        <color key="textColor" systemColor="labelColor"/>
                                        <fontDescription key="fontDescription" type="system" pointSize="14"/>
                                        <textInputTraits key="textInputTraits" autocapitalizationType="sentences"/>
                                    </textView>
                                </subviews>
                                <viewLayoutGuide key="contentLayoutGuide" id="vWN-yT-QJz"/>
                                <viewLayoutGuide key="frameLayoutGuide" id="9Qr-sF-DhX"/>
                            </scrollView>
                        </subviews>
                        <viewLayoutGuide key="safeArea" id="2nA-bN-lrP"/>
                        <color key="backgroundColor" systemColor="systemBackgroundColor"/>
                    </view>
                </viewController>
                <placeholder placeholderIdentifier="IBFirstResponder" id="QJH-W3-5Yf" userLabel="First Responder" customClass="UIResponder" sceneMemberID="firstResponder"/>
            </objects>
            <point key="canvasLocation" x="5374" y="4271"/>
        </scene>
        <!--View Controller-->
        <scene sceneID="Klj-qO-sWm">
            <objects>
                <viewController id="vFP-xH-KC1" sceneMemberID="viewController">
                    <view key="view" contentMode="scaleToFill" id="vzV-iH-HMm">
                        <rect key="frame" x="0.0" y="0.0" width="375" height="667"/>
                        <autoresizingMask key="autoresizingMask" widthSizable="YES" heightSizable="YES"/>
                        <subviews>
                            <button opaque="NO" contentMode="scaleToFill" fixedFrame="YES" contentHorizontalAlignment="center" contentVerticalAlignment="center" buttonType="system" lineBreakMode="middleTruncation" translatesAutoresizingMaskIntoConstraints="NO" id="EqT-L9-EiJ">
                                <rect key="frame" x="16" y="9" width="39" height="35"/>
                                <autoresizingMask key="autoresizingMask" flexibleMaxX="YES" flexibleMaxY="YES"/>
                                <state key="normal" title="Button"/>
                                <buttonConfiguration key="configuration" style="plain" title="←"/>
                            </button>
                            <scrollView clipsSubviews="YES" multipleTouchEnabled="YES" contentMode="scaleToFill" fixedFrame="YES" translatesAutoresizingMaskIntoConstraints="NO" id="SxF-DU-bJd">
                                <rect key="frame" x="0.0" y="52" width="375" height="615"/>
                                <autoresizingMask key="autoresizingMask" flexibleMaxX="YES" flexibleMaxY="YES"/>
                                <subviews>
                                    <textView clipsSubviews="YES" multipleTouchEnabled="YES" contentMode="scaleToFill" fixedFrame="YES" editable="NO" textAlignment="natural" translatesAutoresizingMaskIntoConstraints="NO" id="FAH-GY-Ebm">
                                        <rect key="frame" x="0.0" y="0.0" width="375" height="615"/>
                                        <autoresizingMask key="autoresizingMask" flexibleMaxX="YES" flexibleMaxY="YES"/>
                                        <color key="backgroundColor" systemColor="systemBackgroundColor"/>
                                        <string key="text">#include&lt; stdio.h&gt;
#include&lt; conio.h&gt;
char * demo(void);
void main()
{
int i;
char *array[4];
clrscr();
array = demo();
printf(“ Strings in array are:\n”);
for(i = 0; i &lt; 4; i++)
{
printf("%s \t", array[i]);
}
getch();
}

char * demo(void)
{
char *string[4] = {"Kedar", "Amol", "Vijay", "Samit"};
return string;
}

Output:
Strings in array are:
Kedar Amol Vijay Samit</string>
                                        <color key="textColor" systemColor="labelColor"/>
                                        <fontDescription key="fontDescription" type="system" pointSize="14"/>
                                        <textInputTraits key="textInputTraits" autocapitalizationType="sentences"/>
                                    </textView>
                                </subviews>
                                <viewLayoutGuide key="contentLayoutGuide" id="Tgu-ob-dNm"/>
                                <viewLayoutGuide key="frameLayoutGuide" id="kPr-fz-Zjy"/>
                            </scrollView>
                        </subviews>
                        <viewLayoutGuide key="safeArea" id="1oO-fg-X4l"/>
                        <color key="backgroundColor" systemColor="systemBackgroundColor"/>
                    </view>
                </viewController>
                <placeholder placeholderIdentifier="IBFirstResponder" id="o5A-dF-gc1" userLabel="First Responder" customClass="UIResponder" sceneMemberID="firstResponder"/>
            </objects>
            <point key="canvasLocation" x="6065" y="4271"/>
        </scene>
        <!--View Controller-->
        <scene sceneID="tA9-33-9uK">
            <objects>
                <viewController id="VgD-fA-GhR" sceneMemberID="viewController">
                    <view key="view" contentMode="scaleToFill" id="gEC-3R-sPr">
                        <rect key="frame" x="0.0" y="0.0" width="375" height="667"/>
                        <autoresizingMask key="autoresizingMask" widthSizable="YES" heightSizable="YES"/>
                        <subviews>
                            <button opaque="NO" contentMode="scaleToFill" fixedFrame="YES" contentHorizontalAlignment="center" contentVerticalAlignment="center" buttonType="system" lineBreakMode="middleTruncation" translatesAutoresizingMaskIntoConstraints="NO" id="UrI-UD-V1L">
                                <rect key="frame" x="16" y="9" width="39" height="35"/>
                                <autoresizingMask key="autoresizingMask" flexibleMaxX="YES" flexibleMaxY="YES"/>
                                <state key="normal" title="Button"/>
                                <buttonConfiguration key="configuration" style="plain" title="←"/>
                            </button>
                            <scrollView clipsSubviews="YES" multipleTouchEnabled="YES" contentMode="scaleToFill" fixedFrame="YES" translatesAutoresizingMaskIntoConstraints="NO" id="Gnx-ZO-5Xl">
                                <rect key="frame" x="0.0" y="52" width="375" height="615"/>
                                <autoresizingMask key="autoresizingMask" flexibleMaxX="YES" flexibleMaxY="YES"/>
                                <subviews>
                                    <textView clipsSubviews="YES" multipleTouchEnabled="YES" contentMode="scaleToFill" fixedFrame="YES" editable="NO" textAlignment="natural" translatesAutoresizingMaskIntoConstraints="NO" id="6gH-7g-Qwe">
                                        <rect key="frame" x="0.0" y="0.0" width="375" height="615"/>
                                        <autoresizingMask key="autoresizingMask" flexibleMaxX="YES" flexibleMaxY="YES"/>
                                        <color key="backgroundColor" systemColor="systemBackgroundColor"/>
                                        <mutableString key="text">nt sum (int num1, int num2)
{
return num1+num2;
}
void main()
{
/* The following two lines can also be written in a single
statement like this: int (*fp)(int, int) = ∑ */
int (*fp) (int, int);
fp = sum;
//Calling function using function pointer
int op1 = fp(10, 11);
//Calling function in normal way using function name
int op2 = sum(10, 11);

printf("Output1: Function Call using function pointer: %d",op1);
printf("\nOutput2: Function Call using function name: %d", op2);
return 0;
}


Output:
Output1: Function Call using function pointer: 21
Output2: Function Call using function name: 21</mutableString>
                                        <color key="textColor" systemColor="labelColor"/>
                                        <fontDescription key="fontDescription" type="system" pointSize="14"/>
                                        <textInputTraits key="textInputTraits" autocapitalizationType="sentences"/>
                                    </textView>
                                </subviews>
                                <viewLayoutGuide key="contentLayoutGuide" id="k6S-rC-Xs8"/>
                                <viewLayoutGuide key="frameLayoutGuide" id="vLv-pl-bLG"/>
                            </scrollView>
                        </subviews>
                        <viewLayoutGuide key="safeArea" id="X9C-e3-MW6"/>
                        <color key="backgroundColor" systemColor="systemBackgroundColor"/>
                    </view>
                </viewController>
                <placeholder placeholderIdentifier="IBFirstResponder" id="RYT-7r-cWd" userLabel="First Responder" customClass="UIResponder" sceneMemberID="firstResponder"/>
            </objects>
            <point key="canvasLocation" x="6718" y="4271"/>
        </scene>
        <!--View Controller-->
        <scene sceneID="eqB-jH-Ar8">
            <objects>
                <viewController id="9m8-aj-3rh" sceneMemberID="viewController">
                    <view key="view" contentMode="scaleToFill" id="CK3-2m-uYu">
                        <rect key="frame" x="0.0" y="0.0" width="375" height="667"/>
                        <autoresizingMask key="autoresizingMask" widthSizable="YES" heightSizable="YES"/>
                        <subviews>
                            <button opaque="NO" contentMode="scaleToFill" fixedFrame="YES" contentHorizontalAlignment="center" contentVerticalAlignment="center" buttonType="system" lineBreakMode="middleTruncation" translatesAutoresizingMaskIntoConstraints="NO" id="f9A-KD-cQn">
                                <rect key="frame" x="16" y="9" width="39" height="35"/>
                                <autoresizingMask key="autoresizingMask" flexibleMaxX="YES" flexibleMaxY="YES"/>
                                <state key="normal" title="Button"/>
                                <buttonConfiguration key="configuration" style="plain" title="←"/>
                            </button>
                            <scrollView clipsSubviews="YES" multipleTouchEnabled="YES" contentMode="scaleToFill" fixedFrame="YES" translatesAutoresizingMaskIntoConstraints="NO" id="eOt-B5-PGs">
                                <rect key="frame" x="0.0" y="52" width="375" height="615"/>
                                <autoresizingMask key="autoresizingMask" flexibleMaxX="YES" flexibleMaxY="YES"/>
                                <subviews>
                                    <textView clipsSubviews="YES" multipleTouchEnabled="YES" contentMode="scaleToFill" fixedFrame="YES" editable="NO" textAlignment="natural" translatesAutoresizingMaskIntoConstraints="NO" id="oD5-FS-aTu">
                                        <rect key="frame" x="0.0" y="0.0" width="375" height="615"/>
                                        <autoresizingMask key="autoresizingMask" flexibleMaxX="YES" flexibleMaxY="YES"/>
                                        <color key="backgroundColor" systemColor="systemBackgroundColor"/>
                                        <string key="text">#include&lt; stdio.h &gt;
#include&lt; conio.h &gt;
void swap(int*,int*);
void main()
{
int a,b;
clrscr();
printf("Enter values of a and b: \n");
scanf("%d%d",&amp;a,&amp;b);
swap(&amp; a,&amp; b);
getch();
}
void swap(int*m,int*n)
{
int t;
t=*m;
*m=*n;
*n=t;
printf("After swapping, values of \na=%d\nb=%d",*m,*n);
}


Output:
Enter values of a and b:
10 20
After swapping, values of
a=20
b=10</string>
                                        <color key="textColor" systemColor="labelColor"/>
                                        <fontDescription key="fontDescription" type="system" pointSize="14"/>
                                        <textInputTraits key="textInputTraits" autocapitalizationType="sentences"/>
                                    </textView>
                                </subviews>
                                <viewLayoutGuide key="contentLayoutGuide" id="kss-UI-lkd"/>
                                <viewLayoutGuide key="frameLayoutGuide" id="shW-dH-vva"/>
                            </scrollView>
                        </subviews>
                        <viewLayoutGuide key="safeArea" id="PDd-Ix-GZm"/>
                        <color key="backgroundColor" systemColor="systemBackgroundColor"/>
                    </view>
                </viewController>
                <placeholder placeholderIdentifier="IBFirstResponder" id="Xm0-Zx-NiH" userLabel="First Responder" customClass="UIResponder" sceneMemberID="firstResponder"/>
            </objects>
            <point key="canvasLocation" x="7369" y="4271"/>
        </scene>
        <!--View Controller-->
        <scene sceneID="y57-3y-a3u">
            <objects>
                <viewController id="thV-bF-Tx7" sceneMemberID="viewController">
                    <view key="view" contentMode="scaleToFill" id="1se-9W-6ui">
                        <rect key="frame" x="0.0" y="0.0" width="375" height="667"/>
                        <autoresizingMask key="autoresizingMask" widthSizable="YES" heightSizable="YES"/>
                        <subviews>
                            <button opaque="NO" contentMode="scaleToFill" fixedFrame="YES" contentHorizontalAlignment="center" contentVerticalAlignment="center" buttonType="system" lineBreakMode="middleTruncation" translatesAutoresizingMaskIntoConstraints="NO" id="7CP-cH-8aX">
                                <rect key="frame" x="16" y="9" width="39" height="35"/>
                                <autoresizingMask key="autoresizingMask" flexibleMaxX="YES" flexibleMaxY="YES"/>
                                <state key="normal" title="Button"/>
                                <buttonConfiguration key="configuration" style="plain" title="←"/>
                            </button>
                            <scrollView clipsSubviews="YES" multipleTouchEnabled="YES" contentMode="scaleToFill" fixedFrame="YES" translatesAutoresizingMaskIntoConstraints="NO" id="S3y-JH-KS5">
                                <rect key="frame" x="0.0" y="52" width="375" height="615"/>
                                <autoresizingMask key="autoresizingMask" flexibleMaxX="YES" flexibleMaxY="YES"/>
                                <subviews>
                                    <textView clipsSubviews="YES" multipleTouchEnabled="YES" contentMode="scaleToFill" fixedFrame="YES" editable="NO" textAlignment="natural" translatesAutoresizingMaskIntoConstraints="NO" id="C2G-y7-oTn">
                                        <rect key="frame" x="0.0" y="0.0" width="375" height="615"/>
                                        <autoresizingMask key="autoresizingMask" flexibleMaxX="YES" flexibleMaxY="YES"/>
                                        <color key="backgroundColor" systemColor="systemBackgroundColor"/>
                                        <string key="text">#include&lt; stdio.h &gt;
#include&lt; conio.h &gt;
void main()
{
int a[10], i, n,*p;
clrscr();
printf(“Enter five elements in the array\n”);
for(i=0; i&lt;5; i++)
{
scanf("%d", &amp;a[i]);
}
p=&amp;a[0];
printf(“ Number divisible by 5 are\n”);
for(i=0; i&lt;5; i++)
{
if(*p%5==0)
{
printf("\t%d",*p);
}
p++;
}
getch();
}


Output:
Enter five elements in the array
10 21 31 40 50
Number divisible by 5 are 10 40 50</string>
                                        <color key="textColor" systemColor="labelColor"/>
                                        <fontDescription key="fontDescription" type="system" pointSize="14"/>
                                        <textInputTraits key="textInputTraits" autocapitalizationType="sentences"/>
                                    </textView>
                                </subviews>
                                <viewLayoutGuide key="contentLayoutGuide" id="KK9-HY-6Jr"/>
                                <viewLayoutGuide key="frameLayoutGuide" id="r89-BM-qk3"/>
                            </scrollView>
                        </subviews>
                        <viewLayoutGuide key="safeArea" id="p3G-ng-0Sf"/>
                        <color key="backgroundColor" systemColor="systemBackgroundColor"/>
                    </view>
                </viewController>
                <placeholder placeholderIdentifier="IBFirstResponder" id="7fV-sx-L6a" userLabel="First Responder" customClass="UIResponder" sceneMemberID="firstResponder"/>
            </objects>
            <point key="canvasLocation" x="8001" y="4271"/>
        </scene>
        <!--View Controller-->
        <scene sceneID="W7v-4b-XL6">
            <objects>
                <viewController id="Fsu-Lf-fq0" sceneMemberID="viewController">
                    <view key="view" contentMode="scaleToFill" id="8MR-Vp-He1">
                        <rect key="frame" x="0.0" y="0.0" width="375" height="667"/>
                        <autoresizingMask key="autoresizingMask" widthSizable="YES" heightSizable="YES"/>
                        <subviews>
                            <button opaque="NO" contentMode="scaleToFill" fixedFrame="YES" contentHorizontalAlignment="center" contentVerticalAlignment="center" buttonType="system" lineBreakMode="middleTruncation" translatesAutoresizingMaskIntoConstraints="NO" id="rAM-Ik-PJj">
                                <rect key="frame" x="16" y="9" width="39" height="35"/>
                                <autoresizingMask key="autoresizingMask" flexibleMaxX="YES" flexibleMaxY="YES"/>
                                <state key="normal" title="Button"/>
                                <buttonConfiguration key="configuration" style="plain" title="←"/>
                            </button>
                            <scrollView clipsSubviews="YES" multipleTouchEnabled="YES" contentMode="scaleToFill" fixedFrame="YES" translatesAutoresizingMaskIntoConstraints="NO" id="48c-vN-IKs">
                                <rect key="frame" x="0.0" y="52" width="375" height="615"/>
                                <autoresizingMask key="autoresizingMask" flexibleMaxX="YES" flexibleMaxY="YES"/>
                                <subviews>
                                    <textView clipsSubviews="YES" multipleTouchEnabled="YES" contentMode="scaleToFill" fixedFrame="YES" editable="NO" textAlignment="natural" translatesAutoresizingMaskIntoConstraints="NO" id="bgu-HY-r3H">
                                        <rect key="frame" x="0.0" y="0.0" width="375" height="615"/>
                                        <autoresizingMask key="autoresizingMask" flexibleMaxX="YES" flexibleMaxY="YES"/>
                                        <color key="backgroundColor" systemColor="systemBackgroundColor"/>
                                        <mutableString key="text">#include &lt; stdio.h &gt;
#include&lt; conio.h &gt;
struct student
{
char name[10];
int roll_no;
} stud;
void main(void)
{
struct student *pt;
pt=&amp; stud;
clrscr();
printf(“Enter roll number \n”);
scanf(“%d”,&amp;stud.roll_no);
//or scanf(“%d”,&amp; pt-&gt;roll_no);
printf(“Enter name \n”);
scanf(“%s”, stud.name); //or scanf(“%s”,pt-&gt;name);
printf(“\n Accessing student structure data members using pointer variable ”);
printf(“\n Name: %s Roll Number: %d ”, pt→name, pt→roll_no);
getch();
}


Output:
Enter roll number
21
Enter name
xyz
Accessing student structure data members using pointer variable
Name: xyz Roll Number: 21

Explanation:
Note: -&gt; (arrow operator) is used to access the structure’s data member using structure’s pointer type variable.
Instead of pt-&gt;name we can also use (*pt).name.
Here parentheses around *pt are necessary because the dot operator ‘.’ has a higher precedence than ‘ * ‘ .</mutableString>
                                        <color key="textColor" systemColor="labelColor"/>
                                        <fontDescription key="fontDescription" type="system" pointSize="14"/>
                                        <textInputTraits key="textInputTraits" autocapitalizationType="sentences"/>
                                    </textView>
                                </subviews>
                                <viewLayoutGuide key="contentLayoutGuide" id="AsX-fh-T1J"/>
                                <viewLayoutGuide key="frameLayoutGuide" id="Pe4-Zt-onz"/>
                            </scrollView>
                        </subviews>
                        <viewLayoutGuide key="safeArea" id="rq6-zG-eG2"/>
                        <color key="backgroundColor" systemColor="systemBackgroundColor"/>
                    </view>
                </viewController>
                <placeholder placeholderIdentifier="IBFirstResponder" id="WiS-ay-rdV" userLabel="First Responder" customClass="UIResponder" sceneMemberID="firstResponder"/>
            </objects>
            <point key="canvasLocation" x="2089" y="4956"/>
        </scene>
        <!--View Controller-->
        <scene sceneID="4PN-3L-sR7">
            <objects>
                <viewController id="nH3-KU-oyN" sceneMemberID="viewController">
                    <view key="view" contentMode="scaleToFill" id="uqL-r4-qRG">
                        <rect key="frame" x="0.0" y="0.0" width="375" height="667"/>
                        <autoresizingMask key="autoresizingMask" widthSizable="YES" heightSizable="YES"/>
                        <subviews>
                            <button opaque="NO" contentMode="scaleToFill" fixedFrame="YES" contentHorizontalAlignment="center" contentVerticalAlignment="center" buttonType="system" lineBreakMode="middleTruncation" translatesAutoresizingMaskIntoConstraints="NO" id="Cj8-cq-qi2">
                                <rect key="frame" x="16" y="9" width="39" height="35"/>
                                <autoresizingMask key="autoresizingMask" flexibleMaxX="YES" flexibleMaxY="YES"/>
                                <state key="normal" title="Button"/>
                                <buttonConfiguration key="configuration" style="plain" title="←"/>
                            </button>
                            <scrollView clipsSubviews="YES" multipleTouchEnabled="YES" contentMode="scaleToFill" fixedFrame="YES" translatesAutoresizingMaskIntoConstraints="NO" id="SEs-dg-b94">
                                <rect key="frame" x="0.0" y="52" width="375" height="615"/>
                                <autoresizingMask key="autoresizingMask" flexibleMaxX="YES" flexibleMaxY="YES"/>
                                <subviews>
                                    <textView clipsSubviews="YES" multipleTouchEnabled="YES" contentMode="scaleToFill" fixedFrame="YES" editable="NO" textAlignment="natural" translatesAutoresizingMaskIntoConstraints="NO" id="hB8-3m-hCe">
                                        <rect key="frame" x="0.0" y="0.0" width="375" height="615"/>
                                        <autoresizingMask key="autoresizingMask" flexibleMaxX="YES" flexibleMaxY="YES"/>
                                        <color key="backgroundColor" systemColor="systemBackgroundColor"/>
                                        <mutableString key="text">#include &lt; stdio.h &gt;
#include&lt; conio.h &gt;
struct student
{
char name[10];
int * roll_no;
//structure’s pointer type data member
} stud;
void main(void)
{
int a=21;
struct student *pt;
// structure’s pointer type variable
pt=&amp; stud;
clrscr();
pt-&gt;roll_no =&amp; a;
printf(“Enter roll number \n”);
scanf("%d",&amp;(*(pt-&gt;roll_no)));
printf(“Enter name \n”);
scanf("%s", pt-&gt;name);
printf(“\n Accessing student structure data members using pointer variable ”);
printf(“\n Name: %s Roll Number: %d ”, pt→name, *(pt→roll_no));
getch();
}


Output:
Enter roll number
21
Enter name
xyz
Accessing student structure data members using pointer variable
Name: xyz Roll Number: 21</mutableString>
                                        <color key="textColor" systemColor="labelColor"/>
                                        <fontDescription key="fontDescription" type="system" pointSize="14"/>
                                        <textInputTraits key="textInputTraits" autocapitalizationType="sentences"/>
                                    </textView>
                                </subviews>
                                <viewLayoutGuide key="contentLayoutGuide" id="Ghw-Jg-1j5"/>
                                <viewLayoutGuide key="frameLayoutGuide" id="YXf-ru-qEK"/>
                            </scrollView>
                        </subviews>
                        <viewLayoutGuide key="safeArea" id="A94-Eb-cgB"/>
                        <color key="backgroundColor" systemColor="systemBackgroundColor"/>
                    </view>
                </viewController>
                <placeholder placeholderIdentifier="IBFirstResponder" id="chQ-fb-V1h" userLabel="First Responder" customClass="UIResponder" sceneMemberID="firstResponder"/>
            </objects>
            <point key="canvasLocation" x="2742" y="4956"/>
        </scene>
        <!--View Controller-->
        <scene sceneID="E4y-GW-kJi">
            <objects>
                <viewController id="27J-wk-OdN" sceneMemberID="viewController">
                    <view key="view" contentMode="scaleToFill" id="k9v-1H-tvC">
                        <rect key="frame" x="0.0" y="0.0" width="375" height="667"/>
                        <autoresizingMask key="autoresizingMask" widthSizable="YES" heightSizable="YES"/>
                        <subviews>
                            <button opaque="NO" contentMode="scaleToFill" fixedFrame="YES" contentHorizontalAlignment="center" contentVerticalAlignment="center" buttonType="system" lineBreakMode="middleTruncation" translatesAutoresizingMaskIntoConstraints="NO" id="vQu-kT-mo2">
                                <rect key="frame" x="16" y="9" width="39" height="35"/>
                                <autoresizingMask key="autoresizingMask" flexibleMaxX="YES" flexibleMaxY="YES"/>
                                <state key="normal" title="Button"/>
                                <buttonConfiguration key="configuration" style="plain" title="←"/>
                            </button>
                            <scrollView clipsSubviews="YES" multipleTouchEnabled="YES" contentMode="scaleToFill" fixedFrame="YES" translatesAutoresizingMaskIntoConstraints="NO" id="kMa-mE-5lj">
                                <rect key="frame" x="0.0" y="52" width="375" height="615"/>
                                <autoresizingMask key="autoresizingMask" flexibleMaxX="YES" flexibleMaxY="YES"/>
                                <subviews>
                                    <textView clipsSubviews="YES" multipleTouchEnabled="YES" contentMode="scaleToFill" fixedFrame="YES" editable="NO" textAlignment="natural" translatesAutoresizingMaskIntoConstraints="NO" id="kz0-BC-BZq">
                                        <rect key="frame" x="0.0" y="0.0" width="375" height="615"/>
                                        <autoresizingMask key="autoresizingMask" flexibleMaxX="YES" flexibleMaxY="YES"/>
                                        <color key="backgroundColor" systemColor="systemBackgroundColor"/>
                                        <mutableString key="text">#include &lt; stdio.h &gt;
#include&lt; conio.h &gt;
struct student
{
char name[10];
int roll_no;
} stud[2]={{"amol",21},{"suraj",31}};
void main(void)
{
struct student *pt;
pt=&amp;stud[0];
clrscr();
printf("\n Accessing student structure roll number using ++pt-&gt;roll_no: ");
++pt-&gt;roll_no;
/* first pointer pt fetch the value of roll number and then increment the roll number so output is 22 */
printf("\n Roll Number = %d",pt-&gt;roll_no);
printf("\n Accessing student structure roll number using (++pt)-&gt;roll_no: ");
(++pt)-&gt;roll_no;
/* first address stored in pointer pt increment and then shows value of roll number so output is 31 */
printf("\n Roll Number = %d",pt-&gt;roll_no);
getch();
}

Output:
Accessing student structure roll number using ++pt-&gt;roll_no:
Roll Number = 22
Accessing student structure roll number using (++pt)-&gt;roll_no:
Roll Number = 31

Explanation:
++pt→roll_no;
Here first calculate the pt-&gt;roll_no value and then that roll number value get incremented. So pt-&gt;roll_no value is 21 then incremented by 1 so it becomes 22.
However (++pt) →roll_no; Increment pt first means increment address by 1 means one location and then gives the count structure data member’s value at that address location which is 31.</mutableString>
                                        <color key="textColor" systemColor="labelColor"/>
                                        <fontDescription key="fontDescription" type="system" pointSize="14"/>
                                        <textInputTraits key="textInputTraits" autocapitalizationType="sentences"/>
                                    </textView>
                                </subviews>
                                <viewLayoutGuide key="contentLayoutGuide" id="YEK-eN-qXT"/>
                                <viewLayoutGuide key="frameLayoutGuide" id="Cme-Kh-VHs"/>
                            </scrollView>
                        </subviews>
                        <viewLayoutGuide key="safeArea" id="2h4-JF-5y6"/>
                        <color key="backgroundColor" systemColor="systemBackgroundColor"/>
                    </view>
                </viewController>
                <placeholder placeholderIdentifier="IBFirstResponder" id="8mk-Gc-Prm" userLabel="First Responder" customClass="UIResponder" sceneMemberID="firstResponder"/>
            </objects>
            <point key="canvasLocation" x="3393" y="4956"/>
        </scene>
        <!--View Controller-->
        <scene sceneID="XQC-fH-uZD">
            <objects>
                <viewController id="j1Y-aF-YBC" sceneMemberID="viewController">
                    <view key="view" contentMode="scaleToFill" id="Yo2-O5-7rL">
                        <rect key="frame" x="0.0" y="0.0" width="375" height="667"/>
                        <autoresizingMask key="autoresizingMask" widthSizable="YES" heightSizable="YES"/>
                        <subviews>
                            <button opaque="NO" contentMode="scaleToFill" fixedFrame="YES" contentHorizontalAlignment="center" contentVerticalAlignment="center" buttonType="system" lineBreakMode="middleTruncation" translatesAutoresizingMaskIntoConstraints="NO" id="qea-nj-Ha0">
                                <rect key="frame" x="16" y="9" width="39" height="35"/>
                                <autoresizingMask key="autoresizingMask" flexibleMaxX="YES" flexibleMaxY="YES"/>
                                <state key="normal" title="Button"/>
                                <buttonConfiguration key="configuration" style="plain" title="←"/>
                            </button>
                            <scrollView clipsSubviews="YES" multipleTouchEnabled="YES" contentMode="scaleToFill" fixedFrame="YES" translatesAutoresizingMaskIntoConstraints="NO" id="EBA-qZ-1y0">
                                <rect key="frame" x="0.0" y="52" width="375" height="615"/>
                                <autoresizingMask key="autoresizingMask" flexibleMaxX="YES" flexibleMaxY="YES"/>
                                <subviews>
                                    <textView clipsSubviews="YES" multipleTouchEnabled="YES" contentMode="scaleToFill" fixedFrame="YES" editable="NO" textAlignment="natural" translatesAutoresizingMaskIntoConstraints="NO" id="kEC-Fj-bPn">
                                        <rect key="frame" x="0.0" y="0.0" width="375" height="615"/>
                                        <autoresizingMask key="autoresizingMask" flexibleMaxX="YES" flexibleMaxY="YES"/>
                                        <color key="backgroundColor" systemColor="systemBackgroundColor"/>
                                        <mutableString key="text">#include&lt; conio.h &gt;
#include&lt; stdio.h &gt;
struct bdate
{
int day;
int month;
int year ;
};
struct address
{
char street[10];
char city[10];
};
struct stud
{
int roll_no;
char name[10];
struct bdate dt;
struct address add;
}std;
void main()
{
printf(“Enter student data \n”);
printf(“Enter student roll number \n”);
scanf(“%d”,&amp;std.roll_no);
printf(“Enter student name \n”);
scanf(“%s”,std.name);
printf(“Enter student birth date[dd_mm_yy] \n”);
scanf(“%d %d %d ”,&amp;std.dt.day,&amp;std.dt.month,&amp;std.dt.year);
printf(“Enter student address \n”);
scanf(“%s %s ”,&amp;std.add.street, std.add.city);
printf( “Entered student data is : \n”);
printf(“Roll Number: %d Name: %s ”,std.roll_no, std.name);
printf(“Birth Date: %d: %d :%d ”,std.dt.day, std.dt.month, std.dt.year);
printf(“Street :%s City: %s”,std.add.street, std.add.city);
getch();
}

Output:
Enter student data
Enter student roll number
21
Enter student name
Amol
Enter student birth date[dd_mm_yy]
21 10 2000
Enter student address
Gandhi karad
Entered student data is:
Roll Number: 21 Name: Amol
Birth Date: 21: 10 : 2000
Street :Gandhi City: karad</mutableString>
                                        <color key="textColor" systemColor="labelColor"/>
                                        <fontDescription key="fontDescription" type="system" pointSize="14"/>
                                        <textInputTraits key="textInputTraits" autocapitalizationType="sentences"/>
                                    </textView>
                                </subviews>
                                <viewLayoutGuide key="contentLayoutGuide" id="Q0p-it-emc"/>
                                <viewLayoutGuide key="frameLayoutGuide" id="0p8-fC-M5B"/>
                            </scrollView>
                        </subviews>
                        <viewLayoutGuide key="safeArea" id="El6-9S-t5d"/>
                        <color key="backgroundColor" systemColor="systemBackgroundColor"/>
                    </view>
                </viewController>
                <placeholder placeholderIdentifier="IBFirstResponder" id="vzZ-cr-tPU" userLabel="First Responder" customClass="UIResponder" sceneMemberID="firstResponder"/>
            </objects>
            <point key="canvasLocation" x="4025" y="4956"/>
        </scene>
        <!--View Controller-->
        <scene sceneID="bjh-YT-5Pv">
            <objects>
                <viewController id="Whf-YJ-I6j" sceneMemberID="viewController">
                    <view key="view" contentMode="scaleToFill" id="6dl-bD-CT0">
                        <rect key="frame" x="0.0" y="0.0" width="375" height="667"/>
                        <autoresizingMask key="autoresizingMask" widthSizable="YES" heightSizable="YES"/>
                        <subviews>
                            <button opaque="NO" contentMode="scaleToFill" fixedFrame="YES" contentHorizontalAlignment="center" contentVerticalAlignment="center" buttonType="system" lineBreakMode="middleTruncation" translatesAutoresizingMaskIntoConstraints="NO" id="Dfd-t9-cJn">
                                <rect key="frame" x="16" y="9" width="39" height="35"/>
                                <autoresizingMask key="autoresizingMask" flexibleMaxX="YES" flexibleMaxY="YES"/>
                                <state key="normal" title="Button"/>
                                <buttonConfiguration key="configuration" style="plain" title="←"/>
                            </button>
                            <scrollView clipsSubviews="YES" multipleTouchEnabled="YES" contentMode="scaleToFill" fixedFrame="YES" translatesAutoresizingMaskIntoConstraints="NO" id="WCf-au-qAO">
                                <rect key="frame" x="0.0" y="52" width="375" height="615"/>
                                <autoresizingMask key="autoresizingMask" flexibleMaxX="YES" flexibleMaxY="YES"/>
                                <subviews>
                                    <textView clipsSubviews="YES" multipleTouchEnabled="YES" contentMode="scaleToFill" fixedFrame="YES" editable="NO" textAlignment="natural" translatesAutoresizingMaskIntoConstraints="NO" id="2HA-Ew-pyH">
                                        <rect key="frame" x="0.0" y="0.0" width="375" height="615"/>
                                        <autoresizingMask key="autoresizingMask" flexibleMaxX="YES" flexibleMaxY="YES"/>
                                        <color key="backgroundColor" systemColor="systemBackgroundColor"/>
                                        <mutableString key="text">struct student {
int roll_no;
char name[20];
};
struct student std;
void print_record (int , char[]);
// function prototype
void main()
{
char ans ;
clrscr();
do
{
printf(“Enter student record \n ”);
print(“Enter student roll number: ”);
scanf(“%d”, &amp;std.roll_no);
printf(“Enter student name : ”);
scanf(“%s”, std.name);
print_record( std.roll_no , std.name);
printf(“\n Do you want to store more record ?”);
ans=getche();
}while(ans==’y’ || ans==’Y’);
printf(“ End of Program.”);
getch();
}
void print_record( int roll, char name[])
{
printf(“You have entered following student record: \n ”);
printf(“Roll Number:%d Name: %s”, roll, name);
}

Output:
Enter student record
Enter student roll number: 21
Enter student name : kedar
You have entered following student record:
Roll Number:21 Name: kedar Do you want to store more record ? N
End of Program.</mutableString>
                                        <color key="textColor" systemColor="labelColor"/>
                                        <fontDescription key="fontDescription" type="system" pointSize="14"/>
                                        <textInputTraits key="textInputTraits" autocapitalizationType="sentences"/>
                                    </textView>
                                </subviews>
                                <viewLayoutGuide key="contentLayoutGuide" id="d5N-h9-ccv"/>
                                <viewLayoutGuide key="frameLayoutGuide" id="Wj5-3W-NuE"/>
                            </scrollView>
                        </subviews>
                        <viewLayoutGuide key="safeArea" id="cs0-s0-aYi"/>
                        <color key="backgroundColor" systemColor="systemBackgroundColor"/>
                    </view>
                </viewController>
                <placeholder placeholderIdentifier="IBFirstResponder" id="BGL-ai-wGT" userLabel="First Responder" customClass="UIResponder" sceneMemberID="firstResponder"/>
            </objects>
            <point key="canvasLocation" x="4678" y="4956"/>
        </scene>
        <!--View Controller-->
        <scene sceneID="tCW-7R-ggD">
            <objects>
                <viewController id="ORy-06-JEP" sceneMemberID="viewController">
                    <view key="view" contentMode="scaleToFill" id="LFz-0f-zdV">
                        <rect key="frame" x="0.0" y="0.0" width="375" height="667"/>
                        <autoresizingMask key="autoresizingMask" widthSizable="YES" heightSizable="YES"/>
                        <subviews>
                            <button opaque="NO" contentMode="scaleToFill" fixedFrame="YES" contentHorizontalAlignment="center" contentVerticalAlignment="center" buttonType="system" lineBreakMode="middleTruncation" translatesAutoresizingMaskIntoConstraints="NO" id="FER-rP-hIr">
                                <rect key="frame" x="16" y="9" width="39" height="35"/>
                                <autoresizingMask key="autoresizingMask" flexibleMaxX="YES" flexibleMaxY="YES"/>
                                <state key="normal" title="Button"/>
                                <buttonConfiguration key="configuration" style="plain" title="←"/>
                            </button>
                            <scrollView clipsSubviews="YES" multipleTouchEnabled="YES" contentMode="scaleToFill" fixedFrame="YES" translatesAutoresizingMaskIntoConstraints="NO" id="YO3-iI-vHc">
                                <rect key="frame" x="0.0" y="52" width="375" height="615"/>
                                <autoresizingMask key="autoresizingMask" flexibleMaxX="YES" flexibleMaxY="YES"/>
                                <subviews>
                                    <textView clipsSubviews="YES" multipleTouchEnabled="YES" contentMode="scaleToFill" fixedFrame="YES" editable="NO" textAlignment="natural" translatesAutoresizingMaskIntoConstraints="NO" id="pD6-f7-qK9">
                                        <rect key="frame" x="0.0" y="0.0" width="375" height="615"/>
                                        <autoresizingMask key="autoresizingMask" flexibleMaxX="YES" flexibleMaxY="YES"/>
                                        <color key="backgroundColor" systemColor="systemBackgroundColor"/>
                                        <mutableString key="text">struct student
{
int roll_no;
char name[20];
};
struct student std;
void print_record (struct student s);
// function prototype
void main()
{
char ans ;
clrscr();
do
{
printf(“Enter student record \n ”);
print(“Enter student roll number: ”);
scanf(“%d”, &amp;std.roll_no);
printf(“Enter student name : ”);
scanf(“%s”, std.name);
print_record(std);
printf(“\n Do you want to store more record ?”);
ans=getche();
}while(ans==’y’ || ans==’Y’);
printf(“ End of Program.”);
getch();
}
void print_record( struct student s)
{
printf(“You have entered following student record: \n ”);
printf(“Roll Number:%d Name: %s”, s.roll_no, s.name);
}

Output:
Enter student record
Enter student roll number: 21
Enter student name : kedar
You have entered following student record:
Roll Number:21 Name: kedar
Do you want to store more record ?
N
End of Program.</mutableString>
                                        <color key="textColor" systemColor="labelColor"/>
                                        <fontDescription key="fontDescription" type="system" pointSize="14"/>
                                        <textInputTraits key="textInputTraits" autocapitalizationType="sentences"/>
                                    </textView>
                                </subviews>
                                <viewLayoutGuide key="contentLayoutGuide" id="3Mc-dM-kR8"/>
                                <viewLayoutGuide key="frameLayoutGuide" id="HUo-GU-9HZ"/>
                            </scrollView>
                        </subviews>
                        <viewLayoutGuide key="safeArea" id="oeo-Uq-TQg"/>
                        <color key="backgroundColor" systemColor="systemBackgroundColor"/>
                    </view>
                </viewController>
                <placeholder placeholderIdentifier="IBFirstResponder" id="20y-GA-ZQj" userLabel="First Responder" customClass="UIResponder" sceneMemberID="firstResponder"/>
            </objects>
            <point key="canvasLocation" x="5378" y="4956"/>
        </scene>
        <!--View Controller-->
        <scene sceneID="6px-Gj-6hk">
            <objects>
                <viewController id="ffm-N1-6VP" sceneMemberID="viewController">
                    <view key="view" contentMode="scaleToFill" id="eKG-vd-InI">
                        <rect key="frame" x="0.0" y="0.0" width="375" height="667"/>
                        <autoresizingMask key="autoresizingMask" widthSizable="YES" heightSizable="YES"/>
                        <subviews>
                            <button opaque="NO" contentMode="scaleToFill" fixedFrame="YES" contentHorizontalAlignment="center" contentVerticalAlignment="center" buttonType="system" lineBreakMode="middleTruncation" translatesAutoresizingMaskIntoConstraints="NO" id="EQL-wA-wxk">
                                <rect key="frame" x="16" y="9" width="39" height="35"/>
                                <autoresizingMask key="autoresizingMask" flexibleMaxX="YES" flexibleMaxY="YES"/>
                                <state key="normal" title="Button"/>
                                <buttonConfiguration key="configuration" style="plain" title="←"/>
                            </button>
                            <scrollView clipsSubviews="YES" multipleTouchEnabled="YES" contentMode="scaleToFill" fixedFrame="YES" translatesAutoresizingMaskIntoConstraints="NO" id="ZWx-MY-fE9">
                                <rect key="frame" x="0.0" y="52" width="375" height="615"/>
                                <autoresizingMask key="autoresizingMask" flexibleMaxX="YES" flexibleMaxY="YES"/>
                                <subviews>
                                    <textView clipsSubviews="YES" multipleTouchEnabled="YES" contentMode="scaleToFill" fixedFrame="YES" editable="NO" textAlignment="natural" translatesAutoresizingMaskIntoConstraints="NO" id="r0a-Bm-QIg">
                                        <rect key="frame" x="0.0" y="0.0" width="375" height="615"/>
                                        <autoresizingMask key="autoresizingMask" flexibleMaxX="YES" flexibleMaxY="YES"/>
                                        <color key="backgroundColor" systemColor="systemBackgroundColor"/>
                                        <mutableString key="text">#include &lt; stdio.h &gt;
#include &lt; conio.h &gt;
struct item
{
char itemName[30];
int qty;
int price;
};
void readInfo(struct item *i)
{
printf("Enter product name: ");
gets(i-&gt;itemName);
printf("Enter price: ");
scanf("%d",&amp;i-&gt;price);
printf("Enter quantity: ");
scanf("%d",&amp;i-&gt;qty);
}
void printInfo(struct item *i)
{
printf("\nName: %s",i-&gt;itemName);
printf("\nPrice: %d",i-&gt;price);
printf("\nQuantity: %d",i-&gt;qty);
}
void main()
{
struct item item1;
/declare value variable of structure item/
struct item *ptitem1;
/declare pointer type variable of structure item/
ptitem1= &amp; item1;
readInfo (ptitem1);
printInfo(ptitem1);
getch();
}

Output:
Enter product name: Programming Book
Enter price: 210
Enter quantity: 21
Name: Programming Book
Price: 210
Quantity: 50</mutableString>
                                        <color key="textColor" systemColor="labelColor"/>
                                        <fontDescription key="fontDescription" type="system" pointSize="14"/>
                                        <textInputTraits key="textInputTraits" autocapitalizationType="sentences"/>
                                    </textView>
                                </subviews>
                                <viewLayoutGuide key="contentLayoutGuide" id="jZI-Wt-yr3"/>
                                <viewLayoutGuide key="frameLayoutGuide" id="1db-Gd-vv8"/>
                            </scrollView>
                        </subviews>
                        <viewLayoutGuide key="safeArea" id="LFF-Rg-Ul9"/>
                        <color key="backgroundColor" systemColor="systemBackgroundColor"/>
                    </view>
                </viewController>
                <placeholder placeholderIdentifier="IBFirstResponder" id="STr-Ef-luU" userLabel="First Responder" customClass="UIResponder" sceneMemberID="firstResponder"/>
            </objects>
            <point key="canvasLocation" x="6070" y="4956"/>
        </scene>
        <!--View Controller-->
        <scene sceneID="YWa-22-aiQ">
            <objects>
                <viewController id="Y7J-to-oz0" sceneMemberID="viewController">
                    <view key="view" contentMode="scaleToFill" id="uqQ-nN-Uqk">
                        <rect key="frame" x="0.0" y="0.0" width="375" height="667"/>
                        <autoresizingMask key="autoresizingMask" widthSizable="YES" heightSizable="YES"/>
                        <subviews>
                            <button opaque="NO" contentMode="scaleToFill" fixedFrame="YES" contentHorizontalAlignment="center" contentVerticalAlignment="center" buttonType="system" lineBreakMode="middleTruncation" translatesAutoresizingMaskIntoConstraints="NO" id="2pJ-Tw-Bqx">
                                <rect key="frame" x="16" y="9" width="39" height="35"/>
                                <autoresizingMask key="autoresizingMask" flexibleMaxX="YES" flexibleMaxY="YES"/>
                                <state key="normal" title="Button"/>
                                <buttonConfiguration key="configuration" style="plain" title="←"/>
                            </button>
                            <scrollView clipsSubviews="YES" multipleTouchEnabled="YES" contentMode="scaleToFill" fixedFrame="YES" translatesAutoresizingMaskIntoConstraints="NO" id="00m-uL-4dd">
                                <rect key="frame" x="0.0" y="52" width="375" height="615"/>
                                <autoresizingMask key="autoresizingMask" flexibleMaxX="YES" flexibleMaxY="YES"/>
                                <subviews>
                                    <textView clipsSubviews="YES" multipleTouchEnabled="YES" contentMode="scaleToFill" fixedFrame="YES" editable="NO" textAlignment="natural" translatesAutoresizingMaskIntoConstraints="NO" id="Me4-h2-68P">
                                        <rect key="frame" x="0.0" y="0.0" width="375" height="615"/>
                                        <autoresizingMask key="autoresizingMask" flexibleMaxX="YES" flexibleMaxY="YES"/>
                                        <color key="backgroundColor" systemColor="systemBackgroundColor"/>
                                        <mutableString key="text">#include &lt; stdio.h &gt;
#include&lt; conio.h &gt;
#include &lt; string.h &gt;
union student
{ char name[20];
char subject[20];
float percentage;
}record;
void main()
{
clrscr();
strcpy(record.name, "Samit");
strcpy(record.subject, "Maths");
record.percentage = 91.50;
printf(" Name : %s \n", record.name);
printf(" Subject : %s \n", record.subject);
printf(" Percentage : %f \n", record.percentage);
getch();
}

Output:
Name :
Subject :
Percentage : 91.50


Explanation:
We can access only one member of union at a time. We can’t access all member values at the same time in union. But, structure can access all member values at the same time. This is because, Union allocates one common storage space for all its members. Whereas Structure allocates storage space for all its members separately. We can always access only one union member for which value is assigned at last. We can’t access other member values.</mutableString>
                                        <color key="textColor" systemColor="labelColor"/>
                                        <fontDescription key="fontDescription" type="system" pointSize="14"/>
                                        <textInputTraits key="textInputTraits" autocapitalizationType="sentences"/>
                                    </textView>
                                </subviews>
                                <viewLayoutGuide key="contentLayoutGuide" id="0iq-F4-W6B"/>
                                <viewLayoutGuide key="frameLayoutGuide" id="ulj-oZ-rD6"/>
                            </scrollView>
                        </subviews>
                        <viewLayoutGuide key="safeArea" id="QuP-YK-bJZ"/>
                        <color key="backgroundColor" systemColor="systemBackgroundColor"/>
                    </view>
                </viewController>
                <placeholder placeholderIdentifier="IBFirstResponder" id="M4q-HE-pvo" userLabel="First Responder" customClass="UIResponder" sceneMemberID="firstResponder"/>
            </objects>
            <point key="canvasLocation" x="6722" y="4956"/>
        </scene>
        <!--View Controller-->
        <scene sceneID="kaR-YP-gxH">
            <objects>
                <viewController id="BlP-cb-TaD" sceneMemberID="viewController">
                    <view key="view" contentMode="scaleToFill" id="eEb-F1-gz6">
                        <rect key="frame" x="0.0" y="0.0" width="375" height="667"/>
                        <autoresizingMask key="autoresizingMask" widthSizable="YES" heightSizable="YES"/>
                        <subviews>
                            <button opaque="NO" contentMode="scaleToFill" fixedFrame="YES" contentHorizontalAlignment="center" contentVerticalAlignment="center" buttonType="system" lineBreakMode="middleTruncation" translatesAutoresizingMaskIntoConstraints="NO" id="srP-oS-1my">
                                <rect key="frame" x="16" y="9" width="39" height="35"/>
                                <autoresizingMask key="autoresizingMask" flexibleMaxX="YES" flexibleMaxY="YES"/>
                                <state key="normal" title="Button"/>
                                <buttonConfiguration key="configuration" style="plain" title="←"/>
                            </button>
                            <scrollView clipsSubviews="YES" multipleTouchEnabled="YES" contentMode="scaleToFill" fixedFrame="YES" translatesAutoresizingMaskIntoConstraints="NO" id="t8h-Ph-Gtt">
                                <rect key="frame" x="0.0" y="52" width="375" height="615"/>
                                <autoresizingMask key="autoresizingMask" flexibleMaxX="YES" flexibleMaxY="YES"/>
                                <subviews>
                                    <textView clipsSubviews="YES" multipleTouchEnabled="YES" contentMode="scaleToFill" fixedFrame="YES" editable="NO" textAlignment="natural" translatesAutoresizingMaskIntoConstraints="NO" id="mKj-qU-z2n">
                                        <rect key="frame" x="0.0" y="0.0" width="375" height="615"/>
                                        <autoresizingMask key="autoresizingMask" flexibleMaxX="YES" flexibleMaxY="YES"/>
                                        <color key="backgroundColor" systemColor="systemBackgroundColor"/>
                                        <mutableString key="text">#include &lt; stdio.h &gt;
#include&lt; conio.h &gt;
struct Addition
{
int num1;
int num2;
}add;
//function declarations
struct Addition Inputvalue(void);
void Output(struct Addition input);
void main()
{
clrcsr();
add=Inputvalue(); Output(add);
}
//Function returns a structure variable
struct Addition Inputvalue (void)
{
printf("Enter first number: ");
scanf("%d",&amp; add.num1);
printf("Enter second number: ");
scanf("%d",&amp; add.num2);
return add;
}
//Function taking structure variable as argument
void Output(struct Addition input)
{
int sum=((input.num1)+(input.num2));
printf("\n Addition of two numbers=%d", sum);
}

Output:
Enter first number: 21
Enter second number: 32
Addition of two numbers= 53</mutableString>
                                        <color key="textColor" systemColor="labelColor"/>
                                        <fontDescription key="fontDescription" type="system" pointSize="14"/>
                                        <textInputTraits key="textInputTraits" autocapitalizationType="sentences"/>
                                    </textView>
                                </subviews>
                                <viewLayoutGuide key="contentLayoutGuide" id="d9e-KA-1pL"/>
                                <viewLayoutGuide key="frameLayoutGuide" id="GLa-Nw-MjK"/>
                            </scrollView>
                        </subviews>
                        <viewLayoutGuide key="safeArea" id="Wjd-hR-g3C"/>
                        <color key="backgroundColor" systemColor="systemBackgroundColor"/>
                    </view>
                </viewController>
                <placeholder placeholderIdentifier="IBFirstResponder" id="Ohf-Mr-3hq" userLabel="First Responder" customClass="UIResponder" sceneMemberID="firstResponder"/>
            </objects>
            <point key="canvasLocation" x="7374" y="4956"/>
        </scene>
        <!--View Controller-->
        <scene sceneID="n1x-UQ-5UG">
            <objects>
                <viewController id="dn5-qg-HDQ" sceneMemberID="viewController">
                    <view key="view" contentMode="scaleToFill" id="eWG-T3-SER">
                        <rect key="frame" x="0.0" y="0.0" width="375" height="667"/>
                        <autoresizingMask key="autoresizingMask" widthSizable="YES" heightSizable="YES"/>
                        <subviews>
                            <button opaque="NO" contentMode="scaleToFill" fixedFrame="YES" contentHorizontalAlignment="center" contentVerticalAlignment="center" buttonType="system" lineBreakMode="middleTruncation" translatesAutoresizingMaskIntoConstraints="NO" id="Clk-Qt-ouh">
                                <rect key="frame" x="16" y="9" width="39" height="35"/>
                                <autoresizingMask key="autoresizingMask" flexibleMaxX="YES" flexibleMaxY="YES"/>
                                <state key="normal" title="Button"/>
                                <buttonConfiguration key="configuration" style="plain" title="←"/>
                            </button>
                            <scrollView clipsSubviews="YES" multipleTouchEnabled="YES" contentMode="scaleToFill" fixedFrame="YES" translatesAutoresizingMaskIntoConstraints="NO" id="T5a-Vj-RYP">
                                <rect key="frame" x="0.0" y="52" width="375" height="615"/>
                                <autoresizingMask key="autoresizingMask" flexibleMaxX="YES" flexibleMaxY="YES"/>
                                <subviews>
                                    <textView clipsSubviews="YES" multipleTouchEnabled="YES" contentMode="scaleToFill" fixedFrame="YES" editable="NO" textAlignment="natural" translatesAutoresizingMaskIntoConstraints="NO" id="3iq-JB-I0l">
                                        <rect key="frame" x="0.0" y="0.0" width="375" height="615"/>
                                        <autoresizingMask key="autoresizingMask" flexibleMaxX="YES" flexibleMaxY="YES"/>
                                        <color key="backgroundColor" systemColor="systemBackgroundColor"/>
                                        <mutableString key="text">struct Addition
{
int num2;
}*add;
//function declarations
struct Addition * Inputvalue(void);
void Output(struct Addition * input );
void main()
{
struct Addition *s;
clrscr();
s=Inputvalue();
Output(s);
getch();
}
//Function returns a structure pointer type of variable
struct Addition * Inputvalue (void)
{
printf("Enter first number: ");
scanf("%d",&amp; add-&gt;num1);
printf("Enter second number: ");
scanf("%d",&amp; add-&gt;num2);
return &amp; add;
}
//Function taking structure pointer type of variable as argument
void Output(struct Addition* input)
{
int sum=((input-&gt;num1)+(input-&gt;num2));
printf("\n Addition of two numbers=%d", sum);
}

Output:
Enter first number: 21
Enter second number: 32
Addition of two numbers= 53</mutableString>
                                        <color key="textColor" systemColor="labelColor"/>
                                        <fontDescription key="fontDescription" type="system" pointSize="14"/>
                                        <textInputTraits key="textInputTraits" autocapitalizationType="sentences"/>
                                    </textView>
                                </subviews>
                                <viewLayoutGuide key="contentLayoutGuide" id="gOy-AN-aHi"/>
                                <viewLayoutGuide key="frameLayoutGuide" id="g0h-WJ-eEt"/>
                            </scrollView>
                        </subviews>
                        <viewLayoutGuide key="safeArea" id="NsO-8A-nh8"/>
                        <color key="backgroundColor" systemColor="systemBackgroundColor"/>
                    </view>
                </viewController>
                <placeholder placeholderIdentifier="IBFirstResponder" id="kPS-kN-Ft4" userLabel="First Responder" customClass="UIResponder" sceneMemberID="firstResponder"/>
            </objects>
            <point key="canvasLocation" x="8006" y="4956"/>
        </scene>
        <!--View Controller-->
        <scene sceneID="vye-VC-NZJ">
            <objects>
                <viewController id="6NT-Sm-nGQ" sceneMemberID="viewController">
                    <view key="view" contentMode="scaleToFill" id="0RY-d9-HJP">
                        <rect key="frame" x="0.0" y="0.0" width="375" height="667"/>
                        <autoresizingMask key="autoresizingMask" widthSizable="YES" heightSizable="YES"/>
                        <subviews>
                            <button opaque="NO" contentMode="scaleToFill" fixedFrame="YES" contentHorizontalAlignment="center" contentVerticalAlignment="center" buttonType="system" lineBreakMode="middleTruncation" translatesAutoresizingMaskIntoConstraints="NO" id="Qi3-vw-oPg">
                                <rect key="frame" x="16" y="9" width="39" height="35"/>
                                <autoresizingMask key="autoresizingMask" flexibleMaxX="YES" flexibleMaxY="YES"/>
                                <state key="normal" title="Button"/>
                                <buttonConfiguration key="configuration" style="plain" title="←"/>
                            </button>
                            <scrollView clipsSubviews="YES" multipleTouchEnabled="YES" contentMode="scaleToFill" fixedFrame="YES" translatesAutoresizingMaskIntoConstraints="NO" id="VaJ-9N-vNx">
                                <rect key="frame" x="0.0" y="52" width="375" height="615"/>
                                <autoresizingMask key="autoresizingMask" flexibleMaxX="YES" flexibleMaxY="YES"/>
                                <subviews>
                                    <textView clipsSubviews="YES" multipleTouchEnabled="YES" contentMode="scaleToFill" fixedFrame="YES" editable="NO" textAlignment="natural" translatesAutoresizingMaskIntoConstraints="NO" id="cq8-1m-wrS">
                                        <rect key="frame" x="0.0" y="0.0" width="375" height="615"/>
                                        <autoresizingMask key="autoresizingMask" flexibleMaxX="YES" flexibleMaxY="YES"/>
                                        <color key="backgroundColor" systemColor="systemBackgroundColor"/>
                                        <mutableString key="text">1. The number of tokens in the following C statement.
printf("i = %d, &amp;i = %x", i, &amp;i); is
Options:
(a) 3
(b) 26
(c) 10
(d) 21

Answer: option (c)
Explanation:
The smallest individual units are known as C Tokens
The keywords, identifiers, constants, string literals, and operators described in this section are examples of tokens. Punctuation characters such as brackets ([ ]), braces ({ }), parentheses ( ( ) ), and commas (,) are also tokens.

Example:
1. printf("Hello, World! \n");
The tokens for the above statement are:
1) printf
2) (
3) "Hello, World! \n"
4) )
5) ;
So there are 5 tokens

2. printf("i = %d, &amp;i = %x", i, &amp;i);
The tokens for the above statement are:
1) printf
2) (
3) "i = %d, &amp;i = %x"
4) ,
5) i
6) ,
7) &amp;
8) i
9) )
10);
So there are 10 tokens
2. What will be the output of the following C program segment?
char inchar = 'A';
switch (inchar)
{
case 'A' :
printf ("choice A \n") ;
case 'B' :
printf ("choice B ") ;
case 'C' :
case 'D' :
case 'E' :
default:
printf ("No Choice") ;
}
Options:
(a) No choice
(b) Choice A
(c) Choice Choice B No choice
(d) Program gives no output as it is erroneous

Answer: Option (c)
Explanation:
In switch statement if a case is executed and if the case doesn't contain break, then all the subsequent 'case' statements are executed until a break statement is found. If I modify the above code as below:
char inchar = 'B';
switch (inchar)
{
case 'A' :
printf ("choice A \n") ;
case 'B' :
printf ("choice B ") ;
case 'C' :
case 'D' :
case 'E' :
default:
printf ("No Choice") ;
}
The output of the above program will be: Choice B No Choice

3. Consider the following C function definition:
int Trial (int a, int b, int c)
{
if ((a &gt; = b) &amp;&amp; (c &lt; b)) return b;
else if (a &gt; = b) return Trial (a,c,b);
else return Trial (b,a,c);
}
Options:
The function Trial:
(a) Finds the maximum of a, b, and c
(b) Finds the minimum of a, b and c
(c) Finds the middle number of a, b, c
(d) None of the above
Answer: (c)
Explanation:
The first condition, (a &gt; = b) &amp;&amp; (c &lt; b), if true will return the middle number, i.e. b. Again on calling the Trial function, it will return the middle number
. The value of j at the end of the execution of the following C program.
int incr (int i)
{
static int count = 0;
count = count + i;
return (count);
}
main ()
{
int i,j;
for (i = 0; i &lt;=4; i++)
j = incr(i);
}
Options:
(a) 10
(b) 4
(c) 6
(d) 7
Answer: option (a)
Explanation:
count variable is declared as static in incr function. Therefore, static int count = 0;, will assign zero to the count variable in the first call only. When the incr function is called for 2nd, 3rd or 4th times, count variable will hold its previous value, and will not be re-initialized to zero again.
Static variables hold their previous values, and they do not re-initialized when the function is called again. The lifetime of a static variable is in the entire program.
For 1st iteration when i=0, incr(0) =&gt; count= 0 + 0 = 0
For 2nd iteration when i=1, incr(1) =&gt; count= 0 + 1 = 1
For 3rd iteration when i=2, incr(2) =&gt; count= 1 + 2 = 3
For 4th iteration when i=3, incr(3) =&gt; count= 3 + 3 = 6
For 5th iteration when i=4, incr(4) =&gt; count= 6 + 4 = 10

5. Consider the following declaration of a ‘two-dimensional array in C:
char a[100][100];
Assuming that the main memory is byte-addressable and that the array is stored starting from memory address 0, the address of a[40][50] is
Options:
(a) 4040
(b) 4050
(c) 5040
(d) 5050

Answer: option (b)
Explanation:
Address of a[40][50] = Starting Address + 40 x 100 x memory Size + 50 x memory Size
= 0 + 40 x 100 x 1 + 50 x 1 = 4050
Note: Since byte addressable, memory Size = 1
6. Consider the following C-program:
void foo(int n, int sum)
{
int k = 0, j = 0;
if (n == 0) return;
k = n % 10; j = n / 10;
sum = sum + k;
foo (j, sum);
printf ("%d,", k);
}
int main ()
{
int a = 2048, sum = 0;
foo (a, sum);
printf ("%d\n", sum);
getchar();
}
What does the above program print?
Options:
(a) 8, 4, 0, 2, 14
(b) 8, 4, 0, 2, 0
(c) 2, 0, 4, 8, 14
(d) 2, 0, 4, 8, 0

Answer: option (d)
Going through each code, you will find that foo function prints all the digits of a number stored in variable a.
Note:
i) k= n % 10 =&gt; modulus operator will return the remainder. for example, if n=2048, then 2048 %10 will store the value 8 in k.
ii) j is declared as integer datatype in foo function. Therefore after division if the result contains decimal part, it will be truncated and only the integer part will be stored in j. For example if j=2048/10, (actual result = 204.8) then 204 will be stored in j.
iii) The sum variable declared in the main function will not be used by the foo function.
7. Consider the following C function:
int f(int n)
{
static int i = 1;
if (n &gt;= 5)
return n;
n = n+i;
i++;
return f(n);
}
The value returned by f(1) is
Options:
a) 5
b) 6
c) 7
d) 8
Answer: option (c)
Explanation:
Note that i is declared as static variable, first line of the function, static int i = 1;, will be executed only once. Static variables hold their previous values, and they do not re-initialized when the function is called again. The lifetime of a static variable is in the entire program.

8. Consider the following C program
main()
{
int x, y, m, n;
scanf ("%d %d", &amp;x, &amp;y);
/* x &gt; 0 and y &gt; 0 */
m = x; n = y;
while (m != n)
{
if(m&gt;n)
m = m - n;
else
n = n - m;
}
printf("%d", n);
}
The program computes
Options:
a) x + y using repeated subtraction
b) x mod y using repeated subtraction
c) the greatest common divisor of x &amp; y
d)the least common multiple of x &amp; y
Answer: option (c)
Explanation:
Give some values to x and y and work out the code step by step. The program code is an implementation of Euclid's algorithm which is an efficient method for computing the greatest common divisor (GCD) of two integers.

9. Consider the following C-program:
double foo (double); /* Line 1 */
int main () {
double da, db;
// input da
db = foo (da);
}
double foo (double a) {
return a;
}
The above code compiled without any error or warning. If Line 1 is deleted, the above code will show:
Options:
(a) no compile warning or error

(b) some compiler-warnings not leading to unintended results
(c) some compiler-warnings due to type-mismatch eventually leading to unintended results
(d) compiler errors

Answer: option (d)
Error:
Function 'foo' should have a prototype in function main()
10. Consider line number 3 of the following C-program.
int main ( ) { /* Line 1 */
int i, n; /* Line 2 */
fro (i =0, i }
Identify the compiler’s response about this line while creating the object-module:
Options:
(a) No compilation error
(b) Only a lexical error
(c) Only syntactic errors
(d) Both lexical and syntactic errors


Answer: option(c)
Error: Function 'fro' should have a prototype in function main()

11. Consider these two functions and two statements S1 and S2 about them.
int work1(int *a, int i, int j)
{
int x = a[i+2];
a[j] = x+1;
return a[i+2] – 3;
}
int work2(int *a, int i, int j)
{
int t1 = i+2;
int t2 = a[t1];
a[j] = t2+1;
return t2 – 3;
}
S1: The transformation from work1 to work2 is valid, i.e., for any program state and input arguments, work2 will compute the same output and have the same effect on program state as work1
S2: All the transformations applied to work1 to get work2 will always improve the performance (i.e reduce CPU time) of work2 compared to work1 Options:
(a) S1 is false and S2 is false
(b) S1 is false and S2 is true
(c) S1 is true and S2 is false
(d) S1 is true and S2 is true


Answer: option (d)
Explanation:
Both functions work1 &amp; work2 performs the same task, therefore S1 is true.
In S2 it is asking about improvement in performance i.e. reduction in CPU time. When compared work2 will reduce the CPU time, because in work1 a[i+2] is computed twice but in work2 a[i+2] is computed once and stored in t2, and then t2 is used. When we consider the performance in terms of reduction in CPU time, S2 is correct.


12. Consider the following C function:
int f(int n)
{
static int r = 0;
if (n &lt;= 0) return 1;
if (n &gt; 3)
{
r = n;
return f(n-2)+2;
}
return f(n-1)+r;
}
What is the value of f(5) ?
Options:
(a)5
(b)7
(c)9
(d)18

Answer: option (d)
Explanation:
As explained before, Static variables retain their values throughout the life of the program. The steps involved in the execution is shown below. Since f(3) returns value 16, the final step is 16+2 = 18. Therefore f(5) will return value 18.

Common data Questions (13 &amp; 14)
Consider the following recursive C function that takes two arguments
unsigned int foo(unsigned int n, unsigned int r) {
if (n &gt; 0) return (n%r + foo (n/r, r ));
else return 0;
}
13. What is the return value of the function foo when it is called as foo(345, 10) ?
Options:
(a) 345
(b) 12
(c) 5
(d) 3

Answer: option (b)
Explanation:
foo(345,10) = 5 + [ foo(34,10) ]
= 5 + [ 4 + { foo(3,10) } ]
= 5 + [ 4 + { 3 + foo(0,10) } ] = 5 + 4 + 3 + 0 = 12
Therefore, foo function returns sum of digits in the number n, because r = 10.

14. What is the return value of the function foo when it is called as foo(513, 2)?
(a)
9 (b) 8
(c) 5
(d) 2
Answer: option (d)
Explanation:
Executing as above we get the value returned as 2. Here, foo function returns sum of bits of a number n, because r = 2.

15. Choose the correct option to fill ?1 and ?2 so that the program below prints an input string in reverse order. Assume that the input string is terminated by a newline character.

void reverse(void)
{
int c;
if (?1) reverse() ;
?2
}
main()
{ printf ("Enter Text ") ; printf ("\n") ;
reverse(); printf ("\n") ;
}
Options: (a) ?1 is (getchar() != '\n'’)
?2 is getchar(c);
(b) ?1 is (c = getchar() ) != '\n')
?2 is getchar(c);
(c) ?1 is (c != ’\n’)
?2 is putchar(c);
(d) ?1 is ((c = getchar()) != '\n')
?2 is putchar(c);

Answer: option (d)

Explanation:
getchar() is used to get the input character.
putchar() is used to print the character.
The reverse function should read the character you type until you press the "enter" key. Hence before printing, reverse function is called again and again until "enter" key is pressed. Once the "enter" key is pressed; the functions from the function stack run putchar(c) statements one by one. Therefore, last entered character is printed first.
16. The following C declaration
struct node
{
int i;
float j; }; struct node *s[10] ;
define s to be
Options:
(a) An array, each element of which is a pointer to a structure of type node
(b) A structure of 2 fields, each field being a pointer to an array of 10 elements
(c) A structure of 3 fields: an integer, a float, and an array of 10 elements
(d) An array, each element of which is a structure of type node.

Answer: option (a)

17. The most appropriate matching for the following pairs
X: m=malloc(5); m= NULL; 1: using dangling pointers
Y: free(n); n-&gt;value=5; 2: using uninitialized pointers
Z: char *p; *p = ’a’; 3: lost memory

is: Options:
(a) X—1 Y—3 Z-2 (b) X—2 Y—1 Z-3
(C) X—3 Y—2 Z-1
(d) X—3 Y—1 Z-2

Answer: option (d)
Explanation:
malloc(size) - malloc function allocates a block of size bytes from the free data area (heap). On success, malloc returns a pointer to the newly allocated block of memory.
Therefore after execution of m=malloc(5);,m contains a pointer to the newly allocated memory. But m=NULL; statement will store the NULL value to m, without freeing the memory. Since the allocated memory is not yet freed, it is a lost memory.
free - deallocates a memory block allocated previously by malloc, calloc, or realloc. Here, "free(n); n-&gt;value=5;", n is trying to retrieve a value after the memory has freed, hence dangling pointer.
A dangling pointer is a pointer to storage that is no longer allocated.
18. Consider the following C declaration
struct {
short s [5]
union {
float y;
long z;
}u;
} t;
Assume that objects of the type short, float and long occupy 2 bytes, 4 bytes and 8 bytes, respectively. The memory requirement for variable t, ignoring alignment considerations, is
(a) 22 bytes
(b) 14 bytes
(c) 18 bytes
(d) 10 bytes

Answer: option (c)
Explanation:
The amount of memory required to store a structure variable is the sum of the sizes of all its members. But in the case of union, the amount of memory required is the amount required by its largest member.
Therefore u, which is a union member of the struct, occupies only 8 bytes of memory, because the largest memory is 8 bytes consumed by long z;. Another member in the struct is short s [5], this will occupy 10 bytes of memory ( 2 bytes x 5).
Hence total 10 + 8 =18 bytes.

19. Assume the following C variable declaration
int *A [10], B[10][10];
Of the following expressions
I A[2]
II A[2][3]
III B[1]
IV B[2][3]
which will not give compile-time errors if used as left hand sides of assignment statements in a C program?
a) I, II, and IV only
b) II, III, and IV only
c) II and IV only
d) IV only

Answer: option (a)
Explanation:
A is an array of pointers, and A[2] can be used as left hand sides of assignment statements. Suppose we have another array of integers i.e. int marks[]={10,20,30,40}. Then we can assign A[2] = marks; Because marks represents the starting address of the array marks[], and on execution, the address is stored in the 3rd element of array A.
Considering the assignment A[2] = marks;, A[2][3] represents the element 40 (i.e. 4th element in the marks array). Therefore, A[2][3] also can be used as left hand sides of assignment statements. i.e. A[2][3] = 45; will make the contents of marks array as {10,20,30,45}.
B[2][3] =12; represents a simple assignment to an element of a two-dimensional array. So B[2][3] can also be used as left hand sides of assignment statements.
B[1] cannot be used as left hand sides of assignment statements, because, since it is a two-dimensional array B[1] represents an address and we cannot write it.
20. Consider the following C function
void swap (int a, int b)
{
int temp;
temp = a;
a = b;
b = temp;
}
In order to exchange the values of two variables x and y.
a) call swap (x, y)
b) call swap (&amp;x, &amp;y)
c) swap (x,y) cannot be used as it does not return any value
d) swap (x,y) cannot be used as the parameters are passed by value
Answer: option (d)
Explanation:
call swap (x, y) - will swap only the formal parameters (i.e. a and b). The value actual parameters (i.e. x and y) will remain the same, because the value are passed by CALL BY VALUE.
call swap (&amp;x, &amp;y) - will not work because, swap function accepts VALUES as parameters, but we are passing addresses of x and y. option (c): swap (x,y) cannot be used, it is correct, but reason is not correct.
21. What does the following C-statement declare?
int ( * f) (int * ) ;
(a) A function that takes an integer pointer as argument and returns an integer
(b) A function that takes an integer as argument and returns an integer pointer
(c) A pointer to a function that takes an integer pointer as argument and returns an integer.
(d) A function that takes an integer pointer as argument and returns a function pointer

Answer: option (c)
Explanation:
Syntax to declare pointer to a function =&gt; datatype (*pointer_variable)(list of arguments)
To make a pointer to a function =&gt; pointer_variable = function_name
Note: don't use parenthesis of the function.
To call (invoke) the function =&gt; pointer_variable(list of arguments)

22. What does the following program print?
#include&lt; stdio.h&gt;
void f(int *p, int *q)
{
p = q;
*p = 2;
}
int i = 0, j = 1;
int main()
{
f(&amp;i, &amp;j);
printf("%d %d \n", i, j);
getchar();
return 0;
} (a) 2 2
(b) 2 1
(c) 0 1
(d) 0 2

Answer: option (d)
Explanation:
Initially i=0 and j=0
f(&amp;i, &amp;j); on execution p pointer points to i, and q pointer points to j
p = q; means p now contains the address of j, therefore p also now points to j
*p = 2; 2 value is saved in the location where the p is pointing. Since p points to j, value of j is changed to 2 now.
Now returns to main function and prints i and j.Hence i=0 and j=2
23. What does the following fragment of C-program print?
char c[] = "GATE2011";
char *p =c;
printf("%s", p + p[3] - p[1]);
(a) GATE2011
(b) E2011
(c) 2011
(d) 011
Answer: option (c)
Explanation:
p has the base address of character array c.
p[3] is E and p[1] is A
p[3] - p[1] = ASCII value of E - ASCII value of A
= 69 - 65 =4
p = base address of C
Therefore, p + p[3] - p[1] = base_address + 4
(base_address + 4) is the base address of the string 2011.
24. Consider the following C program segment:
char p[20];
char *s = "string";
int length = strlen(s);
int i;
for (i = 0; i &lt; length; i++)
p[i] = s[length — i];
printf("%s",p);
The output of the program is
(a)gnirts
(b)gnirt
(c)string
(d)no output is printed
Ans: option (d)
Explanation:
string is stored in the character array s.
We know that s[0]='s',s[1]='t',s[2]='r',...,s[5]='g',s[6]='\0'
During first iteration of the for loop, i=0, then p[0] = s[6-0]
Therefore p[0]='\0'

Hence during the execution of the printf statement since the very first character is the null character, it assumes that it is the end of the string and no output is printed.
Common Data Question for 25 &amp; 26
Consider the following C program
int a, b, c = 0;
void prtFun (void);
int main ()
{
static int a = 1; /* line 1 */
prtFun();
a += 1;
prtFun();
printf ( "\n %d %d " , a, b) ;
}
void prtFun (void)
{

static int a = 2; /* line 2 */
int b = 1;
a += ++b;
printf (" \n %d %d " , a, b);
}

25. What output will be generated by the given code segment?
(a) (b) (c) (d)
3 1 4 2 4 2 3 1
4 1 6 1 6 2 5 2
4 2 6 1 2 0 5 2

Answer: option (c)
Explanation:
When a function encounters a variable, it will first check for its local variable. If local variable not found then it will go for global variable. In the above program we can see that there are 3 global variable a,b, &amp; c. But in prtFun() we have local variable a &amp; b. Therefore it will not go for the global variable a &amp; b. But in the main function we have only a as the local variable, therefore the print statement in main() will take the value of global variable b and the value of local variable a, while printing.
26. What output will be generated by the given code segment if:
Line 1 is replaced by “auto int a = 1;
Line 2 is replaced by “register int a = 2;
(a) (b) (c) (d)
3 1 4 2 4 2 4 2
4 1 6 1 6 2 4 2
4 2 6 1 2 0 2 0
Answer: option (d)
Explanation:
static variable are now made as non-static, therefore each time when the function is called the variables are again initialized. Note that the register variables are same as auto variables, the only difference is that the register variables are allocated iin the registers, instead of main memory, for faster access.

27. What is printed by the following C program?
int f(int x, int *py, int **ppz)
{
int y, z;
**ppz += 1;
z = **ppz;
*py += 2;
y = *py;
x += 3;v return x + y + z;
} void main()v {
int c, *b, **a;
c = 4;
b = &amp;c;

a = &amp;b;
printf( "%d", f(c,b,a));
getchar();
}
(a) 18
(b) 19
(c) 21
(d) 22
Answer: option(b)
Hint: pointer b and py is pointing to c
Initially c = 4
ppz contains the address of b, therefore **ppz refers to the value to which b is pointing. Since b is pointing towards c, the value of c increments when **ppz += 1; statement executes. Therefore c now becomes 5.
z=**ppz; means z = 5
py pointer is pointing towards c, therefore on execution of *py += 2;, value of c becomes 7.
y=*py; means y = 7
x contains value 4, therefore on execution of x+=3; x becomes 7.</mutableString>
                                        <color key="textColor" systemColor="labelColor"/>
                                        <fontDescription key="fontDescription" type="system" pointSize="14"/>
                                        <textInputTraits key="textInputTraits" autocapitalizationType="sentences"/>
                                    </textView>
                                </subviews>
                                <viewLayoutGuide key="contentLayoutGuide" id="9Hs-CU-qVI"/>
                                <viewLayoutGuide key="frameLayoutGuide" id="egI-YC-gv3"/>
                            </scrollView>
                        </subviews>
                        <viewLayoutGuide key="safeArea" id="WPq-9t-Ucx"/>
                        <color key="backgroundColor" systemColor="systemBackgroundColor"/>
                    </view>
                </viewController>
                <placeholder placeholderIdentifier="IBFirstResponder" id="OwG-jL-4TG" userLabel="First Responder" customClass="UIResponder" sceneMemberID="firstResponder"/>
            </objects>
            <point key="canvasLocation" x="2084" y="5664"/>
        </scene>
    </scenes>
    <inferredMetricsTieBreakers>
        <segue reference="0Ee-OM-DYX"/>
        <segue reference="sSh-nj-JYh"/>
        <segue reference="UCo-rT-esE"/>
        <segue reference="rnd-4V-QpR"/>
        <segue reference="KJO-28-hJa"/>
        <segue reference="5rE-za-ZcZ"/>
        <segue reference="UBv-GP-XjY"/>
        <segue reference="31e-GJ-7hl"/>
    </inferredMetricsTieBreakers>
    <resources>
        <systemColor name="labelColor">
            <color red="0.0" green="0.0" blue="0.0" alpha="1" colorSpace="custom" customColorSpace="sRGB"/>
        </systemColor>
        <systemColor name="systemBackgroundColor">
            <color white="1" alpha="1" colorSpace="custom" customColorSpace="genericGamma22GrayColorSpace"/>
        </systemColor>
        <systemColor name="systemYellowColor">
            <color red="1" green="0.80000000000000004" blue="0.0" alpha="1" colorSpace="custom" customColorSpace="sRGB"/>
        </systemColor>
        <systemColor name="tintColor">
            <color red="0.0" green="0.47843137254901963" blue="1" alpha="1" colorSpace="custom" customColorSpace="sRGB"/>
        </systemColor>
    </resources>
</document>
